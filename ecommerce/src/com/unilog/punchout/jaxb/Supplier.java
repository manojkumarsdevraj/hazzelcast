//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Name"/>
 *         &lt;element ref="{}Comments" minOccurs="0"/>
 *         &lt;element ref="{}SupplierID" maxOccurs="unbounded"/>
 *         &lt;element ref="{}SupplierLocation" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="corporateURL" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="storeFrontURL" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "nameElement",
    "comments",
    "supplierID",
    "supplierLocation"
})
@XmlRootElement(name = "Supplier")
public class Supplier
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 6472062766150012107L;
	@XmlElement(name = "Name", required = true)
    protected Name nameElement;
    @XmlElement(name = "Comments")
    protected Comments comments;
    @XmlElement(name = "SupplierID", required = true)
    protected List<SupplierID> supplierID;
    @XmlElement(name = "SupplierLocation")
    protected List<SupplierLocation> supplierLocation;
    @XmlAttribute(name = "corporateURL")
    @XmlSchemaType(name = "anySimpleType")
    protected String corporateURL;
    @XmlAttribute(name = "storeFrontURL")
    @XmlSchemaType(name = "anySimpleType")
    protected String storeFrontURL;

    /**
     * Gets the value of the nameElement property.
     * 
     * @return
     *     possible object is
     *     {@link Name }
     *     
     */
    public Name getNameElement() {
        return nameElement;
    }

    /**
     * Sets the value of the nameElement property.
     * 
     * @param value
     *     allowed object is
     *     {@link Name }
     *     
     */
    public void setNameElement(Name value) {
        this.nameElement = value;
    }

    /**
     * Gets the value of the comments property.
     * 
     * @return
     *     possible object is
     *     {@link Comments }
     *     
     */
    public Comments getComments() {
        return comments;
    }

    /**
     * Sets the value of the comments property.
     * 
     * @param value
     *     allowed object is
     *     {@link Comments }
     *     
     */
    public void setComments(Comments value) {
        this.comments = value;
    }

    /**
     * Gets the value of the supplierID property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the supplierID property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSupplierID().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SupplierID }
     * 
     * 
     */
    public List<SupplierID> getSupplierID() {
        if (supplierID == null) {
            supplierID = new ArrayList<SupplierID>();
        }
        return this.supplierID;
    }

    /**
     * Gets the value of the supplierLocation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the supplierLocation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSupplierLocation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SupplierLocation }
     * 
     * 
     */
    public List<SupplierLocation> getSupplierLocation() {
        if (supplierLocation == null) {
            supplierLocation = new ArrayList<SupplierLocation>();
        }
        return this.supplierLocation;
    }

    /**
     * Gets the value of the corporateURL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCorporateURL() {
        return corporateURL;
    }

    /**
     * Sets the value of the corporateURL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCorporateURL(String value) {
        this.corporateURL = value;
    }

    /**
     * Gets the value of the storeFrontURL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStoreFrontURL() {
        return storeFrontURL;
    }

    /**
     * Sets the value of the storeFrontURL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStoreFrontURL(String value) {
        this.storeFrontURL = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Name theNameElement;
            theNameElement = this.getNameElement();
            strategy.appendField(locator, this, "nameElement", buffer, theNameElement);
        }
        {
            Comments theComments;
            theComments = this.getComments();
            strategy.appendField(locator, this, "comments", buffer, theComments);
        }
        {
            List<SupplierID> theSupplierID;
            theSupplierID = (((this.supplierID!= null)&&(!this.supplierID.isEmpty()))?this.getSupplierID():null);
            strategy.appendField(locator, this, "supplierID", buffer, theSupplierID);
        }
        {
            List<SupplierLocation> theSupplierLocation;
            theSupplierLocation = (((this.supplierLocation!= null)&&(!this.supplierLocation.isEmpty()))?this.getSupplierLocation():null);
            strategy.appendField(locator, this, "supplierLocation", buffer, theSupplierLocation);
        }
        {
            String theCorporateURL;
            theCorporateURL = this.getCorporateURL();
            strategy.appendField(locator, this, "corporateURL", buffer, theCorporateURL);
        }
        {
            String theStoreFrontURL;
            theStoreFrontURL = this.getStoreFrontURL();
            strategy.appendField(locator, this, "storeFrontURL", buffer, theStoreFrontURL);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Supplier)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Supplier that = ((Supplier) object);
        {
            Name lhsNameElement;
            lhsNameElement = this.getNameElement();
            Name rhsNameElement;
            rhsNameElement = that.getNameElement();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nameElement", lhsNameElement), LocatorUtils.property(thatLocator, "nameElement", rhsNameElement), lhsNameElement, rhsNameElement)) {
                return false;
            }
        }
        {
            Comments lhsComments;
            lhsComments = this.getComments();
            Comments rhsComments;
            rhsComments = that.getComments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "comments", lhsComments), LocatorUtils.property(thatLocator, "comments", rhsComments), lhsComments, rhsComments)) {
                return false;
            }
        }
        {
            List<SupplierID> lhsSupplierID;
            lhsSupplierID = (((this.supplierID!= null)&&(!this.supplierID.isEmpty()))?this.getSupplierID():null);
            List<SupplierID> rhsSupplierID;
            rhsSupplierID = (((that.supplierID!= null)&&(!that.supplierID.isEmpty()))?that.getSupplierID():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplierID", lhsSupplierID), LocatorUtils.property(thatLocator, "supplierID", rhsSupplierID), lhsSupplierID, rhsSupplierID)) {
                return false;
            }
        }
        {
            List<SupplierLocation> lhsSupplierLocation;
            lhsSupplierLocation = (((this.supplierLocation!= null)&&(!this.supplierLocation.isEmpty()))?this.getSupplierLocation():null);
            List<SupplierLocation> rhsSupplierLocation;
            rhsSupplierLocation = (((that.supplierLocation!= null)&&(!that.supplierLocation.isEmpty()))?that.getSupplierLocation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplierLocation", lhsSupplierLocation), LocatorUtils.property(thatLocator, "supplierLocation", rhsSupplierLocation), lhsSupplierLocation, rhsSupplierLocation)) {
                return false;
            }
        }
        {
            String lhsCorporateURL;
            lhsCorporateURL = this.getCorporateURL();
            String rhsCorporateURL;
            rhsCorporateURL = that.getCorporateURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "corporateURL", lhsCorporateURL), LocatorUtils.property(thatLocator, "corporateURL", rhsCorporateURL), lhsCorporateURL, rhsCorporateURL)) {
                return false;
            }
        }
        {
            String lhsStoreFrontURL;
            lhsStoreFrontURL = this.getStoreFrontURL();
            String rhsStoreFrontURL;
            rhsStoreFrontURL = that.getStoreFrontURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "storeFrontURL", lhsStoreFrontURL), LocatorUtils.property(thatLocator, "storeFrontURL", rhsStoreFrontURL), lhsStoreFrontURL, rhsStoreFrontURL)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Name theNameElement;
            theNameElement = this.getNameElement();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nameElement", theNameElement), currentHashCode, theNameElement);
        }
        {
            Comments theComments;
            theComments = this.getComments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comments", theComments), currentHashCode, theComments);
        }
        {
            List<SupplierID> theSupplierID;
            theSupplierID = (((this.supplierID!= null)&&(!this.supplierID.isEmpty()))?this.getSupplierID():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplierID", theSupplierID), currentHashCode, theSupplierID);
        }
        {
            List<SupplierLocation> theSupplierLocation;
            theSupplierLocation = (((this.supplierLocation!= null)&&(!this.supplierLocation.isEmpty()))?this.getSupplierLocation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplierLocation", theSupplierLocation), currentHashCode, theSupplierLocation);
        }
        {
            String theCorporateURL;
            theCorporateURL = this.getCorporateURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "corporateURL", theCorporateURL), currentHashCode, theCorporateURL);
        }
        {
            String theStoreFrontURL;
            theStoreFrontURL = this.getStoreFrontURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storeFrontURL", theStoreFrontURL), currentHashCode, theStoreFrontURL);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
