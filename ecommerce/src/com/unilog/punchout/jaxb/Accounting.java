//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{}Segment" maxOccurs="unbounded"/>
 *           &lt;element ref="{}AccountingSegment" maxOccurs="unbounded"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "segment",
    "accountingSegment"
})
@XmlRootElement(name = "Accounting")
public class Accounting
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = 9154631711763870708L;
	@XmlElement(name = "Segment")
    protected List<Segment> segment;
    @XmlElement(name = "AccountingSegment")
    protected List<AccountingSegment> accountingSegment;
    @XmlAttribute(name = "name", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String name;

    /**
     * Gets the value of the segment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the segment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSegment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Segment }
     * 
     * 
     */
    public List<Segment> getSegment() {
        if (segment == null) {
            segment = new ArrayList<Segment>();
        }
        return this.segment;
    }

    /**
     * Gets the value of the accountingSegment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accountingSegment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccountingSegment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AccountingSegment }
     * 
     * 
     */
    public List<AccountingSegment> getAccountingSegment() {
        if (accountingSegment == null) {
            accountingSegment = new ArrayList<AccountingSegment>();
        }
        return this.accountingSegment;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<Segment> theSegment;
            theSegment = (((this.segment!= null)&&(!this.segment.isEmpty()))?this.getSegment():null);
            strategy.appendField(locator, this, "segment", buffer, theSegment);
        }
        {
            List<AccountingSegment> theAccountingSegment;
            theAccountingSegment = (((this.accountingSegment!= null)&&(!this.accountingSegment.isEmpty()))?this.getAccountingSegment():null);
            strategy.appendField(locator, this, "accountingSegment", buffer, theAccountingSegment);
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Accounting)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Accounting that = ((Accounting) object);
        {
            List<Segment> lhsSegment;
            lhsSegment = (((this.segment!= null)&&(!this.segment.isEmpty()))?this.getSegment():null);
            List<Segment> rhsSegment;
            rhsSegment = (((that.segment!= null)&&(!that.segment.isEmpty()))?that.getSegment():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "segment", lhsSegment), LocatorUtils.property(thatLocator, "segment", rhsSegment), lhsSegment, rhsSegment)) {
                return false;
            }
        }
        {
            List<AccountingSegment> lhsAccountingSegment;
            lhsAccountingSegment = (((this.accountingSegment!= null)&&(!this.accountingSegment.isEmpty()))?this.getAccountingSegment():null);
            List<AccountingSegment> rhsAccountingSegment;
            rhsAccountingSegment = (((that.accountingSegment!= null)&&(!that.accountingSegment.isEmpty()))?that.getAccountingSegment():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountingSegment", lhsAccountingSegment), LocatorUtils.property(thatLocator, "accountingSegment", rhsAccountingSegment), lhsAccountingSegment, rhsAccountingSegment)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Segment> theSegment;
            theSegment = (((this.segment!= null)&&(!this.segment.isEmpty()))?this.getSegment():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "segment", theSegment), currentHashCode, theSegment);
        }
        {
            List<AccountingSegment> theAccountingSegment;
            theAccountingSegment = (((this.accountingSegment!= null)&&(!this.accountingSegment.isEmpty()))?this.getAccountingSegment():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountingSegment", theAccountingSegment), currentHashCode, theAccountingSegment);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
