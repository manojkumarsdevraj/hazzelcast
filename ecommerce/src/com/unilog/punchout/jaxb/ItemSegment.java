//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}ContractItem" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="segmentKey" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "contractItem"
})
@XmlRootElement(name = "ItemSegment")
public class ItemSegment
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = -2339738745776747417L;
	@XmlElement(name = "ContractItem", required = true)
    protected List<ContractItem> contractItem;
    @XmlAttribute(name = "segmentKey")
    @XmlSchemaType(name = "anySimpleType")
    protected String segmentKey;

    /**
     * Gets the value of the contractItem property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contractItem property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContractItem().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ContractItem }
     * 
     * 
     */
    public List<ContractItem> getContractItem() {
        if (contractItem == null) {
            contractItem = new ArrayList<ContractItem>();
        }
        return this.contractItem;
    }

    /**
     * Gets the value of the segmentKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSegmentKey() {
        return segmentKey;
    }

    /**
     * Sets the value of the segmentKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSegmentKey(String value) {
        this.segmentKey = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<ContractItem> theContractItem;
            theContractItem = (((this.contractItem!= null)&&(!this.contractItem.isEmpty()))?this.getContractItem():null);
            strategy.appendField(locator, this, "contractItem", buffer, theContractItem);
        }
        {
            String theSegmentKey;
            theSegmentKey = this.getSegmentKey();
            strategy.appendField(locator, this, "segmentKey", buffer, theSegmentKey);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ItemSegment)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ItemSegment that = ((ItemSegment) object);
        {
            List<ContractItem> lhsContractItem;
            lhsContractItem = (((this.contractItem!= null)&&(!this.contractItem.isEmpty()))?this.getContractItem():null);
            List<ContractItem> rhsContractItem;
            rhsContractItem = (((that.contractItem!= null)&&(!that.contractItem.isEmpty()))?that.getContractItem():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contractItem", lhsContractItem), LocatorUtils.property(thatLocator, "contractItem", rhsContractItem), lhsContractItem, rhsContractItem)) {
                return false;
            }
        }
        {
            String lhsSegmentKey;
            lhsSegmentKey = this.getSegmentKey();
            String rhsSegmentKey;
            rhsSegmentKey = that.getSegmentKey();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "segmentKey", lhsSegmentKey), LocatorUtils.property(thatLocator, "segmentKey", rhsSegmentKey), lhsSegmentKey, rhsSegmentKey)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<ContractItem> theContractItem;
            theContractItem = (((this.contractItem!= null)&&(!this.contractItem.isEmpty()))?this.getContractItem():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contractItem", theContractItem), currentHashCode, theContractItem);
        }
        {
            String theSegmentKey;
            theSegmentKey = this.getSegmentKey();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "segmentKey", theSegmentKey), currentHashCode, theSegmentKey);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
