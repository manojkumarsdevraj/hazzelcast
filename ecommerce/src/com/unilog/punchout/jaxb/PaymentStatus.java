//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}PCard"/>
 *         &lt;element ref="{}Total"/>
 *         &lt;element ref="{}Shipping" minOccurs="0"/>
 *         &lt;element ref="{}Tax" minOccurs="0"/>
 *         &lt;element ref="{}Extrinsic" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="orderID" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="transactionTimestamp" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="type" use="required">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="Sale"/>
 *             &lt;enumeration value="Credit"/>
 *             &lt;enumeration value="Settlement"/>
 *             &lt;enumeration value="Authorization"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="isFailed">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="yes"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="transactionID" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="authorizationID" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "pCard",
    "total",
    "shipping",
    "tax",
    "extrinsic"
})
@XmlRootElement(name = "PaymentStatus")
public class PaymentStatus
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = -5427772132228038087L;
	@XmlElement(name = "PCard", required = true)
    protected PCard pCard;
    @XmlElement(name = "Total", required = true)
    protected Total total;
    @XmlElement(name = "Shipping")
    protected Shipping shipping;
    @XmlElement(name = "Tax")
    protected Tax tax;
    @XmlElement(name = "Extrinsic")
    protected List<Extrinsic> extrinsic;
    @XmlAttribute(name = "orderID", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String orderID;
    @XmlAttribute(name = "transactionTimestamp", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String transactionTimestamp;
    @XmlAttribute(name = "type", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String type;
    @XmlAttribute(name = "isFailed")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String isFailed;
    @XmlAttribute(name = "transactionID")
    @XmlSchemaType(name = "anySimpleType")
    protected String transactionID;
    @XmlAttribute(name = "authorizationID")
    @XmlSchemaType(name = "anySimpleType")
    protected String authorizationID;

    /**
     * Gets the value of the pCard property.
     * 
     * @return
     *     possible object is
     *     {@link PCard }
     *     
     */
    public PCard getPCard() {
        return pCard;
    }

    /**
     * Sets the value of the pCard property.
     * 
     * @param value
     *     allowed object is
     *     {@link PCard }
     *     
     */
    public void setPCard(PCard value) {
        this.pCard = value;
    }

    /**
     * Gets the value of the total property.
     * 
     * @return
     *     possible object is
     *     {@link Total }
     *     
     */
    public Total getTotal() {
        return total;
    }

    /**
     * Sets the value of the total property.
     * 
     * @param value
     *     allowed object is
     *     {@link Total }
     *     
     */
    public void setTotal(Total value) {
        this.total = value;
    }

    /**
     * Gets the value of the shipping property.
     * 
     * @return
     *     possible object is
     *     {@link Shipping }
     *     
     */
    public Shipping getShipping() {
        return shipping;
    }

    /**
     * Sets the value of the shipping property.
     * 
     * @param value
     *     allowed object is
     *     {@link Shipping }
     *     
     */
    public void setShipping(Shipping value) {
        this.shipping = value;
    }

    /**
     * Gets the value of the tax property.
     * 
     * @return
     *     possible object is
     *     {@link Tax }
     *     
     */
    public Tax getTax() {
        return tax;
    }

    /**
     * Sets the value of the tax property.
     * 
     * @param value
     *     allowed object is
     *     {@link Tax }
     *     
     */
    public void setTax(Tax value) {
        this.tax = value;
    }

    /**
     * Gets the value of the extrinsic property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extrinsic property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtrinsic().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Extrinsic }
     * 
     * 
     */
    public List<Extrinsic> getExtrinsic() {
        if (extrinsic == null) {
            extrinsic = new ArrayList<Extrinsic>();
        }
        return this.extrinsic;
    }

    /**
     * Gets the value of the orderID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOrderID() {
        return orderID;
    }

    /**
     * Sets the value of the orderID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrderID(String value) {
        this.orderID = value;
    }

    /**
     * Gets the value of the transactionTimestamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionTimestamp() {
        return transactionTimestamp;
    }

    /**
     * Sets the value of the transactionTimestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionTimestamp(String value) {
        this.transactionTimestamp = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the isFailed property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsFailed() {
        return isFailed;
    }

    /**
     * Sets the value of the isFailed property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsFailed(String value) {
        this.isFailed = value;
    }

    /**
     * Gets the value of the transactionID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionID() {
        return transactionID;
    }

    /**
     * Sets the value of the transactionID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionID(String value) {
        this.transactionID = value;
    }

    /**
     * Gets the value of the authorizationID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthorizationID() {
        return authorizationID;
    }

    /**
     * Sets the value of the authorizationID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthorizationID(String value) {
        this.authorizationID = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            PCard thePCard;
            thePCard = this.getPCard();
            strategy.appendField(locator, this, "pCard", buffer, thePCard);
        }
        {
            Total theTotal;
            theTotal = this.getTotal();
            strategy.appendField(locator, this, "total", buffer, theTotal);
        }
        {
            Shipping theShipping;
            theShipping = this.getShipping();
            strategy.appendField(locator, this, "shipping", buffer, theShipping);
        }
        {
            Tax theTax;
            theTax = this.getTax();
            strategy.appendField(locator, this, "tax", buffer, theTax);
        }
        {
            List<Extrinsic> theExtrinsic;
            theExtrinsic = (((this.extrinsic!= null)&&(!this.extrinsic.isEmpty()))?this.getExtrinsic():null);
            strategy.appendField(locator, this, "extrinsic", buffer, theExtrinsic);
        }
        {
            String theOrderID;
            theOrderID = this.getOrderID();
            strategy.appendField(locator, this, "orderID", buffer, theOrderID);
        }
        {
            String theTransactionTimestamp;
            theTransactionTimestamp = this.getTransactionTimestamp();
            strategy.appendField(locator, this, "transactionTimestamp", buffer, theTransactionTimestamp);
        }
        {
            String theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            String theIsFailed;
            theIsFailed = this.getIsFailed();
            strategy.appendField(locator, this, "isFailed", buffer, theIsFailed);
        }
        {
            String theTransactionID;
            theTransactionID = this.getTransactionID();
            strategy.appendField(locator, this, "transactionID", buffer, theTransactionID);
        }
        {
            String theAuthorizationID;
            theAuthorizationID = this.getAuthorizationID();
            strategy.appendField(locator, this, "authorizationID", buffer, theAuthorizationID);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentStatus)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentStatus that = ((PaymentStatus) object);
        {
            PCard lhsPCard;
            lhsPCard = this.getPCard();
            PCard rhsPCard;
            rhsPCard = that.getPCard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pCard", lhsPCard), LocatorUtils.property(thatLocator, "pCard", rhsPCard), lhsPCard, rhsPCard)) {
                return false;
            }
        }
        {
            Total lhsTotal;
            lhsTotal = this.getTotal();
            Total rhsTotal;
            rhsTotal = that.getTotal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "total", lhsTotal), LocatorUtils.property(thatLocator, "total", rhsTotal), lhsTotal, rhsTotal)) {
                return false;
            }
        }
        {
            Shipping lhsShipping;
            lhsShipping = this.getShipping();
            Shipping rhsShipping;
            rhsShipping = that.getShipping();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shipping", lhsShipping), LocatorUtils.property(thatLocator, "shipping", rhsShipping), lhsShipping, rhsShipping)) {
                return false;
            }
        }
        {
            Tax lhsTax;
            lhsTax = this.getTax();
            Tax rhsTax;
            rhsTax = that.getTax();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tax", lhsTax), LocatorUtils.property(thatLocator, "tax", rhsTax), lhsTax, rhsTax)) {
                return false;
            }
        }
        {
            List<Extrinsic> lhsExtrinsic;
            lhsExtrinsic = (((this.extrinsic!= null)&&(!this.extrinsic.isEmpty()))?this.getExtrinsic():null);
            List<Extrinsic> rhsExtrinsic;
            rhsExtrinsic = (((that.extrinsic!= null)&&(!that.extrinsic.isEmpty()))?that.getExtrinsic():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extrinsic", lhsExtrinsic), LocatorUtils.property(thatLocator, "extrinsic", rhsExtrinsic), lhsExtrinsic, rhsExtrinsic)) {
                return false;
            }
        }
        {
            String lhsOrderID;
            lhsOrderID = this.getOrderID();
            String rhsOrderID;
            rhsOrderID = that.getOrderID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orderID", lhsOrderID), LocatorUtils.property(thatLocator, "orderID", rhsOrderID), lhsOrderID, rhsOrderID)) {
                return false;
            }
        }
        {
            String lhsTransactionTimestamp;
            lhsTransactionTimestamp = this.getTransactionTimestamp();
            String rhsTransactionTimestamp;
            rhsTransactionTimestamp = that.getTransactionTimestamp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionTimestamp", lhsTransactionTimestamp), LocatorUtils.property(thatLocator, "transactionTimestamp", rhsTransactionTimestamp), lhsTransactionTimestamp, rhsTransactionTimestamp)) {
                return false;
            }
        }
        {
            String lhsType;
            lhsType = this.getType();
            String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsIsFailed;
            lhsIsFailed = this.getIsFailed();
            String rhsIsFailed;
            rhsIsFailed = that.getIsFailed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isFailed", lhsIsFailed), LocatorUtils.property(thatLocator, "isFailed", rhsIsFailed), lhsIsFailed, rhsIsFailed)) {
                return false;
            }
        }
        {
            String lhsTransactionID;
            lhsTransactionID = this.getTransactionID();
            String rhsTransactionID;
            rhsTransactionID = that.getTransactionID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionID", lhsTransactionID), LocatorUtils.property(thatLocator, "transactionID", rhsTransactionID), lhsTransactionID, rhsTransactionID)) {
                return false;
            }
        }
        {
            String lhsAuthorizationID;
            lhsAuthorizationID = this.getAuthorizationID();
            String rhsAuthorizationID;
            rhsAuthorizationID = that.getAuthorizationID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "authorizationID", lhsAuthorizationID), LocatorUtils.property(thatLocator, "authorizationID", rhsAuthorizationID), lhsAuthorizationID, rhsAuthorizationID)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PCard thePCard;
            thePCard = this.getPCard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pCard", thePCard), currentHashCode, thePCard);
        }
        {
            Total theTotal;
            theTotal = this.getTotal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "total", theTotal), currentHashCode, theTotal);
        }
        {
            Shipping theShipping;
            theShipping = this.getShipping();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shipping", theShipping), currentHashCode, theShipping);
        }
        {
            Tax theTax;
            theTax = this.getTax();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tax", theTax), currentHashCode, theTax);
        }
        {
            List<Extrinsic> theExtrinsic;
            theExtrinsic = (((this.extrinsic!= null)&&(!this.extrinsic.isEmpty()))?this.getExtrinsic():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extrinsic", theExtrinsic), currentHashCode, theExtrinsic);
        }
        {
            String theOrderID;
            theOrderID = this.getOrderID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orderID", theOrderID), currentHashCode, theOrderID);
        }
        {
            String theTransactionTimestamp;
            theTransactionTimestamp = this.getTransactionTimestamp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionTimestamp", theTransactionTimestamp), currentHashCode, theTransactionTimestamp);
        }
        {
            String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theIsFailed;
            theIsFailed = this.getIsFailed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isFailed", theIsFailed), currentHashCode, theIsFailed);
        }
        {
            String theTransactionID;
            theTransactionID = this.getTransactionID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionID", theTransactionID), currentHashCode, theTransactionID);
        }
        {
            String theAuthorizationID;
            theAuthorizationID = this.getAuthorizationID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "authorizationID", theAuthorizationID), currentHashCode, theAuthorizationID);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
