//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Name"/>
 *         &lt;element ref="{}PostalAddress" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Email" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Phone" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Fax" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}URL" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="role" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" />
 *       &lt;attribute name="addressID" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "nameElement",
    "postalAddress",
    "email",
    "phone",
    "fax",
    "url"
})
@XmlRootElement(name = "Contact")
public class Contact
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = -6778829976451306343L;
	@XmlElement(name = "Name", required = true)
    protected Name nameElement;
    @XmlElement(name = "PostalAddress")
    protected List<PostalAddress> postalAddress;
    @XmlElement(name = "Email")
    protected List<Email> email;
    @XmlElement(name = "Phone")
    protected List<Phone> phone;
    @XmlElement(name = "Fax")
    protected List<Fax> fax;
    @XmlElement(name = "URL")
    protected List<URL> url;
    @XmlAttribute(name = "role")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String role;
    @XmlAttribute(name = "addressID")
    @XmlSchemaType(name = "anySimpleType")
    protected String addressID;

    /**
     * Gets the value of the nameElement property.
     * 
     * @return
     *     possible object is
     *     {@link Name }
     *     
     */
    public Name getNameElement() {
        return nameElement;
    }

    /**
     * Sets the value of the nameElement property.
     * 
     * @param value
     *     allowed object is
     *     {@link Name }
     *     
     */
    public void setNameElement(Name value) {
        this.nameElement = value;
    }

    /**
     * Gets the value of the postalAddress property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the postalAddress property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPostalAddress().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PostalAddress }
     * 
     * 
     */
    public List<PostalAddress> getPostalAddress() {
        if (postalAddress == null) {
            postalAddress = new ArrayList<PostalAddress>();
        }
        return this.postalAddress;
    }

    /**
     * Gets the value of the email property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the email property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEmail().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Email }
     * 
     * 
     */
    public List<Email> getEmail() {
        if (email == null) {
            email = new ArrayList<Email>();
        }
        return this.email;
    }

    /**
     * Gets the value of the phone property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the phone property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhone().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Phone }
     * 
     * 
     */
    public List<Phone> getPhone() {
        if (phone == null) {
            phone = new ArrayList<Phone>();
        }
        return this.phone;
    }

    /**
     * Gets the value of the fax property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the fax property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFax().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Fax }
     * 
     * 
     */
    public List<Fax> getFax() {
        if (fax == null) {
            fax = new ArrayList<Fax>();
        }
        return this.fax;
    }

    /**
     * Gets the value of the url property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the url property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getURL().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link URL }
     * 
     * 
     */
    public List<URL> getURL() {
        if (url == null) {
            url = new ArrayList<URL>();
        }
        return this.url;
    }

    /**
     * Gets the value of the role property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRole() {
        return role;
    }

    /**
     * Sets the value of the role property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRole(String value) {
        this.role = value;
    }

    /**
     * Gets the value of the addressID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAddressID() {
        return addressID;
    }

    /**
     * Sets the value of the addressID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddressID(String value) {
        this.addressID = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Name theNameElement;
            theNameElement = this.getNameElement();
            strategy.appendField(locator, this, "nameElement", buffer, theNameElement);
        }
        {
            List<PostalAddress> thePostalAddress;
            thePostalAddress = (((this.postalAddress!= null)&&(!this.postalAddress.isEmpty()))?this.getPostalAddress():null);
            strategy.appendField(locator, this, "postalAddress", buffer, thePostalAddress);
        }
        {
            List<Email> theEmail;
            theEmail = (((this.email!= null)&&(!this.email.isEmpty()))?this.getEmail():null);
            strategy.appendField(locator, this, "email", buffer, theEmail);
        }
        {
            List<Phone> thePhone;
            thePhone = (((this.phone!= null)&&(!this.phone.isEmpty()))?this.getPhone():null);
            strategy.appendField(locator, this, "phone", buffer, thePhone);
        }
        {
            List<Fax> theFax;
            theFax = (((this.fax!= null)&&(!this.fax.isEmpty()))?this.getFax():null);
            strategy.appendField(locator, this, "fax", buffer, theFax);
        }
        {
            List<URL> theURL;
            theURL = (((this.url!= null)&&(!this.url.isEmpty()))?this.getURL():null);
            strategy.appendField(locator, this, "url", buffer, theURL);
        }
        {
            String theRole;
            theRole = this.getRole();
            strategy.appendField(locator, this, "role", buffer, theRole);
        }
        {
            String theAddressID;
            theAddressID = this.getAddressID();
            strategy.appendField(locator, this, "addressID", buffer, theAddressID);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Contact)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Contact that = ((Contact) object);
        {
            Name lhsNameElement;
            lhsNameElement = this.getNameElement();
            Name rhsNameElement;
            rhsNameElement = that.getNameElement();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nameElement", lhsNameElement), LocatorUtils.property(thatLocator, "nameElement", rhsNameElement), lhsNameElement, rhsNameElement)) {
                return false;
            }
        }
        {
            List<PostalAddress> lhsPostalAddress;
            lhsPostalAddress = (((this.postalAddress!= null)&&(!this.postalAddress.isEmpty()))?this.getPostalAddress():null);
            List<PostalAddress> rhsPostalAddress;
            rhsPostalAddress = (((that.postalAddress!= null)&&(!that.postalAddress.isEmpty()))?that.getPostalAddress():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalAddress", lhsPostalAddress), LocatorUtils.property(thatLocator, "postalAddress", rhsPostalAddress), lhsPostalAddress, rhsPostalAddress)) {
                return false;
            }
        }
        {
            List<Email> lhsEmail;
            lhsEmail = (((this.email!= null)&&(!this.email.isEmpty()))?this.getEmail():null);
            List<Email> rhsEmail;
            rhsEmail = (((that.email!= null)&&(!that.email.isEmpty()))?that.getEmail():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEmail), LocatorUtils.property(thatLocator, "email", rhsEmail), lhsEmail, rhsEmail)) {
                return false;
            }
        }
        {
            List<Phone> lhsPhone;
            lhsPhone = (((this.phone!= null)&&(!this.phone.isEmpty()))?this.getPhone():null);
            List<Phone> rhsPhone;
            rhsPhone = (((that.phone!= null)&&(!that.phone.isEmpty()))?that.getPhone():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phone", lhsPhone), LocatorUtils.property(thatLocator, "phone", rhsPhone), lhsPhone, rhsPhone)) {
                return false;
            }
        }
        {
            List<Fax> lhsFax;
            lhsFax = (((this.fax!= null)&&(!this.fax.isEmpty()))?this.getFax():null);
            List<Fax> rhsFax;
            rhsFax = (((that.fax!= null)&&(!that.fax.isEmpty()))?that.getFax():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fax", lhsFax), LocatorUtils.property(thatLocator, "fax", rhsFax), lhsFax, rhsFax)) {
                return false;
            }
        }
        {
            List<URL> lhsURL;
            lhsURL = (((this.url!= null)&&(!this.url.isEmpty()))?this.getURL():null);
            List<URL> rhsURL;
            rhsURL = (((that.url!= null)&&(!that.url.isEmpty()))?that.getURL():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsURL), LocatorUtils.property(thatLocator, "url", rhsURL), lhsURL, rhsURL)) {
                return false;
            }
        }
        {
            String lhsRole;
            lhsRole = this.getRole();
            String rhsRole;
            rhsRole = that.getRole();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "role", lhsRole), LocatorUtils.property(thatLocator, "role", rhsRole), lhsRole, rhsRole)) {
                return false;
            }
        }
        {
            String lhsAddressID;
            lhsAddressID = this.getAddressID();
            String rhsAddressID;
            rhsAddressID = that.getAddressID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressID", lhsAddressID), LocatorUtils.property(thatLocator, "addressID", rhsAddressID), lhsAddressID, rhsAddressID)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Name theNameElement;
            theNameElement = this.getNameElement();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nameElement", theNameElement), currentHashCode, theNameElement);
        }
        {
            List<PostalAddress> thePostalAddress;
            thePostalAddress = (((this.postalAddress!= null)&&(!this.postalAddress.isEmpty()))?this.getPostalAddress():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalAddress", thePostalAddress), currentHashCode, thePostalAddress);
        }
        {
            List<Email> theEmail;
            theEmail = (((this.email!= null)&&(!this.email.isEmpty()))?this.getEmail():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEmail), currentHashCode, theEmail);
        }
        {
            List<Phone> thePhone;
            thePhone = (((this.phone!= null)&&(!this.phone.isEmpty()))?this.getPhone():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phone", thePhone), currentHashCode, thePhone);
        }
        {
            List<Fax> theFax;
            theFax = (((this.fax!= null)&&(!this.fax.isEmpty()))?this.getFax():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fax", theFax), currentHashCode, theFax);
        }
        {
            List<URL> theURL;
            theURL = (((this.url!= null)&&(!this.url.isEmpty()))?this.getURL():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theURL), currentHashCode, theURL);
        }
        {
            String theRole;
            theRole = this.getRole();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "role", theRole), currentHashCode, theRole);
        }
        {
            String theAddressID;
            theAddressID = this.getAddressID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressID", theAddressID), currentHashCode, theAddressID);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
