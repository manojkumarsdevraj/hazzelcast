
getBeforeLoginTopMenu:SELECT CATEGORY_NAME,CATEGORY_CODE FROM TAXONOMY_TREE WHERE LEVEL_NUMBER=1 ORDER BY DISP_SEQ ASC

loggedInTopMenu:SELECT TT.TAXONOMY_TREE_ID, TT.CATEGORY_CODE, LTT.CATEGORY_NAME, TT.LEVEL_NUMBER, TT.DISP_SEQ FROM TAXONOMY_TREE TT, LOC_TAXONOMY_TREE LTT WHERE TT.TAXONOMY_ID =1 AND TT.LEVEL_NUMBER =1 AND TT.TAXONOMY_TREE_ID = LTT.LOC_TAXONOMY_TREE_ID AND LTT.LOCALE_ID =1 ORDER BY TT.DISP_SEQ

checkAlwaysApprover:SELECT CU.*,CUR.USER_ID,CUR.ROLE_ID,CUR.USER_EDITED,CUR.APPROVE_LIMIT,CUR.ALWAYS_APPROVER FROM CIMM_USER_ROLES CUR, CIMM_USERS CU WHERE CUR.USER_ID = ? AND CUR.USER_ID = CU.USER_ID AND CU.STATUS ='Y'

taxonomyLevelFiler:SELECT TT.TAXONOMY_TREE_ID, TT.CATEGORY_CODE, LTT.CATEGORY_NAME, TT.IMAGE_NAME, TT.LEVEL_NUMBER, TT.DISP_SEQ FROM TAXONOMY_TREE TT, LOC_TAXONOMY_TREE LTT WHERE TT.TAXONOMY_ID =? AND TT.LEVEL_NUMBER =? AND TT.STATUS = 'Y' AND TT.TAXONOMY_TREE_ID = LTT.TAXONOMY_TREE_ID AND LTT.LOCALE_ID =? ORDER BY TT.DISP_SEQ

categoryLevelFilter:SELECT LTMV.TAXONOMY_TREE_ID,LTMV.CATEGORY_NAME,TT.LEVEL_NUMBER,TT.IMAGE_NAME FROM LOC_TAXONOMY_MV ltmv, TAXONOMY_TREE tt where tt.^LEVEL^=? and TT.LEVEL_NUMBER=? and LTMV.TAXONOMY_TREE_ID= TT.TAXONOMY_TREE_ID

itemLevelFilter:SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.SHORT_DESC, IP.NET_PRICE, IP.SALES_UOM, IP.PACK_DESC, IDMV.NOTES FROM ITEM_DETAILS_MV IDMV, ITEM_PRICES IP WHERE IDMV.ITEM_ID IN (SELECT ITEM_ID FROM ACTIVE_ONLINE_ITEMS_MV) AND IDMV.ITEM_ID IN (SELECT ITEM_ID FROM ITEM_CLASSIFICATION IC WHERE IC.TAXONOMY_TREE_ID =?) AND IDMV.SUBSET_ID=? AND IP.ITEM_PRICE_ID= IDMV.ITEM_PRICE_ID UNION SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER,  IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.SHORT_DESC, IP.NET_PRICE, IP.SALES_UOM, IP.PACK_DESC, IDMV.NOTES FROM ITEM_DETAILS_MV IDMV, ITEM_PRICES IP WHERE IDMV.ITEM_ID IN (SELECT ITEM_ID FROM ACTIVE_ONLINE_ITEMS_MV) AND IDMV.ITEM_ID IN (SELECT ITEM_ID FROM ITEM_CLASSIFICATION IC WHERE IC.TAXONOMY_TREE_ID =?) AND IDMV.SUBSET_ID=1  AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND IDMV.ITEM_ID NOT IN (SELECT ITEM_ID FROM ITEM_DETAILS_MV IDMV WHERE ITEM_ID IN (SELECT ITEM_ID FROM ITEM_CLASSIFICATION IC WHERE IC.TAXONOMY_TREE_ID =?) AND IDMV.SUBSET_ID=?)

brandQuery:SELECT LP.*, IDMV.* FROM LOC_PRODUCTS LP, ITEM_DETAILS_MV IDMV WHERE IDMV.ITEM_PRICE_ID =? AND IDMV.PRODUCT_ID=LP.PRODUCT_ID(+)

getListOfAssignedGeneralUserList:select CUA.*,CU.EMAIL,CU.FIRST_NAME,CU.LAST_NAME,CU.ADDRESS1,CU.ADDRESS2,CU.STATE,CU.CITY,CU.ZIP from CIMM_USERS_APPROVERS CUA, CIMM_USERS CU WHERE CUA.APPROVER_ID = ? AND CU.USER_ID = CUA.user_ID AND CU.STATUS = 'Y'

manufacturerListQuery:SELECT * FROM(SELECT BRAND_ID,BRAND_NAME,ROW_NUMBER() OVER (ORDER BY NLSSORT(BRAND_NAME, 'NLS_SORT = GENERIC_M')) AS RN FROM(SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME FROM BRANDS B,ITEM_DETAILS_MV IDMV WHERE  B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID = ?)) WHERE RN < = 50

brandAlphaIndexQuery:SELECT DISTINCT UPPER((SUBSTR(TRIM(B.BRAND_NAME),1,1))) as BRAND_NAME FROM BRANDS B, ITEM_DETAILS_MV IDMV  WHERE B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID = ? ORDER BY BRAND_NAME ASC

brandAlphaIndexQueryCustom:SELECT DISTINCT UPPER((SUBSTR(TRIM(B.BRAND_NAME),1,1))) AS BRAND_NAME FROM BRANDS B, ITEM_DETAILS_MV IDMV, BRAND_CF_VALUES_VIEW BCFVV WHERE B.STATUS = 'Y' AND B.BRAND_ID    = IDMV.BRAND_ID AND BCFVV.FIELD_NAME='FEATURED_BRANDS' AND BCFVV.FILED_VALUE='Y' AND BCFVV.BRAND_ID=IDMV.BRAND_ID ORDER BY BRAND_NAME ASC

brandAlphaIndexQueryWithGenralSubset:SELECT DISTINCT UPPER((SUBSTR(TRIM(B.BRAND_NAME),1,1))) as BRAND_NAME FROM BRANDS B, ITEM_DETAILS_MV IDMV  WHERE B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID in (?,?) ORDER BY BRAND_NAME ASC

brandAlphaIndexQueryWithGenralSubsetCustom:SELECT DISTINCT UPPER((SUBSTR(TRIM(B.BRAND_NAME),1,1))) AS BRAND_NAME FROM BRANDS B, ITEM_DETAILS_MV IDMV, BRAND_CF_VALUES_VIEW BCFVV WHERE B.STATUS = 'Y' AND B.BRAND_ID    = IDMV.BRAND_ID AND BCFVV.FIELD_NAME='FEATURED_BRANDS' AND BCFVV.FILED_VALUE='Y' AND BCFVV.BRAND_ID=IDMV.BRAND_ID ORDER BY BRAND_NAME ASC

getMyItemList: SELECT MI.YTD,MI.PART_NUMBER,MI.UNIT_STOCK,MI.ID_LIST,MI.LAST_PURCHASED_UNIT,IM.ITEM_ID,IP.ITEM_PRICE_ID,MI.LAST_PURCHASED_DATE,MI.LAST_PURCHASED_QUANTITY,CLC.CATEGORY_NAME FROM CNES_ENTITY_SPECIFIC_ITEMS MI,ITEM_MASTER IM,CUSTOMER_LEVEL_CATEGORIES CLC,ITEM_PRICES IP WHERE IM.ITEM_ID=IP.ITEM_ID AND UPPER(IM.PART_NUMBER) = UPPER(MI.PART_NUMBER) AND IM.PART_NUMBER = CLC.PART_NUMBER(+) AND MI.CUSTOMER_NUMBER=CLC.ENTITY_ID(+) AND MI.CUSTOMER_NUMBER=? AND IM.ACTIVE='Y' AND IM.DISPLAY_ONLINE='Y' AND IP.subset_id IN (?, ?)

manufacturerBrandsList :SELECT IM.ITEM_ID,IM.PRODUCT_ID,PRO.PRODUCT_NAME,PRO.PRODUCT_IMAGE_ID,IM.BRAND_ID,IM.PART_NUMBER,IM.MANUFACTURER_PART_NUMBER,IM.LIST_PRICE,IM.COST_PRICE,IM.QTY_AVAILABLE,IM.UPC, IM.PRICE_RULE_ID, LOC_IM.ITEM_MARKETING_DESC, LOC_IM.ITEM_FEATURES, LOC_IM.LONG_DESC1, LOC_IM.LONG_DESC2,LOC_IM.SHORT_DESC FROM ITEM_MASTER IM,LOC_ITEM_MASTER LOC_IM, PRODUCTS PRO  WHERE LOC_IM.ITEM_ID\=IM.ITEM_ID  AND PRO.PRODUCT_ID\=IM.PRODUCT_ID AND IM.ACTIVE\='Y' AND IM.BRAND_ID\= ? 
	
quickOrderQuery :SELECT ITEM_ID, SUBSET_ID, PART_NUMBER,  SHORT_DESC, INVOICE_DESC, PACK_DESC, SALES_UOM, IMAGE_NAME, IMAGE_TYPE, NET_PRICE,MIN_ORDER_QTY,ORDER_QTY_INTERVAL FROM ITEM_DETAILS_MV WHERE SUBSET_ID\=? AND 
	
quickOrderQuery1:SELECT ITEM_ID, SUBSET_ID, PART_NUMBER,  SHORT_DESC, INVOICE_DESC, PACK_DESC, SALES_UOM, IMAGE_NAME, IMAGE_TYPE, NET_PRICE,MIN_ORDER_QTY,ORDER_QTY_INTERVAL FROM ITEM_DETAILS_MV WHERE SUBSET_ID\=? AND 
	
quickOrderQueryAppend : AND ITEM_ID NOT IN (SELECT ITEM_ID FROM ITEM_DETAILS_MV WHERE SUBSET_ID \= ? AND 
	
breadCrumbsQuery : SELECT REPLACESELECTTT.TAXONOMY_TREE_ID TAXONOMYTREEID, LTT.CATEGORY_NAME CATEGORYNAME, TT.LEVEL_NUMBER FROM TAXONOMY_TREE TT, LOC_TAXONOMY_TREE LTTREPLACEFROM WHERE TT.TAXONOMY_TREE_ID \=? AND LTT.TAXONOMY_TREE_ID \=TT.TAXONOMY_TREE_ID AND LTT.LOCALE_ID \=? REPLACEWHERE
	
searchItemQuery : SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.SHORT_DESC, IDMV.NET_PRICE, IDMV.SALES_UOM, IDMV.NOTES, PSR.RANK FROM ITEM_DETAILS_MV IDMV, POPULAR_SEARCH_RESULTS PSR WHERE PSR.PSID = ? AND IDMV.ITEM_ID = PSR.LINE_ITEM_ID AND IDMV.SUBSET_ID=? UNION SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME,IDMV.SHORT_DESC, IDMV.NET_PRICE, IDMV.SALES_UOM, IDMV.NOTES, PSR.RANK FROM ITEM_DETAILS_MV IDMV, POPULAR_SEARCH_RESULTS PSR WHERE PSR.PSID =? AND IDMV.ITEM_ID = PSR.LINE_ITEM_ID AND IDMV.SUBSET_ID =1 AND IDMV.ITEM_ID NOT IN (SELECT ITEM_ID FROM ITEM_DETAILS_MV IDMV WHERE ITEM_ID IN (SELECT ITEM_ID FROM POPULAR_SEARCH_RESULTS WHERE PSID =? ) AND IDMV.SUBSET_ID=? )
	
narrowSearchResult : SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.SHORT_DESC, IDMV.NET_PRICE, IDMV.SALES_UOM, IDMV.NOTES FROM ITEM_DETAILS_MV IDMV WHERE ITEM_ID IN (REPLACESTRING) AND IDMV.SUBSET_ID=? UNION SELECT IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.SHORT_DESC, IDMV.NET_PRICE, IDMV.SALES_UOM, IDMV.NOTES FROM ITEM_DETAILS_MV IDMV WHERE ITEM_ID IN (REPLACESTRING) AND IDMV.SUBSET_ID =1 AND IDMV.ITEM_ID NOT IN (SELECT ITEM_ID FROM ITEM_DETAILS_MV IDMV WHERE ITEM_ID IN (REPLACESTRING) AND IDMV.SUBSET_ID=?)
	
insertItemToCartQuery :INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,UOM) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?)

insertItemsToCartWithShipVia :INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,SITE_ID,LINE_ITEM_COMMENT, CATALOG_ID,UOM, PRICE, MIN_ORDER_QTY, ITEM_WEIGHT, UNITS,ITEM_LEVEL_SHIPVIA,ITEM_LEVEL_SHIPVIA_DESC,ADDITIONAL_PROPERTIES) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?)

insertItemsToCartWithShipViaWitoutLineComment :INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,SITE_ID,CATALOG_ID,UOM, PRICE, MIN_ORDER_QTY, ITEM_WEIGHT, UNITS,ITEM_LEVEL_SHIPVIA,ITEM_LEVEL_SHIPVIA_DESC,ADDITIONAL_PROPERTIES) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?)
	
updateCartQuery : UPDATE CART SET QTY = ?,LINE_ITEM_COMMENT=?,ITEMLEVEL_REQUIREDBYDATE=?, ORDER_QUOTE_NUMBER = ? WHERE USER_ID=? AND CART_ID=?

updateCartQueryWithAddtionalProps : UPDATE CART SET QTY = ?,LINE_ITEM_COMMENT=?,ITEMLEVEL_REQUIREDBYDATE=?, ORDER_QUOTE_NUMBER = ?, ADDITIONAL_PROPERTIES = ? WHERE USER_ID=? AND CART_ID=?

updateCartQueryWitoutLineItemComment:UPDATE CART SET QTY = ?,ITEMLEVEL_REQUIREDBYDATE=? WHERE USER_ID=? AND CART_ID=?

updateCartBySessionIdQuery:UPDATE CART SET QTY = ?,LINE_ITEM_COMMENT=?,ITEMLEVEL_REQUIREDBYDATE=? WHERE SESSIONID=? AND CART_ID=?

updateCartQuantityOnlyQuery:UPDATE CART SET QTY = ? WHERE USER_ID=? AND CART_ID=?

updateCartItemLevelShipVia:UPDATE CART SET ITEM_LEVEL_SHIPVIA_DESC = ? WHERE USER_ID=? AND CART_ID=? AND ITEM_ID = ?
	
deleteCartQuery :DELETE FROM CART WHERE USER_ID=? AND CART_ID=?
	
deleteFromCart :DELETE FROM CART WHERE USER_ID=?
	
deleteFromCartBySession :DELETE FROM CART WHERE USER_ID=? AND SESSIONID=?

deleteFromCartCustomBySession :DELETE FROM CART WHERE USER_ID=? AND SESSIONID=? AND ITEM_LEVEL_SHIPVIA LIKE ?
	
selectFromCartQuery : SELECT CART_ID, QTY FROM CART WHERE USER_ID = ? AND ITEM_ID=?

selectFromCartQueryBeforeLogin : SELECT CART_ID, QTY FROM CART WHERE SESSIONID = ? AND ITEM_ID=? AND UOM=?
	
productListIdNameQuery : select * from(SELECT SAVED_LIST_ID,SAVED_LIST_NAME FROM SAVED_ITEM_LIST WHERE (USER_ID=? OR BUYING_COMPANY_ID = ?) AND TYPE=? AND SITE_ID=?) ORDER BY NLSSORT(SAVED_LIST_NAME, 'NLS_SORT = GENERIC_M') ASC
	
insertProductGroupNameForCustomer : INSERT INTO SAVED_ITEM_LIST(SAVED_LIST_ID,SAVED_LIST_NAME,USER_ID,UPDATED_DATETIME,TYPE,SITE_ID,BUYING_COMPANY_ID) VALUES(?,?,?,SYSDATE,?,?,?)

insertProductGroupName :INSERT INTO SAVED_ITEM_LIST (SAVED_LIST_ID,SAVED_LIST_NAME,USER_ID,UPDATED_DATETIME,TYPE,SITE_ID) VALUES(?,?,?,SYSDATE,?,?)
	
insertApproveCartName :INSERT INTO SAVED_ITEM_LIST(SAVED_LIST_ID,SAVED_LIST_NAME,USER_ID,UPDATED_DATETIME,TYPE,ASSIGNED_SHIP_TO,SENT_BY_APPR_USER_ID,SITE_ID) VALUES(?,?,?,SYSDATE,?,?,?,?)
	
validateGroupName:SELECT SAVED_LIST_ID FROM SAVED_ITEM_LIST WHERE UPPER(SAVED_LIST_NAME)=? AND USER_ID=? AND TYPE=?

insertItemToGroupQuery : INSERT INTO SAVED_LIST_ITEMS (LIST_ITEM_ID,SAVED_LIST_ID,ITEM_ID,QTY,ITEMLEVEL_REQUIREDBYDATE,CATALOG_ID,LINE_ITEM_COMMENT,ITEM_LEVEL_SHIPVIA,ITEM_LEVEL_SHIPVIA_DESC,UOM,UPDATED_DATETIME,BC_ADDRESS_BOOK_ID,PRICE) VALUES (SAVED_LIST_ITEMS_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)

selectFromProductGroup :SELECT LIST_ITEM_ID, QTY FROM SAVED_LIST_ITEMS WHERE SAVED_LIST_ID = ? AND ITEM_ID=?
	
updateProductGroup : UPDATE SAVED_LIST_ITEMS SET QTY = ? WHERE LIST_ITEM_ID = ?

selectGroupItem : SELECT TT.CATEGORY_NAME, SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, '' AS ADDITIONAL_PROPERTIES, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE SLI.SAVED_LIST_ID \= ? AND CU.USER_ID \= ? AND BC.BUYING_COMPANY_ID \= ? AND (SIL.USER_ID \= CU.USER_ID OR SIL.BUYING_COMPANY_ID \= CU.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID \= BC.PARENT_COMPANY_ID OR SIL.BUYING_COMPANY_ID \= BC.BUYING_COMPANY_ID) AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID \= IP.ITEM_ID AND SIL.SAVED_LIST_ID \= SLI.SAVED_LIST_ID AND IM.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID \=? AND TT.TAXONOMY_TREE_ID(+) = IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) = SLI.ITEM_ID AND IC.DEFAULT_CATEGORY = 'Y' AND TT.TAXONOMY_ID\= ? UNION SELECT TT.CATEGORY_NAME, SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, '' AS ADDITIONAL_PROPERTIES, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE SLI.SAVED_LIST_ID \= ? AND CU.USER_ID \= ? AND BC.BUYING_COMPANY_ID \= ? AND (SIL.USER_ID \= CU.USER_ID OR SIL.BUYING_COMPANY_ID \= CU.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID \= BC.PARENT_COMPANY_ID OR SIL.BUYING_COMPANY_ID \= BC.BUYING_COMPANY_ID) AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID \= IP.ITEM_ID AND SIL.SAVED_LIST_ID \= SLI.SAVED_LIST_ID AND IM.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID \=? AND TT.TAXONOMY_TREE_ID(+) \= IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) \= SLI.ITEM_ID AND IC.DEFAULT_CATEGORY \= 'Y' AND TT.TAXONOMY_ID\= ? AND IDMV.ITEM_ID NOT IN (SELECT SLI.ITEM_ID FROM SAVED_LIST_ITEMS SLI, ITEM_DETAILS_MV IDMV WHERE SLI.SAVED_LIST_ID \= ? AND IDMV.ITEM_ID \= SLI.ITEM_ID AND IDMV.SUBSET_ID \=?)

selectGroupItemByUser: SELECT TT.CATEGORY_NAME, SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM, IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL( IP.PACKAGE_QTY, IDMV.PACKAGE_QTY) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER,( (IP.NET_PRICE / IP.SALES_QTY)* SLI.QTY ) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE SLI.SAVED_LIST_ID \ = ? AND CU.USER_ID \ = ? AND BC.BUYING_COMPANY_ID \ = ? AND ( SIL.SENT_BY_APPR_USER_ID \ = CU.USER_ID OR SIL.BUYING_COMPANY_ID \ = CU.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID \ = BC.PARENT_COMPANY_ID OR SIL.BUYING_COMPANY_ID \ = BC.BUYING_COMPANY_ID ) AND IP.ITEM_PRICE_ID \ = IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID \ = IP.ITEM_ID AND SIL.SAVED_LIST_ID \ = SLI.SAVED_LIST_ID AND IM.ITEM_ID \ = IP.ITEM_ID AND IDMV.SUBSET_ID \ = ? AND TT.TAXONOMY_TREE_ID(+) = IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) = SLI.ITEM_ID AND IC.DEFAULT_CATEGORY = 'Y' AND TT.TAXONOMY_ID\= ? UNION SELECT TT.CATEGORY_NAME, SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM, IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL( IP.PACKAGE_QTY, IDMV.PACKAGE_QTY ) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, ( (IP.NET_PRICE / IP.SALES_QTY)* SLI.QTY ) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE SLI.SAVED_LIST_ID \ = ? AND CU.USER_ID \ = ? AND BC.BUYING_COMPANY_ID \ = ? AND ( SIL.SENT_BY_APPR_USER_ID \ = CU.USER_ID OR SIL.BUYING_COMPANY_ID \ = CU.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID \ = BC.PARENT_COMPANY_ID OR SIL.BUYING_COMPANY_ID \ = BC.BUYING_COMPANY_ID ) AND IP.ITEM_PRICE_ID \ = IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID \ = IP.ITEM_ID AND SIL.SAVED_LIST_ID \ = SLI.SAVED_LIST_ID AND IM.ITEM_ID \ = IP.ITEM_ID AND IDMV.SUBSET_ID \ = ? AND TT.TAXONOMY_TREE_ID(+) \= IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) \= SLI.ITEM_ID AND IC.DEFAULT_CATEGORY \= 'Y' AND TT.TAXONOMY_ID\= ? AND IDMV.ITEM_ID NOT IN ( SELECT SLI.ITEM_ID FROM SAVED_LIST_ITEMS SLI, ITEM_DETAILS_MV IDMV WHERE SLI.SAVED_LIST_ID \ = ? AND IDMV.ITEM_ID \ = SLI.ITEM_ID AND IDMV.SUBSET_ID \ = ? ) 

selectGroupItemForSharedCart :SELECT SLI.LIST_ITEM_ID,SLI.LIST_ITEM_ID AS CART_ID,SIL.UPDATED_DATETIME, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.STATUS,SIL.ASSIGNED_SHIP_TO,IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE,IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID,IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC,IDMV.UPC,NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM,IP.SALES_QTY,ip.PACKAGE_FLAG,NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY, IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE,IP.NET_PRICE,SLI.QTY,IM.QTY_AVAILABLE,SLI.UOM,SIL.SENT_BY_APPR_USER_ID,IDMV.MIN_ORDER_QTY,  IDMV.ORDER_QTY_INTERVAL,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * SLI.QTY) "EXTPRICE" , '' LINE_ITEM_COMMENT,SLI.ITEM_LEVEL_SHIPVIA,SLI.ITEM_LEVEL_SHIPVIA_DESC,SLI.ITEMLEVEL_REQUIREDBYDATE,SLI.CATALOG_ID,IDMV.WEIGHT,SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP,CIMM_USERS CU, CART_SHARE CS, ITEM_MASTER IM WHERE SLI.SAVED_LIST_ID \=? AND CU.USER_ID     \= CS.SHARED_BY_USER_ID AND SIL.USER_ID    \= CU.USER_ID AND IP.ITEM_PRICE_ID    \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID    \= IP.ITEM_ID AND SIL.SAVED_LIST_ID   \= SLI.SAVED_LIST_ID AND IM.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID \=? UNION SELECT SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID,SIL.UPDATED_DATETIME, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME,IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME,IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC,IDMV.UPC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY,ip.PACKAGE_FLAG,NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY,  IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE,IP.NET_PRICE,SLI.QTY,IM.QTY_AVAILABLE,SLI.UOM,SIL.SENT_BY_APPR_USER_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * SLI.QTY) "EXTPRICE",'' LINE_ITEM_COMMENT,SLI.ITEM_LEVEL_SHIPVIA,SLI.ITEM_LEVEL_SHIPVIA_DESC,SLI.ITEMLEVEL_REQUIREDBYDATE,SLI.CATALOG_ID,IDMV.WEIGHT,SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV,   SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, CART_SHARE CS, ITEM_MASTER IM WHERE SLI.SAVED_LIST_ID \= ? AND CU.USER_ID     \=  CS.SHARED_BY_USER_ID AND SIL.USER_ID    \= CU.USER_ID AND IP.ITEM_PRICE_ID    \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID\= IP.ITEM_ID AND SIL.SAVED_LIST_ID \= SLI.SAVED_LIST_ID AND IM.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID \= ? AND IDMV.ITEM_ID NOT   IN (SELECT SLI.ITEM_ID FROM SAVED_LIST_ITEMS SLI, ITEM_DETAILS_MV IDMV WHERE SLI.SAVED_LIST_ID \= ? AND IDMV.ITEM_ID  \= SLI.ITEM_ID AND IDMV.SUBSET_ID\= ? )

getUserName:select USER_NAME,FIRST_NAME,LAST_NAME FROM CIMM_USERS WHERE USER_ID=?

getSavedListNameQuery :SELECT SAVED_LIST_ID,SAVED_LIST_NAME,TYPE,UPDATED_DATETIME,ASSIGNED_SHIP_TO,STATUS,SENT_BY_APPR_USER_ID FROM SAVED_ITEM_LIST WHERE USER_ID = ? ORDER BY TYPE, SAVED_LIST_NAME
	
##getSavedAndSharedListNameQuery:SELECT * FROM (SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE,SIL.UPDATED_DATETIME,SIL.ASSIGNED_SHIP_TO,SIL.STATUS,SIL.SENT_BY_APPR_USER_ID,'N' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC ,SAVED_LIST_ITEMS SI,CIMM_USERS CU WHERE SIL.SITE_ID =? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND SI.SAVED_LIST_ID=SIL.SAVED_LIST_ID AND (SIL.USER_ID = CU.USER_ID OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID, 'N' UNION SELECT SIT.SAVED_LIST_ID, SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME,SIT.ASSIGNED_SHIP_TO,SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIT,SAVED_LIST_ITEMS SI WHERE SIT.SITE_ID      =? AND SI.SAVED_LIST_ID=SIT.SAVED_LIST_ID AND SIT.SAVED_LIST_ID IN (SELECT CART_ID FROM CART_SHARE WHERE SHARE_W_USER_ID = ? ) GROUP BY SIT.SAVED_LIST_ID,SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME, SIT.ASSIGNED_SHIP_TO, SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y') ORDER BY TYPE,NLSSORT(SAVED_LIST_NAME, 'NLS_SORT = GENERIC_M') ASC
## July 13 2016
##getSavedAndSharedListNameQuery:SELECT * FROM (SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE,SIL.UPDATED_DATETIME,SIL.ASSIGNED_SHIP_TO,SIL.STATUS,SIL.SENT_BY_APPR_USER_ID,'N' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC ,SAVED_LIST_ITEMS SI,CIMM_USERS CU WHERE SIL.SITE_ID =? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND SI.SAVED_LIST_ID=SIL.SAVED_LIST_ID AND (SIL.USER_ID = CU.USER_ID OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID, 'N' UNION SELECT SIT.SAVED_LIST_ID, SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME,SIT.ASSIGNED_SHIP_TO,SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIT,SAVED_LIST_ITEMS SI WHERE SIT.SITE_ID      =? AND SI.SAVED_LIST_ID=SIT.SAVED_LIST_ID AND SIT.SAVED_LIST_ID IN (SELECT CART_ID FROM CART_SHARE WHERE SHARE_W_USER_ID = ? ) GROUP BY SIT.SAVED_LIST_ID,SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME, SIT.ASSIGNED_SHIP_TO, SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y') ORDER BY ?
## Oct 31 2018
getSavedAndSharedListNameQuery:SELECT * FROM (SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE,SIL.UPDATED_DATETIME,SIL.ASSIGNED_SHIP_TO,SIL.STATUS,SIL.REQ_TOKEN_ID,SIL.ALWAYS_APPROVE,SIL.APPROVER_SEQ,SIL.APPROVAL_STATUS,SIL.SENT_BY_APPR_USER_ID,'N' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC ,SAVED_LIST_ITEMS SI,CIMM_USERS CU WHERE SIL.SITE_ID =? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND SI.SAVED_LIST_ID=SIL.SAVED_LIST_ID AND (SIL.USER_ID = CU.USER_ID OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS,SIL.REQ_TOKEN_ID,SIL.ALWAYS_APPROVE,SIL.APPROVER_SEQ,SIL.APPROVAL_STATUS,SIL.SENT_BY_APPR_USER_ID, 'N' UNION SELECT SIT.SAVED_LIST_ID, SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME,SIT.ASSIGNED_SHIP_TO,SIT.STATUS,SIT.REQ_TOKEN_ID, SIT.ALWAYS_APPROVE,SIT.APPROVER_SEQ,SIT.APPROVAL_STATUS,SIT.SENT_BY_APPR_USER_ID,'Y' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIT,SAVED_LIST_ITEMS SI WHERE SIT.SITE_ID      =? AND SI.SAVED_LIST_ID=SIT.SAVED_LIST_ID AND SIT.SAVED_LIST_ID IN (SELECT CART_ID FROM CART_SHARE WHERE SHARE_W_USER_ID = ? ) GROUP BY SIT.SAVED_LIST_ID,SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME, SIT.ASSIGNED_SHIP_TO, SIT.STATUS,SIT.REQ_TOKEN_ID,SIT.ALWAYS_APPROVE,SIT.APPROVER_SEQ,SIT.APPROVAL_STATUS,SIT.SENT_BY_APPR_USER_ID,'Y') ORDER BY TYPE,NLSSORT(SAVED_LIST_NAME, 'NLS_SORT = GENERIC_M') ASC

getSavedAndSharedListNameCustomQuery:SELECT * FROM (SELECT a.saved_list_id, a.saved_list_name, a.type, a.updated_datetime, a.assigned_ship_to, a.status, a.is_public, a.user_id, a.sent_by_appr_user_id, a.is_shared, SUM(CASE WHEN si.saved_list_id IS NULL THEN 0 ELSE 1 END) item_counts FROM (SELECT sil.saved_list_id, sil.saved_list_name, sil.type, sil.updated_datetime, sil.assigned_ship_to, sil.status, sil.is_public, sil.user_id, sil.sent_by_appr_user_id, 'N' is_shared FROM saved_item_list sil, buying_company bc, cimm_users cu WHERE sil.site_id = ? AND cu.user_id = ? AND ( bc.buying_company_id = ? OR bc.buying_company_id = (SELECT buying_company_id FROM buying_company WHERE status = 'A' AND entity_id = ?)) AND ( sil.user_id = cu.user_id OR sil.buying_company_id = bc.buying_company_id OR sil.buying_company_id = bc.parent_company_id )) a LEFT JOIN saved_list_items si ON si.saved_list_id = a.saved_list_id GROUP BY a.saved_list_id, a.saved_list_name, a.type, a.updated_datetime, a.assigned_ship_to, a.status, a.is_public, a.user_id, a.sent_by_appr_user_id, a.is_shared, 'N' UNION SELECT sit.saved_list_id, sit.saved_list_name, sit.type, sit.updated_datetime, sit.assigned_ship_to, sit.status, sit.is_public, sit.user_id, sit.sent_by_appr_user_id, 'Y' is_shared, SUM(CASE WHEN si.saved_list_id IS NULL THEN 0 ELSE 1 END) item_counts FROM saved_item_list sit LEFT JOIN saved_list_items si ON si.saved_list_id = sit.saved_list_id WHERE sit.site_id = ? AND sit.saved_list_id IN (SELECT cart_id FROM cart_share WHERE share_w_user_id = ?) GROUP BY sit.saved_list_id, sit.saved_list_name, sit.type, sit.updated_datetime, sit.assigned_ship_to, sit.status, sit.is_public, sit.user_id, sit.sent_by_appr_user_id, 'Y') 

getPendingApproveCart:SELECT * FROM (SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE,SIL.UPDATED_DATETIME,SIL.ASSIGNED_SHIP_TO,SIL.STATUS,SIL.SENT_BY_APPR_USER_ID,'N' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC ,SAVED_LIST_ITEMS SI,CIMM_USERS CU WHERE SIL.SITE_ID =? AND SIL.SENT_BY_APPR_USER_ID  = ? AND BC.BUYING_COMPANY_ID = ? AND SI.SAVED_LIST_ID=SIL.SAVED_LIST_ID AND (SIL.USER_ID = CU.USER_ID OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID, 'N' UNION SELECT SIT.SAVED_LIST_ID, SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME,SIT.ASSIGNED_SHIP_TO,SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y' IS_SHARED,count(1) ITEM_COUNTS FROM SAVED_ITEM_LIST SIT,SAVED_LIST_ITEMS SI WHERE SIT.SITE_ID      =? AND SI.SAVED_LIST_ID=SIT.SAVED_LIST_ID AND SIT.SAVED_LIST_ID IN (SELECT CART_ID FROM CART_SHARE WHERE SHARE_W_USER_ID = ? ) GROUP BY SIT.SAVED_LIST_ID,SIT.SAVED_LIST_NAME,SIT.TYPE,SIT.UPDATED_DATETIME, SIT.ASSIGNED_SHIP_TO, SIT.STATUS,SIT.SENT_BY_APPR_USER_ID,'Y') ORDER BY ?

## Aug 08 2018 
#selectCartCount :SELECT COUNT(C.CART_ID) CARTCOUNT,SUM(C.QTY) QTYCOUNT FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID=? AND C.SITE_ID=? AND IDMV.SUBSET_ID in (?,?) AND IDMV.ITEM_ID=C.ITEM_ID
selectCartCount :SELECT COUNT(CART_ID) CARTCOUNT, SUM(QTY) QTYCOUNT FROM(SELECT C.CART_ID, C.QTY FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID =? AND C.SITE_ID =? AND IDMV.SUBSET_ID =?  AND IDMV.ITEM_ID = C.ITEM_ID UNION SELECT C.CART_ID, C.QTY FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID =? AND C.SITE_ID = ? AND IDMV.SUBSET_ID = ? AND IDMV.ITEM_ID =C.ITEM_ID)

#AUG 08 2018 - Get in touch with Shashi or Bharath on any concerns w.r.t below SQL - selectCartCaseCount 
##selectCartCaseCount :SELECT COUNT(C.CART_ID) CARTCOUNT,SUM(C.QTY) QTYCOUNT, SUM(C.MIN_ORDER_QTY) MINORDERQTY, SUM(C.QTY/C.MIN_ORDER_QTY) SUM_CASES, SUM(C.ITEM_WEIGHT*C.QTY) ITEM_WEIGHT, SUM(C.UNITS*C.QTY) ITEM_UNITS FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID=? AND C.SITE_ID=? AND IDMV.SUBSET_ID in (?,?) AND IDMV.ITEM_ID=C.ITEM_ID
selectCartCaseCount :SELECT COUNT(CART_ID) CARTCOUNT, SUM(QTY) QTYCOUNT, SUM(MIN_ORDER_QTY) MINORDERQTY, SUM(QTY/MIN_ORDER_QTY) SUM_CASES,SUM(ITEM_WEIGHT*QTY) ITEM_WEIGHT,SUM(UNITS*QTY) ITEM_UNITS FROM(SELECT C.CART_ID, C.QTY, C.MIN_ORDER_QTY, C.ITEM_WEIGHT, C.UNITS FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID =? AND C.SITE_ID =? AND IDMV.SUBSET_ID =?  AND IDMV.ITEM_ID = C.ITEM_ID UNION SELECT C.CART_ID, C.QTY, C.MIN_ORDER_QTY, C.ITEM_WEIGHT, C.UNITS FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.USER_ID =? AND C.SITE_ID = ? AND IDMV.SUBSET_ID = ? AND IDMV.ITEM_ID =C.ITEM_ID)
	
selectCartCountBySession :SELECT COUNT(C.CART_ID) CARTCOUNT,SUM(C.QTY) QTYCOUNT FROM CART C,ITEM_DETAILS_MV IDMV WHERE C.USER_ID=? AND C.SESSIONID=?  AND C.SITE_ID=? and IDMV.SUBSET_ID in (?,?) and IDMV.ITEM_ID=C.ITEM_ID

getUserAddress : select CU.FIRST_NAME,CU.LAST_NAME,AB.* from ADDRESS_BOOK AB, CIMM_USERS CU where CU.USER_ID = ? AND AB.USER_ID = CU.USER_ID AND (AB.ADDRESS_BOOK_ID = CU.DEFAULT_BILLING_ADDRESS_ID OR AB.ADDRESS_BOOK_ID = CU.DEFAULT_SHIPPING_ADDRESS_ID)
	
getUserAddressEntityId :SELECT AB.ADDRESS1,AB.ADDRESS2,AB.CITY,AB.STATE,AB.COUNTRY,AB.ZIPCODE,CU.FIRST_NAME || ' ' ||CU.LAST_NAME ORDEREDBY FROM ADDRESS_BOOK AB, CIMM_USERS CU WHERE ENTITY_ID\=? AND CU.USER_ID \= AB.USER_ID

getFromCartQuery : SELECT C.CART_ID,C.ITEM_ID,C.QTY,LIM.SHORT_DESC, C.ITEMLEVEL_REQUIREDBYDATE, C.CATALOG_ID, C.LINE_ITEM_COMMENT,C.UOM,C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC, C.BC_ADDRESS_BOOK_ID, C.PRICE FROM CART C, LOC_ITEM_MASTER LIM WHERE LIM.ITEM_ID = C.ITEM_ID AND USER_ID = ?

insertOrder:INSERT INTO ORDERS (ORDER_ID,PRIMARY_ORDER_NUMBER,ORDER_NUMBER,USER_ID,USER_NOTE,BILL_ADDRESS1,BILL_ADDRESS2,BILL_CITY,BILL_STATE,BILL_ZIP_CODE,BILL_COUNTRY_CODE,BILL_PHONE,SHIP_ADDRESS1,SHIP_ADDRESS2,SHIP_CITY,SHIP_STATE,SHIP_ZIP_CODE,SHIP_COUNTRY_CODE,SHIP_PHONE,UPDATED_DATETIME,ORDER_STATUS,SESSION_ID,REQUEST_TYPE,IS_TAXABLE,TAX_EXEMPT_CODE,REFERENCE_KEY,PAYMENT_METHOD, CC_NUMBER, CC_EXPIRE_DATE, CC_CARD_HOLDER,PURCHASE_ORDER_NUMBER,USER_IP_ADDRESS,ORDER_NOTES,SHIPPING_INSTRUCTIONS,TRANSACTION_ID,SITE_ID,BILL_EMAIL_ADDRESS,SHIP_EMAIL_ADDRESS,CUSTOMER_NAME, SHIP_FIRST_NAME, SHIP_LAST_NAME, CUSTOMER_RELEASE_NUMBER, PRICING_BRANCH_ID, PRICING_BRANCH_NAME, SHIPPING_BRANCH_ID, SHIPPING_BRANCH_NAME,BILL_FIRST_NAME,BILL_LAST_NAME,BILL_SHIP_TO_ID,SHIPPING_SHIP_TO_ID,SHIPPING_SHIP_TO_NAME,SALES_REP_IN_ID,SALES_REP_IN_EMAIL,SALES_REP_OUT_ID ,SALES_REP_OUT_EMAIL,PAYMENT_AUTH_CODE,WAREHOUSE_CODE,DISCOUNT_AMOUNT,DISCOUNT_PERCENTAGE,DISCOUNT_COUPON_CODE,DISCOUNT_TYPE,PAYPAL_TOKEN,PAYPAL_PAYER_ID,BILL_COMPANY_NAME,SHIP_COMPANY_NAME, GAS_PO_NUMBER) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,REPLACECCEXP,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

insertOrderItem : INSERT INTO ORDER_ITEMS(ORDER_ITEM_ID,ORDER_ID,ITEM_ID,PART_NUMBER,CUSTOMER_PART_NUMBER,SHORT_DESC,QTY,PRICE,USER_NOTE,INVOICE_DESC,UOM,PACK_DESC,ORDER_ITEM_STATUS,UPDATED_DATETIME) VALUES(ORDER_ITEM_ID.NEXTVAL,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)

getCartItemDetailQuery : SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD ,C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID, C.ADDITIONAL_PROPERTIES, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA, C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.DISPLAY_PRICING,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP,ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+)= C.ITEM_ID UNION SELECT  IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD , C.UOM,C.BRAND,C.PART_NUMBER  NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,C.ADDITIONAL_PROPERTIES,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.DISPLAY_PRICING,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP, ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+)= C.ITEM_ID AND IDMV.ITEM_ID NOT IN (SELECT C.ITEM_ID FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.SITE_ID \= ? AND C.USER_ID\=? AND IDMV.ITEM_ID \= C.ITEM_ID AND IDMV.SUBSET_ID\=?)

getCartItemDetailQueryBySession : SELECT * FROM (SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD , C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID, C.ADDITIONAL_PROPERTIES, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, IP.DISPLAY_PRICING,IP.SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP,ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID = ? AND C.USER_ID   =? AND C.SESSIONID = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND C.ITEM_ID = IP.ITEM_ID AND IDMV.SUBSET_ID=? AND ITNV.ITEM_ID(+)= C.ITEM_ID UNION SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD ,C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,C.ADDITIONAL_PROPERTIES,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC,IP.DISPLAY_PRICING, IP.SALES_UOM,IP.SALES_QTY,IP.CLEARANCE, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP,ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID = ? AND C.USER_ID   =? AND C.SESSIONID = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND C.ITEM_ID = IP.ITEM_ID AND IDMV.SUBSET_ID=? AND ITNV.ITEM_ID(+)= C.ITEM_ID AND IDMV.ITEM_ID NOT IN (SELECT C.ITEM_ID FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.SITE_ID \= ? AND C.USER_ID\=? AND C.SESSIONID = ? AND IDMV.ITEM_ID \= C.ITEM_ID AND IDMV.SUBSET_ID\=?)) ORDER BY  CART_ID 

getOrderItemQuery : SELECT LIST_PRICE,ORDER_ID, ITEM_ID,PART_NUMBER,SHORT_DESC,QTY,LINE_ITEM_COMMENT,PRICE,UOM,(QTY * PRICE) EXTPRICE, ITEMLEVEL_REQUIREDBYDATE, MANUFACTURER,PER_UOM,PER_QTY FROM ORDER_ITEMS where ORDER_ID\=?\t\t

updateOrderQuery : UPDATE ORDERS SET EXTERNAL_SYSTEM_ID=?,EXTERNAL_SYSTEM_ERROR=?,REQUIRED_BY_DATE=REPLACEREQDATE, TAX_AMOUNT=?, SUBTOTAL_AMOUNT=?, SHIP_METHOD=?, TOTAL_AMOUNT=?, ORDER_DATE=SYSDATE, SHIP_DATE=REPLACESHIPDATE, ORDERED_BY=?, FEDERALEXCISETAX=?, FREIGHT=?, HANDLING_FEE=?, PAYMENT_AMOUNT=?, PAYMENT_DATE=REPLACEPAYMENTDATE, ROE_DISCOUNT=?, CASHDISCOUNT_AMOUNT=?, CASHDISCOUNT_PERCENTAGE=?, DISCOUNT_AMOUNT = ?, ORDER_STATUS = ?, FRIEGHT_IN=?,SHIP_METHOD_ID=?, ORDER_ERP_ID = ?, ORDER_SUFFIX=?, DELIVERY_FEE=? WHERE ORDER_ID=?

updateGroupItemQuery :UPDATE SAVED_LIST_ITEMS SET QTY = ? WHERE LIST_ITEM_ID = ?
	
deleteGroupItemQuery : DELETE SAVED_LIST_ITEMS WHERE LIST_ITEM_ID = ?

checkForItemsSQL:select LIST_ITEM_ID from SAVED_LIST_ITEMS where SAVED_LIST_ID = ?

getSavedGroupNameByID: SELECT SAVED_LIST_ID FROM SAVED_ITEM_LIST WHERE UPPER(SAVED_LIST_NAME) = UPPER(?) AND ROWNUM <= 1

deleteSQL:delete from saved_item_list where SAVED_LIST_ID = ?
	
deleteSavedCartItemQuery: DELETE SAVED_LIST_ITEMS WHERE SAVED_LIST_ID = ?
	
deleteSavedCartNameQuery:DELETE SAVED_ITEM_LIST WHERE SAVED_LIST_ID = ?
	
insertNewProduct: INSERT INTO NEW_PRODUCT_REQUEST (NPR_ID,NPR_NAME,NPR_DESC,UPDATED_DATETIME,USER_ID,REQUIRED_BY_DATE) VALUES (?,?,?,SYSDATE,?,REPLACESTRING)
	
inserNewProductItem :INSERT INTO NEW_PRODUCT_REQUEST_ITEMS(NPR_ID,MANUFACTURER_PART_NUMBER,MANUFACTURER_NAME,ITEM_DESC,NPR_ITEM_ID)VALUES(?,?,?,?,?)
	
updateNewProductItem : UPDATE NEW_PRODUCT_REQUEST_ITEMS SET ECLIPSE_PART_NUMBER=? WHERE NPR_ITEM_ID = ?
	
insertBuyingCompany :INSERT INTO BUYING_COMPANY (BUYING_COMPANY_ID,CUSTOMER_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,URL,SUBSET_ID,STATUS,UPDATED_DATETIME,ENTITY_ID,PARENT_COMPANY_ID,SHORT_NAME,CURRENCY,WAREHOUSE_CODE_ID,WAREHOUSE_CODE,SITE_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?,?,?,?,?,?)

insertBuyingCompanyForGuestUser : INSERT INTO BUYING_COMPANY (BUYING_COMPANY_ID,CUSTOMER_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,URL,SUBSET_ID,STATUS,UPDATED_DATETIME,ENTITY_ID,PARENT_COMPANY_ID,SHORT_NAME,CURRENCY,WAREHOUSE_CODE_ID,WAREHOUSE_CODE,SITE_ID,CUSTOMER_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?,?,?,?,?,?,?)

inserBuyingCompanyDisableSubmitPOCC :INSERT INTO BUYING_COMPANY (BUYING_COMPANY_ID,CUSTOMER_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,URL,SUBSET_ID,STATUS,UPDATED_DATETIME,ENTITY_ID,PARENT_COMPANY_ID,SHORT_NAME,CURRENCY,WAREHOUSE_CODE_ID,WAREHOUSE_CODE,SITE_ID,ALLOW_SUBMIT_PO,CREDIT_CARD_CHECKOUT) VALUES(?,?,?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?,?,?,?,?,?,?,?)
	
inserBuyingCompanyDisableSubmitPO :INSERT INTO BUYING_COMPANY (BUYING_COMPANY_ID,CUSTOMER_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,URL,SUBSET_ID,STATUS,UPDATED_DATETIME,ENTITY_ID,PARENT_COMPANY_ID,SHORT_NAME,CURRENCY,WAREHOUSE_CODE_ID,WAREHOUSE_CODE,SITE_ID,ALLOW_SUBMIT_PO) VALUES(?,?,?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?,?,?,?,?,?,?)

insertNewUser :INSERT INTO CIMM_USERS(USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,BUYING_COMPANY_ID,OFFICE_PHONE,CELL_PHONE,FAX,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,ECLIPSE_CONTACT_ID,EMAIL,UPDATED_DATETIME,FIRST_LOGIN,PARENT_USER_ID,EXISTING_CUSTOMER,STATUS,TERMS_TYPE,TERMS_TYPE_DESC,SHIP_VIA,SHIP_VIA_DESC,REGISTERED_DATE,SITE_ID,USER_TYPE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,SYSDATE,?,'ECOMM')

insertNewUserFromERP:INSERT INTO CIMM_USERS(USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,BUYING_COMPANY_ID,OFFICE_PHONE,CELL_PHONE,FAX,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,ECLIPSE_CONTACT_ID,EMAIL,UPDATED_DATETIME,FIRST_LOGIN,TERMS_TYPE,TERMS_TYPE_DESC,SHIP_VIA,SHIP_VIA_DESC,PARENT_USER_ID ,REGISTERED_DATE, STATUS,JOB_TITLE, SALES_REP_CONTACT,SITE_ID,ACCOUNT_MANAGER,CLOSEST_BRANCH,USER_TYPE,EXTERNAL_SYSTEM2_USER_ID,IS_TAXABLE,ACCEPT_ORDER_BY_PO_NUM)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,'ECOMM',?,?,?)

insertGuestUserFromERP : INSERT INTO CIMM_USERS(USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,BUYING_COMPANY_ID,OFFICE_PHONE,CELL_PHONE,FAX,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,ECLIPSE_CONTACT_ID,EMAIL,UPDATED_DATETIME,FIRST_LOGIN,TERMS_TYPE,TERMS_TYPE_DESC,SHIP_VIA,SHIP_VIA_DESC,PARENT_USER_ID ,REGISTERED_DATE, STATUS,JOB_TITLE, SALES_REP_CONTACT,SITE_ID,ACCOUNT_MANAGER,CLOSEST_BRANCH,USER_TYPE,GUEST_USER,EXTERNAL_SYSTEM2_USER_ID,IS_TAXABLE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,'ECOMM',?,?,?)

updateUserAddressId: UPDATE CIMM_USERS SET DEFAULT_BILLING_ADDRESS_ID=?,DEFAULT_SHIPPING_ADDRESS_ID = ? WHERE USER_ID=?
	
insertAddressBook : INSERT INTO ADDRESS_BOOK(ADDRESS_BOOK_ID,USER_ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIPCODE,COUNTRY,PHONE,ADDRESS_TYPE,STATUS,UPDATED_DATETIME,ENTITY_ID,BUYING_COMPANY_ID)VALUES(?,?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?)
	
getPasswordForUserId : SELECT PASSWORD FROM CIMM_USERS WHERE USER_ID=?
	
getDefaultAddressId:SELECT DEFAULT_BILLING_ADDRESS_ID,DEFAULT_SHIPPING_ADDRESS_ID FROM CIMM_USERS WHERE USER_ID=?
	
getAddressList: SELECT ADDRESS_BOOK_ID,ENTITY_ID,ADDRESS1,ADDRESS_TYPE FROM ADDRESS_BOOK WHERE USER_ID=?

getAddressById:SELECT CU.FIRST_NAME,CU.LAST_NAME, AB.ADDRESS1, AB.ADDRESS2, AB.CITY, AB.STATE, AB.ZIPCODE, AB.ENTITY_ID, AB.COUNTRY, AB.PHONE, AB.ADDRESS_TYPE FROM ADDRESS_BOOK AB, CIMM_USERS CU WHERE AB.USER_ID =? AND CU.USER_ID = AB.USER_ID AND AB.ADDRESS_BOOK_ID IN (?,?)
	
getAddressByParentId : SELECT BUYING_COMPANY_ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,ENTITY_ID FROM BUYING_COMPANY WHERE PARENT_COMPANY_ID = (SELECT DISTINCT PARENT_COMPANY_ID FROM BUYING_COMPANY WHERE (BUYING_COMPANY_ID=? OR PARENT_COMPANY_ID=?) AND PARENT_COMPANY_ID IS NOT NULL)
	
getAdressByCompanyId : SELECT BUYING_COMPANY_ID,CUSTOMER_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,EMAIL,ENTITY_ID FROM BUYING_COMPANY WHERE BUYING_COMPANY_ID = ?
	
getSapUser :select CU.BUYING_COMPANY_ID,CU.USER_ID,BC.SUBSET_ID,BC.GENERAL_CATALOG_ACCESS,CET.EXTRENSIC_TYPE,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID from CIMM_USERS CU,BUYING_COMPANY BC,CHECK_EXTRENSIC_TYPE CET where USER_NAME=? and PASSWORD=? AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CET.USER_ID = CU.USER_ID AND CU.PUNCHOUT_USER='Y'
	
getOCIUser :select CU.BUYING_COMPANY_ID,CU.USER_ID,BC.SUBSET_ID,BC.GENERAL_CATALOG_ACCESS,BC.LOGO,BC.DISPLAY_CUST_PART_NUMBER, CU.USER_NAME from CIMM_USERS CU,BUYING_COMPANY BC,PUNCHOUT_USER PU where PU.USER_NAME=? and PU.PASSWORD=? AND CU.USER_ID = PU.USER_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID
	
checkEntityId :SELECT BUYING_COMPANY_ID FROM BUYING_COMPANY WHERE STATUS = 'A' AND ENTITY_ID= ?

getValidSapUser:SELECT USER_ID FROM CIMM_USERS WHERE USER_NAME = ? AND BUYING_COMPANY_ID = ?
	
getNewProductItem : SELECT MANUFACTURER_PART_NUMBER,MANUFACTURER_NAME,ITEM_DESC FROM NEW_PRODUCT_REQUEST_ITEMS WHERE NPR_ID=?

insertSapUser : INSERT INTO CIMM_USERS(USER_ID,USER_NAME,PASSWORD,BUYING_COMPANY_ID,PUNCHOUT_USER,DEFAULT_SHIPPING_ADDRESS_ID,DEFAULT_BILLING_ADDRESS_ID,FIRST_NAME,LAST_NAME,USER_TYPE) VALUES(?,?,?,?,'Y',?,?,?,?,'ECOMM')
	
insertPunchoutLoginDetail : INSERT INTO PUNCHOUT_USER_LOGIN (USERNAME_CXML,PASSWORD_CXML,SL_USER_ID,SL_USERNAME,SL_USER_PWD,LOGIN_ID,BUYER_COOKIE,OPERATION_TYPE,PAYLOAD_ID,LOGIN_TIME,PUNCHOUT_URL,IS_VALID_SESSION,BUYING_COMPANY_ID,CUSTOMER_LOCATION,FROM_DOMAIN,FROM_ID,TO_DOMAIN,TO_ID,SENDER_DOMAIN,SENDER_ID,USER_AGENT,ADDITIONAL_INFO) values (?,?,?,?,?,?,?,?,?,?,?,'Y',?,?,?,?,?,?,?,?,?,?)
	
insertAribaPunchoutLoginDetail : INSERT INTO PUNCHOUT_USER_LOGIN (USERNAME_CXML,PASSWORD_CXML,SL_USER_ID,SL_USERNAME,SL_USER_PWD,LOGIN_ID,BUYER_COOKIE,OPERATION_TYPE,PAYLOAD_ID,LOGIN_TIME,PUNCHOUT_URL,IS_VALID_SESSION,BUYING_COMPANY_ID,CUSTOMER_LOCATION,FROM_ID,TO_ID,USER_AGENT) values (?,?,?,?,?,?,?,?,?,?,?,'Y',?,?,?,?,?)
	
getCxmlLoginDetails : SELECT BC.SUBSET_ID,BC.GENERAL_CATALOG_ACCESS,PUL.USERNAME_CXML,PUL.SL_USER_ID,PUL.BUYER_COOKIE,PUL.PUNCHOUT_URL,PUL.FROM_ID,PUL.TO_ID,PUL.USER_AGENT,PUL.OPERATION_TYPE,PUL.SL_USERNAME, BC.LOGO,BC.DISPLAY_CUST_PART_NUMBER,BC.BUYING_COMPANY_ID,PUL.FROM_DOMAIN,PUL.FROM_ID,PUL.TO_DOMAIN,PUL.TO_ID,PUL.SENDER_DOMAIN,PUL.SENDER_ID,PUL.LOGIN_TIME,CU.USER_NAME FROM BUYING_COMPANY BC, PUNCHOUT_USER_LOGIN PUL,CIMM_USERS CU,PUNCHOUT_USER PU WHERE PUL.LOGIN_ID=? AND PUL.IS_VALID_SESSION = ? AND BC.BUYING_COMPANY_ID=PUL.BUYING_COMPANY_ID  AND PU.USER_NAME = PUL.USERNAME_CXML AND PU.PASSWORD = PUL.PASSWORD_CXML AND CU.USER_ID = PU.USER_ID
	
updateCxmlUserSession : UPDATE PUNCHOUT_USER_LOGIN SET IS_VALID_SESSION = 'N' WHERE LOGIN_ID = ?
	
getOrderDetail : SELECT BILL_COMPANY_NAME,SHIP_COMPANY_NAME,ORDER_ID,ORDER_NUMBER, EXTERNAL_SYSTEM_ID, BILL_ADDRESS1, BILL_ADDRESS2, BILL_CITY, BILL_COUNTRY_CODE, BILL_PHONE, BILL_STATE, BILL_ZIP_CODE, SHIP_ADDRESS1, SHIP_ADDRESS1, SHIP_ADDRESS2, SHIP_CITY, SHIP_COUNTRY_CODE, SHIP_PHONE, SHIP_STATE, SHIP_ZIP_CODE,SUBTOTAL_AMOUNT,TOTAL_AMOUNT,FREIGHT,HANDLING_FEE,CASHDISCOUNT_AMOUNT,TAX_AMOUNT,EXTERNAL_SYSTEM_ERROR,PURCHASE_ORDER_NUMBER,ORDER_DATE,ORDERED_BY,SHIP_DATE,SHIP_METHOD,SHIP_METHOD_ID,REFERENCE_KEY,REQUIRED_BY_DATE,SHIPPING_INSTRUCTIONS,ORDER_NOTES,USER_NOTE,PAYMENT_METHOD,TRANSACTION_ID,BILL_EMAIL_ADDRESS,SHIP_EMAIL_ADDRESS,CUSTOMER_NAME,SHIP_FIRST_NAME,SHIP_LAST_NAME,CUSTOMER_RELEASE_NUMBER, PRICING_BRANCH_ID, PRICING_BRANCH_NAME, SHIPPING_BRANCH_ID, SHIPPING_BRANCH_NAME,FRIEGHT_IN,BILL_SHIP_TO_ID, SHIPPING_SHIP_TO_ID, BILL_FIRST_NAME, BILL_LAST_NAME, SHIPPING_SHIP_TO_NAME,DISCOUNT_AMOUNT,DISCOUNT_COUPON_CODE, DISCOUNT_TYPE,ORDER_SUFFIX, GAS_PO_NUMBER, DELIVERY_FEE, ORDER_STATUS, CC_NUMBER,ROE_DISCOUNT FROM ORDERS WHERE ORDER_ID = ? AND USER_ID = ?
	
getOrderStatus : SELECT ORDER_ID, ORDER_NUMBER,EXTERNAL_SYSTEM_ID, TO_CHAR(ORDER_DATE,'MM/DD/YYYY HH:MI:SS AM')ORDER_DATE ,TOTAL_AMOUNT,SHIP_METHOD FROM ORDERS WHERE REQUEST_TYPE='Order' AND USER_ID =? AND ORDER_STATUS=? AND ORDER_DATE is not null ORDER BY ORDER_DATE DESC,ORDER_STATUS ASC

getOrderItemDetail : SELECT OI.LIST_PRICE,LIM.PAGE_TITLE,OI.CALL_FOR_PRICE,OI.ITEM_ID,OI.LEAD_TIME, OI.PART_NUMBER, OI.SHORT_DESC, OI.QTY, OI.PRICE, OI.UOM,OI.EXT_PRICE, (QTY*PRICE) "EXTPRICE", ITIMG.IMAGE_NAME, ITIMG.IMAGE_TYPE, OI.PER_UOM, OI.PER_QTY,OI.LINE_ITEM_COMMENT,OI.ITEM_LEVEL_SHIPVIA,OI.ITEM_LEVEL_SHIPVIA_DESC,OI.ITEMLEVEL_REQUIREDBYDATE,OI.CATALOG_ID,OI.HAZARDIOUS_MATERIAL,IM.MANUFACTURER_PART_NUMBER,IM.SALES_UOM,IM.ALT_PART_NUMBER1,OI.UNITS_PER_STOCKING,OI.UNITS_PER_STOCKING_STRING,OI.CART_ID, OI.ORDER_ITEM_ID,OI.DISCOUNT_COUPON_CODE,OI.DISCOUNT_AMOUNT,OI.DISCOUNT_TYPE,OI.STATUS,OI.MANUFACTURER FROM ORDER_ITEMS OI, LOC_ITEM_MASTER LIM, ITEM_IMAGES ITIMG, ITEM_MASTER IM WHERE OI.ORDER_ID \= ? AND OI.ITEM_ID \= LIM.ITEM_ID(+) AND IM.ITEM_ID \= OI.ITEM_ID(+) AND LIM.ITEM_IMAGE_ID \= ITIMG.ITEM_IMAGE_ID(+)

getOrderItemDetailByNumber : SELECT OI.LIST_PRICE,OI.CALL_FOR_PRICE,OI.ITEM_ID,OI.LEAD_TIME, OI.PART_NUMBER, OI.SHORT_DESC, OI.QTY, OI.PRICE, OI.UOM,OI.EXT_PRICE, (QTY*PRICE) "EXTPRICE", ITIMG.IMAGE_NAME, ITIMG.IMAGE_TYPE, OI.PER_UOM, OI.PER_QTY,OI.LINE_ITEM_COMMENT,OI.ITEM_LEVEL_SHIPVIA,OI.ITEM_LEVEL_SHIPVIA_DESC,OI.ITEMLEVEL_REQUIREDBYDATE,OI.CATALOG_ID,OI.HAZARDIOUS_MATERIAL,IM.MANUFACTURER_PART_NUMBER,IM.SALES_UOM,OI.UNITS_PER_STOCKING,OI.UNITS_PER_STOCKING_STRING,OI.CART_ID, OI.ORDER_ITEM_ID,OI.DISCOUNT_COUPON_CODE,OI.DISCOUNT_AMOUNT,OI.DISCOUNT_TYPE,OI.STATUS, LIM.PAGE_TITLE FROM ORDER_ITEMS OI, LOC_ITEM_MASTER LIM, ITEM_IMAGES ITIMG, ITEM_MASTER IM WHERE OI.ORDER_ID in (SELECT  ORDER_ID FROM ORDERS WHERE PRIMARY_ORDER_NUMBER=?) AND OI.ITEM_ID \= LIM.ITEM_ID(+) AND IM.ITEM_ID \= OI.ITEM_ID(+) AND LIM.ITEM_IMAGE_ID \= ITIMG.ITEM_IMAGE_ID(+)

#Coupons 04/03
getOrderItemDetailWithCoupon : SELECT OI.ITEM_ID,OI.PART_NUMBER,OI.SHORT_DESC,OI.QTY,OI.PRICE,OI.UOM,OI.EXT_PRICE,(QTY*PRICE) "EXTPRICE",ITIMG.IMAGE_NAME,ITIMG.IMAGE_TYPE,OI.PER_UOM,OI.PER_QTY,OI.LINE_ITEM_COMMENT,OI.ITEM_LEVEL_SHIPVIA,OI.ITEM_LEVEL_SHIPVIA_DESC,OI.ITEMLEVEL_REQUIREDBYDATE,OI.CATALOG_ID,OI.HAZARDIOUS_MATERIAL,OI.DISCOUNT_AMOUNT,OI.DISCOUNT_COUPON_CODE,OI.DISCOUNT_TYPE,IM.MANUFACTURER_PART_NUMBER,IM.SALES_UOM,OI.UNITS_PER_STOCKING,OI.UNITS_PER_STOCKING_STRING,TT.CATEGORY_NAME,OI.CART_ID FROM ORDER_ITEMS OI,LOC_ITEM_MASTER LIM, ITEM_IMAGES ITIMG,ITEM_MASTER IM,ITEM_CLASSIFICATION IC,(SELECT * FROM TAXONOMY_TREE TT1 WHERE 0<(SELECT COUNT(1) FROM TAXONOMIES T WHERE T.TAXONOMY_ID=TT1.TAXONOMY_ID AND UPPER(TAXONOMY_NAME)=(SELECT UPPER(CONFIG_VALUE) FROM SYSTEM_PARAMETERS_VIEW WHERE CONFIG_KEY='ACTIVE_TAXONOMY_VERSION' AND SITE_ID=?))) TT WHERE OI.ORDER_ID = ? AND OI.ITEM_ID = LIM.ITEM_ID(+) AND IM.ITEM_ID = OI.ITEM_ID(+) AND LIM.ITEM_IMAGE_ID = ITIMG.ITEM_IMAGE_ID(+) AND IC.TAXONOMY_TREE_ID=TT.TAXONOMY_TREE_ID AND IC.ITEM_ID=IM.ITEM_ID AND IC.DEFAULT_CATEGORY='Y'

getShipAddressQuery:SELECT AB.BUYING_COMPANY_ID,AB.ADDRESS_BOOK_ID, BC.PARENT_COMPANY_ID, BC.CUSTOMER_NAME, AB.ADDRESS1, AB.ADDRESS2, AB.CITY, AB.STATE, AB.ZIPCODE, AB.COUNTRY,BC.ENTITY_ID FROM ADDRESS_BOOK AB,BUYING_COMPANY BC WHERE AB.USER_ID = ? AND ADDRESS_TYPE='Ship' AND BC.ENTITY_ID=AB.ENTITY_ID
	
getAddressByAddressBookId : SELECT AB.BUYING_COMPANY_ID,AB.ADDRESS_BOOK_ID, BC.PARENT_COMPANY_ID, BC.CUSTOMER_NAME, AB.ADDRESS1, AB.ADDRESS2, AB.CITY, AB.STATE, AB.ZIPCODE, AB.COUNTRY,AB.ENTITY_ID FROM ADDRESS_BOOK AB,BUYING_COMPANY BC WHERE AB.USER_ID = ? AND AB.ADDRESS_BOOK_ID=? AND BC.ENTITY_ID=AB.ENTITY_ID
	
getBillEntityIdQuery : SELECT ENTITY_ID FROM ADDRESS_BOOK WHERE USER_ID=? AND ADDRESS_TYPE='Bill'
	
updateAddressBook : UPDATE ADDRESS_BOOK SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIPCODE=?,COUNTRY=? WHERE BUYING_COMPANY_ID=?
	
getCoutryCode :SELECT ECLIPSE_COUNTRY_CODE FROM COUNTRY WHERE UPPER(COUNTRY_CODE) = ?
	
updatePassword :UPDATE CIMM_USERS SET PASSWORD=?,FIRST_LOGIN='N' WHERE USER_ID=?
	
getRefKey :SELECT ORDER_ID FROM ORDERS WHERE UPPER(REFERENCE_KEY)=? AND USER_ID = ?
	
getRfqRefKey:SELECT * FROM (SELECT REFERENCE_KEY, ORDER_STATUS, ROW_NUMBER() OVER (ORDER BY order_id desc) RN, COUNT(*) OVER() RESULT_COUNT FROM ORDERS WHERE USER_ID = ? AND REQUEST_TYPE ='RFQ' AND REFERENCE_KEY IS NOT NULL) WHERE RN BETWEEN ? AND ?
	
getRfqNPRKey:SELECT * FROM (SELECT NPR_NAME,STATUS,ROW_NUMBER() OVER (ORDER BY npr_id desc) RN, COUNT(*) OVER() RESULT_COUNT FROM NEW_PRODUCT_REQUEST WHERE USER_ID=?)WHERE RN BETWEEN ? AND ?
	
getCoutryCodeQuery:SELECT COUNTRY_CODE FROM COUNTRY WHERE UPPER(ECLIPSE_COUNTRY_CODE) = ?
	
getLocationList:SELECT LOCATION_ID,ACCOUNT_NAME,PRIMARY_VERTICAL,STATE FROM LOCATIONS WHERE PRIMARY_VERTICAL=?
	
getCreditCardInfo:SELECT USER_PCARD_ID,NICK_NAME,ELEMENT_ACCOUNT_ID,CARD_TYPE,TO_CHAR(CARD_4DIGITS,'0999') CARDNUMBER,CARD_HOLDER_NAME,TRANSACTION_SETUP_ID,EXP_DATE,STREET_ADDRESS,ZIP_CODE,EXPRESS_CHECKOUT_DEFAULT FROM USER_ELEMENT_P_CARD WHERE USER_ID=?
	
updateOrderItemPrice :UPDATE ORDER_ITEMS SET PRICE\=?,UOM\=?,PER_QTY\=?,PER_UOM\=?,EXT_PRICE\=?,HAZARDIOUS_MATERIAL\=?, UNITS_PER_STOCKING\=?,UNITS_PER_STOCKING_STRING\=?,LEAD_TIME\=?,CALL_FOR_PRICE\=?,LIST_PRICE\=?,STATUS\=? WHERE PART_NUMBER\=? AND ORDER_ID \= ? AND ORDER_ITEM_ID \= ?

getMinOrderQtySql :SELECT IP.ITEM_PRICE_ID,NVL(IP.MIN_ORDER_QTY,IM.MIN_ORDER_QTY) MIN_ORDER_QTY,NVL(IP.ORDER_QTY_INTERVAL,IM.ORDER_QTY_INTERVAL) ORDER_QTY_INTERVAL FROM ITEM_PRICES IP,ITEM_MASTER IM WHERE ITEM_PRICE_ID=? AND IM.ITEM_ID = IP.ITEM_ID
	
getEmailId : SELECT CU.EMAIL,CU.FIRST_NAME,CU.LAST_NAME,CU.USER_NAME,CU.JOB_TITLE,BC.CUSTOMER_NAME FROM CIMM_USERS CU, BUYING_COMPANY BC WHERE CU.USER_ID=? AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID
	
insertCreditCard :INSERT INTO USER_ELEMENT_P_CARD (USER_PCARD_ID,USER_ID, ELEMENT_ACCOUNT_ID, CARD_TYPE, CARD_HOLDER_NAME, STREET_ADDRESS, ZIP_CODE, CARD_4DIGITS, EXP_DATE,TRANSACTION_SETUP_ID,NICK_NAME) VALUES(?,?,?,?,?,?,?,?,REPLACEEXPDATE,?,?)
	
getNextSequenceId : SELECT ^SEQUENCENAME^.NEXTVAL AS SEQVAL FROM DUAL
	
insertCreateUserInDB:INSERT INTO CIMM_USERS(USER_ID, USER_NAME, PASSWORD) VALUES(?,?,?)
	
getPasswordForUserName:SELECT CU.USER_ID,CU.PASSWORD,CU.APPROVAL_USER_ID,CU.BUYING_COMPANY_ID,CU.PARENT_USER_ID,BC.LOGO,BC.ALLOW_SUBMIT_PO,BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM,BC.CREDIT_CARD_CHECKOUT,BC.GENERAL_CATALOG_ACCESS,BC.ALLOW_SUBMIT_NPR,BC.DISPLAY_CUST_PART_NUMBER,BC.ALLOW_LIVE_CHAT,BC.PARENT_COMPANY_ID,BC.ENTITY_ID,BC.ENTITY_ID_NUMBER,CU.PUNCHOUT_USER,CU.FIRST_LOGIN,CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID,CU.FIRST_NAME,CU.LAST_NAME,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,CU.EXISTING_CUSTOMER,BC.CUSTOMER_NAME,CU.COUNTRY,CR.ROLE_NAME,BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE,CU.CELL_PHONE,CU.JOB_TITLE,CU.SALES_REP_CONTACT,CU.EXTERNAL_SYSTEM2_USER_ID,CU.ADDRESS1,CU.CITY,CU.STATE,CU.ZIP,NVL(BC.SUBSET_ID, NVL(BC1.SUBSET_ID, NVL(W.SUBSET_ID,(select CONFIG_VALUE from SYSTEM_PARAMETERS where CONFIG_KEY = 'USERSUBSETID')))) SUBSET_ID, CU.PROFILE_IMAGE, CU.CHANGE_PASSWD_ON_LOGIN, CU.USER_PREFERENCES, BC.LANDING_PAGE_ID, CU.ACCEPT_ORDER_BY_PO_NUM USER_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_TYPE='ECOMM' AND UPPER(CU.USER_NAME) = UPPER(?) AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID AND CU.SITE_ID=?

getPasswordForUserNameAndSiteSpecificSubset:SELECT CU.USER_ID,CU.PASSWORD,CU.APPROVAL_USER_ID,CU.BUYING_COMPANY_ID,CU.PARENT_USER_ID,BC.LOGO,BC.ALLOW_SUBMIT_PO,BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM,BC.CREDIT_CARD_CHECKOUT,BC.GENERAL_CATALOG_ACCESS,BC.ALLOW_SUBMIT_NPR,BC.DISPLAY_CUST_PART_NUMBER,BC.ALLOW_LIVE_CHAT,BC.PARENT_COMPANY_ID,BC.ENTITY_ID,BC.ENTITY_ID_NUMBER,CU.PUNCHOUT_USER,CU.FIRST_LOGIN,CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID,CU.FIRST_NAME,CU.LAST_NAME,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,CU.EXISTING_CUSTOMER,BC.CUSTOMER_NAME,CU.COUNTRY,CR.ROLE_NAME,BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE,CU.CELL_PHONE,CU.JOB_TITLE,CU.SALES_REP_CONTACT,CU.EXTERNAL_SYSTEM2_USER_ID,NVL(BC.SUBSET_ID, NVL(BC1.SUBSET_ID, NVL(W.SUBSET_ID,(select CONFIG_VALUE from SYSTEM_PARAMETERS_VIEW WHERE SITE_ID = ?  AND CONFIG_KEY = 'USERSUBSETID')))) SUBSET_ID, CU.PROFILE_IMAGE, CU.CHANGE_PASSWD_ON_LOGIN, CU.USER_PREFERENCES, BC.LANDING_PAGE_ID, CU.ACCEPT_ORDER_BY_PO_NUM USER_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_TYPE='ECOMM' AND UPPER(CU.USER_NAME) = UPPER(?) AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID AND CU.SITE_ID=?

getPasswordForUserNameAndSiteSpecificUserDetail:SELECT CU.USER_ID,CU.PASSWORD,CU.APPROVAL_USER_ID,CU.BUYING_COMPANY_ID,CU.PARENT_USER_ID,BC.LOGO,BC.ALLOW_SUBMIT_PO,BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM,BC.CREDIT_CARD_CHECKOUT,BC.GENERAL_CATALOG_ACCESS,BC.ALLOW_SUBMIT_NPR,BC.DISPLAY_CUST_PART_NUMBER,BC.ALLOW_LIVE_CHAT,BC.PARENT_COMPANY_ID,BC.ENTITY_ID,BC.ENTITY_ID_NUMBER,CU.PUNCHOUT_USER,CU.FIRST_LOGIN,CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID,CU.FIRST_NAME,CU.LAST_NAME,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,CU.EXISTING_CUSTOMER,BC.CUSTOMER_NAME,CU.COUNTRY,CR.ROLE_NAME,BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE,CU.CELL_PHONE,CU.JOB_TITLE,CU.SALES_REP_CONTACT,CU.EXTERNAL_SYSTEM2_USER_ID,NVL(BC.SUBSET_ID, NVL(BC1.SUBSET_ID, NVL(W.SUBSET_ID,(select CONFIG_VALUE from SYSTEM_PARAMETERS_VIEW WHERE SITE_ID = ?  AND CONFIG_KEY = 'USERSUBSETID')))) SUBSET_ID, CU.PROFILE_IMAGE, CU.CHANGE_PASSWD_ON_LOGIN, CU.USER_PREFERENCES, BC.LANDING_PAGE_ID, CU.ACCEPT_ORDER_BY_PO_NUM USER_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_TYPE='ECOMM' AND CU.SITE_ID = ? AND UPPER(CU.USER_NAME) = UPPER(?) AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID

getUserNamePasswordForExternalSystemUserId:SELECT USER_ID,USER_NAME,PASSWORD FROM CIMM_USERS WHERE STATUS=? AND EXTERNAL_SYSTEM2_USER_ID = ? AND SITE_ID=?

getUserStatus:SELECT CU.USER_ID FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_ID = ? AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID

getDetailOnAnonymousUserForUserNameAndPassword : SELECT CU.USER_ID, CU.PASSWORD, CU.APPROVAL_USER_ID, CU.BUYING_COMPANY_ID, CU.PARENT_USER_ID, BC.LOGO, BC.ALLOW_SUBMIT_PO, BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM, BC.CREDIT_CARD_CHECKOUT, BC.GENERAL_CATALOG_ACCESS, BC.ALLOW_SUBMIT_NPR, BC.SUBSET_ID, BC.DISPLAY_CUST_PART_NUMBER, BC.ALLOW_LIVE_CHAT, BC.PARENT_COMPANY_ID, BC.ENTITY_ID,BC.CUSTOMER_TYPE, CU.PUNCHOUT_USER, CU.FIRST_LOGIN, CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID, CU.FIRST_NAME, CU.LAST_NAME, CU.DEFAULT_BILLING_ADDRESS_ID, CU.DEFAULT_SHIPPING_ADDRESS_ID, CU.EXISTING_CUSTOMER, BC.CUSTOMER_NAME, CU.COUNTRY, CR.ROLE_NAME, BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE, CU.CELL_PHONE, CU.JOB_TITLE, CU.SALES_REP_CONTACT FROM CIMM_USERS CU , BUYING_COMPANY BC, CIMM_USER_ROLES CUR, CIMM_ROLES CR WHERE UPPER(CU.USER_NAME) = UPPER(?) AND CUR.USER_ID(+) = CU.USER_ID AND CR.ROLE_ID(+) = CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS = ?

getRolesAndPrivilagesForUser:
	
getCustomFieldForBuyingCompany : SELECT CF.FIELD_NAME,LCFV.TEXT_FIELD_VALUE,LCFV.NUMERIC_FIELD_VALUE,BCFV.BUYING_COMPANY_ID FROM LOC_CUSTOM_FIELD_VALUES LCFV, BC_CUSTOM_FIELD_VALUES BCFV, CUSTOM_FIELDS CF WHERE BCFV.BUYING_COMPANY_ID = ? AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = BCFV.LOC_CUSTOM_FIELD_VALUE_ID AND CF.CUSTOM_FIELD_ID = BCFV.CUSTOM_FIELD_ID
	
getSystemParamtersSQL:SELECT CONFIG_KEY, CONFIG_VALUE FROM SYSTEM_PARAMETERS 
	
getGenIDFromHistory :SELECT DISTINCT GENERATION_ID FROM SALES_ORDER_LINE_ITEMS_HISTORY WHERE ORDER_NUM = ? AND ORDER_STATUS != ALL('I','X') ORDER BY GENERATION_ID DESC
	
deleteCCInfoQuery :DELETE FROM USER_ELEMENT_P_CARD WHERE USER_PCARD_ID=? and USER_ID=?
    
getOrderNumbersFromDB :SELECT ORDER_ID FROM ORDERS WHERE EXTERNAL_SYSTEM_ID \= ? 
	
checkEclipseIdExistsInDB:SELECT EXTERNAL_SYSTEM_ID FROM ORDERS WHERE USER_ID \= ? AND EXTERNAL_SYSTEM_ID IS NOT NULL 

getPasswordUser:SELECT USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,STATUS,ECLIPSE_CONTACT_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE USER_NAME \= ? AND lower(EMAIL)\= ? AND (STATUS = 'A' OR STATUS = 'Y') AND USER_TYPE='ECOMM' AND SITE_ID=?
	
getPasswordEmail:SELECT USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,STATUS,ECLIPSE_CONTACT_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE lower(EMAIL)\= ? AND (STATUS = 'A' OR STATUS = 'Y') AND USER_TYPE='ECOMM' AND USER_NAME!='%_DEL%' AND SITE_ID=?
	
updateItemRating :UPDATE ITEM_MASTER SET REPLACECOLUMN = REPLACECOLUMNRATING WHERE ITEM_ID=?
	
getEntityAddressQuery : SELECT USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,ADDRESS1,ADDRESS2,CITY,STATE,COUNTRY,ZIP,ECLIPSE_CONTACT_ID,EMAIL,OFFICE_PHONE,CELL_PHONE,JOB_TITLE,STATUS FROM CIMM_USERS Where USER_ID=  ?
	
updateCimmUser:UPDATE CIMM_USERS SET FIRST_NAME=?,LAST_NAME=?,ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIP=?,COUNTRY=?,EMAIL=?,USER_NAME=?,PASSWORD=?, OFFICE_PHONE=?, STATUS=?, JOB_TITLE=? WHERE USER_ID=?
	
updatecart :UPDATE CART SET USER_ID=? where SESSIONID=?
	
getDefaultAddressIdforBCAddressBook :SELECT DEFAULT_BILLING_ADDRESS_ID,DEFAULT_SHIPPING_ADDRESS_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE USER_NAME=? AND USER_TYPE= 'ECOMM' AND SITE_ID=? AND BUYING_COMPANY_ID=?
	
getUserAddressFromBCAddressBook:select CU.FIRST_NAME,CU.LAST_NAME,BC.* from BC_ADDRESS_BOOK BC, CIMM_USERS CU where CU.USER_ID = ?  AND (BC.ADDRESS_BOOK_ID = BC.DEFAULT_BILLING_ADDRESS_ID OR BC.ADDRESS_BOOK_ID = BC.DEFAULT_SHIPPING_ID)
	
getAddressListFromBCAddressBookEclipse:with SL as (SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.EMAIL, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BC.BUYING_COMPANY_ID \=? AND BC.ENTITY_ID \= CA.ENTITY_ID AND CA.STATUS\='A' AND W.WAREHOUSE_CODE(+) \= CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) \= CA.PARENT_COMPANY_ID) SELECT * FROM (Select SL.*, ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE ORDER BY ENTITY_ID) AS rn from SL) WHERE   rn < 2\t

getAddressListFromBCAddressBook:with SL as (SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.EMAIL, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,BC.WAREHOUSE_CODE,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BC.BUYING_COMPANY_ID =? AND (BC.ENTITY_ID = CA.ENTITY_ID OR BC.ENTITY_ID IS NULL) AND CA.STATUS='A' AND BC.STATUS='A' AND W.WAREHOUSE_CODE(+) = CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = CA.PARENT_COMPANY_ID) SELECT * FROM (Select SL.*, ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE, SHIP_TO_ID ORDER BY ENTITY_ID) AS rn from SL) WHERE rn < 2

getAddressListFromBCAddressBookDefault:SELECT BC.BC_ADDRESS_BOOK_ID, CA.BUYING_COMPANY_ID, BC.EMAIL, BC.FIRST_NAME, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.SUBSET_ID, BC.WAREHOUSE_CODE FROM BC_ADDRESS_BOOK BC,BUYING_COMPANY CA WHERE BC.BUYING_COMPANY_ID \=? AND BC.BUYING_COMPANY_ID \= CA.BUYING_COMPANY_ID AND CA.STATUS\='A' 

getAddressListFromBCAddressBookFull:SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W  WHERE BC.BUYING_COMPANY_ID =? AND BC.ENTITY_ID = CA.ENTITY_ID AND W.WAREHOUSE_CODE(+) = CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = CA.PARENT_COMPANY_ID
	
getAddressByIdFromBCAddressBookEclipse:SELECT BCA.FIRST_NAME,BCA.LAST_NAME,BCA.ADDRESS1,BCA.ADDRESS2,BCA.CITY,BCA.STATE,BCA.ZIPCODE,BCA.ENTITY_ID,BCA.COUNTRY,BCA.PHONE,BCA.ADDRESS_TYPE,BCA.SHIP_TO_ID,BCA.BC_ADDRESS_BOOK_ID,BCA.EMAIL,BC.CUSTOMER_NAME,BC.STATUS FROM BC_ADDRESS_BOOK BCA,BUYING_COMPANY BC WHERE BCA.ENTITY_ID = BC.ENTITY_ID AND BC.STATUS='A' AND BCA.BC_ADDRESS_BOOK_ID IN (?,?)

getAddressByIdFromBCAddressBook:SELECT B.CUSTOMER_NAME,BC.FIRST_NAME,BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE,BC.SHIP_TO_NAME,BC.SHIP_TO_ID,BC.BC_ADDRESS_BOOK_ID,BC.EMAIL,BC.WAREHOUSE_CODE FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY B WHERE BC.BC_ADDRESS_BOOK_ID IN (?,?) AND B.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID

getAddressFromBCAddressBook : SELECT AB.BUYING_COMPANY_ID,AB.BC_ADDRESS_BOOK_ID, BC.PARENT_COMPANY_ID, BC.CUSTOMER_NAME, AB.ADDRESS1, AB.ADDRESS2, AB.CITY, AB.STATE, AB.ZIPCODE, AB.PHONE, AB.COUNTRY,AB.ENTITY_ID,AB.FIRST_NAME,AB.LAST_NAME,BC.TAX_INFO,AB.SHIP_TO_ID,BC.STATUS FROM BC_ADDRESS_BOOK AB,BUYING_COMPANY BC WHERE AB.BC_ADDRESS_BOOK_ID=? AND BC.BUYING_COMPANY_ID=AB.BUYING_COMPANY_ID AND BC.STATUS='A'
	
updateBCAddressBookforShip:UPDATE BC_ADDRESS_BOOK SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIPCODE=?,COUNTRY=?, PHONE=? WHERE BC_ADDRESS_BOOK_ID=?
	
updateBCAddressBook :UPDATE BC_ADDRESS_BOOK SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIPCODE=?,COUNTRY=?, PHONE=?,FIRST_NAME=?, LAST_NAME=?,EMAIL=? WHERE BC_ADDRESS_BOOK_ID=?

updateBCAddressBookWithStatus :UPDATE BC_ADDRESS_BOOK SET STATUS=?,ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIPCODE=?,COUNTRY=?, PHONE=?,FIRST_NAME=?, LAST_NAME=?,EMAIL=? WHERE BC_ADDRESS_BOOK_ID=?

updateBCAddressBookInforSx :UPDATE BC_ADDRESS_BOOK SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIPCODE=?,COUNTRY=?, PHONE=?, FIRST_NAME=?, LAST_NAME=?,EMAIL=?, STATUS='A' WHERE BUYING_COMPANY_ID=? AND  SHIP_TO_ID=?

disableBCAddressBookInforSx :UPDATE BC_ADDRESS_BOOK SET STATUS='D' WHERE BUYING_COMPANY_ID=? AND  SHIP_TO_ID=?

disableBCAddressBookInforSxNull :UPDATE BC_ADDRESS_BOOK SET STATUS='D' WHERE BUYING_COMPANY_ID=? AND  SHIP_TO_ID is null AND ADDRESS_TYPE = 'Ship'
	
updateBillCimm :UPDATE CIMM_USERS SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIP=?,COUNTRY=?,OFFICE_PHONE=?,EMAIL=?,FIRST_NAME=?,LAST_NAME=? WHERE USER_ID=?

updateContactInformation :UPDATE CIMM_USERS SET ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIP=?,COUNTRY=?,OFFICE_PHONE=?,EMAIL=?,FIRST_NAME=?,LAST_NAME=?,JOB_TITLE=? WHERE USER_ID=?

updateUserContactInformation :UPDATE CIMM_USERS SET UPDATED_DATETIME=SYSDATE, FIRST_NAME=?, LAST_NAME=?, OFFICE_PHONE=?, EMAIL=?, FAX=? WHERE USER_ID=?
	
getdefaultCreditCardInfo :SELECT USER_PCARD_ID,NICK_NAME,ELEMENT_ACCOUNT_ID,CARD_TYPE,TO_CHAR(CARD_4DIGITS,'0999') CARDNUMBER,CARD_HOLDER_NAME,TRANSACTION_SETUP_ID,EXP_DATE,STREET_ADDRESS,ZIP_CODE FROM USER_ELEMENT_P_CARD WHERE USER_ID=? AND USER_PCARD_ID = ?
	
getdefaultCreditCardId: SELECT USER_PCARD_ID FROM USER_ELEMENT_P_CARD WHERE USER_ID=? AND EXPRESS_CHECKOUT_DEFAULT = 'Y'
	
updatedefaultCreditCardId:UPDATE USER_ELEMENT_P_CARD SET EXPRESS_CHECKOUT_DEFAULT = 'Y' WHERE USER_ID =?  AND  USER_PCARD_ID = ?
	
approveMailDetails :SELECT SLI.QTY,IM.PART_NUMBER ,ITIMG.IMAGE_NAME,LIM.SHORT_DESC,IM.ITEM_ID,SIL.UPDATED_DATETIME FROM ITEM_MASTER IM, SAVED_LIST_ITEMS SLI,SAVED_ITEM_LIST SIL ,LOC_ITEM_MASTER LIM, ITEM_IMAGES ITIMG WHERE SLI.ITEM_ID = LIM.ITEM_ID(+) AND LIM.ITEM_IMAGE_ID = ITIMG.ITEM_IMAGE_ID AND SLI.SAVED_LIST_ID=SIL.SAVED_LIST_ID AND IM.ITEM_ID=SLI.ITEM_ID AND SIL.SAVED_LIST_NAME=?

getAgentShipAddressFromBCAddressBook =SELECT BC_ADDRESS_BOOK_ID,  SHIP_TO_ID,  FIRST_NAME,  LAST_NAME,  ADDRESS1,  ADDRESS2,  CITY,  STATE,  ZIPCODE,  ENTITY_ID,  COUNTRY,  PHONE,  ADDRESS_TYPE,  SHIP_TO_ID,  CUSTOMER_NAME,  DEFAULT_SUBSET_ID,  PARENET_SUBSET, WAREHOUSE_SUBSET, SUBSET_ID, SHIP_TO_NAME FROM(SELECT BC.BC_ADDRESS_BOOK_ID,BC.SHIP_TO_ID,BC.FIRST_NAME,BC.LAST_NAME,BC.ADDRESS1,BC.ADDRESS2,BC.CITY,BC.STATE,BC.ZIPCODE,BC.ENTITY_ID,BC.COUNTRY,BC.PHONE,BC.ADDRESS_TYPE, BCA.CUSTOMER_NAME,BCA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(BCA.SUBSET_ID,1) > 1 THEN BCA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(BCA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID, BC.SHIP_TO_NAME, row_number() over (partition by BC.BC_ADDRESS_BOOK_ID order by BC.BC_ADDRESS_BOOK_ID) rn FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY BCA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BCA.ENTITY_ID = BC.ENTITY_ID AND BC.BUYING_COMPANY_ID = BCA.BUYING_COMPANY_ID AND BC.STATUS='A' AND W.WAREHOUSE_CODE(+) = BCA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = BCA.PARENT_COMPANY_ID AND BC.BC_ADDRESS_BOOK_ID IN (SELECT BC_ADDRESS_BOOKID FROM USER_SHIPTO WHERE CIMM_USER_ID=?)) WHERE rn =1

getAgentShipAddressFromBCAddressBookFULL =SELECT BC.BC_ADDRESS_BOOK_ID,BC.SHIP_TO_ID,BC.FIRST_NAME,BC.LAST_NAME,BC.ADDRESS1,BC.ADDRESS2,BC.CITY,BC.STATE,BC.ZIPCODE,BC.ENTITY_ID,BC.COUNTRY,BC.PHONE,BC.ADDRESS_TYPE,BC.SHIP_TO_ID , BCA.CUSTOMER_NAME,BCA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(BCA.SUBSET_ID,1) > 1 THEN BCA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(BCA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID, BC.SHIP_TO_NAME FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY BCA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BCA.ENTITY_ID = BC.ENTITY_ID AND BC.BUYING_COMPANY_ID = BCA.BUYING_COMPANY_ID AND BC.STATUS='A' AND W.WAREHOUSE_CODE(+) = BCA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = BCA.PARENT_COMPANY_ID  AND BC.BC_ADDRESS_BOOK_ID IN (SELECT BC_ADDRESS_BOOKID FROM USER_SHIPTO WHERE CIMM_USER_ID=?)

getShareCartItems : SELECT SLI.LIST_ITEM_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.STATUS,IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PART_NUMBER,   IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME, IDMV.BRAND_IMAGE, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC,IP.SALES_UOM,IP.SALES_QTY,ip.PACKAGE_FLAG,ip.PACKAGE_QTY, IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,IP.NET_PRICE,SLI.QTY,SIL.SENT_BY_APPR_USER_ID,IDMV.MIN_ORDER_QTY,  IDMV.ORDER_QTY_INTERVAL,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * SLI.QTY) EXTPRICE , '' LINE_ITEM_COMMENT FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP,CIMM_USERS CU, CART_SHARE CS WHERE SLI.SAVED_LIST_ID \=? AND CU.USER_ID          \= CS.SHARED_BY_USER_ID AND SIL.USER_ID         \= CU.USER_ID AND IP.ITEM_PRICE_ID    \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID         \= IP.ITEM_ID AND SIL.SAVED_LIST_ID   \= SLI.SAVED_LIST_ID AND IDMV.SUBSET_ID      \=? UNION SELECT SLI.LIST_ITEM_ID,   SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.STATUS, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PART_NUMBER, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.BRAND_IMAGE,  IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, IP.SALES_UOM, IP.SALES_QTY,ip.PACKAGE_FLAG,ip.PACKAGE_QTY,  IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,IP.NET_PRICE,SLI.QTY,  SIL.SENT_BY_APPR_USER_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * SLI.QTY) EXTPRICE,'' LINE_ITEM_COMMENT FROM ITEM_DETAILS_MV IDMV,   SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, CART_SHARE CS WHERE SLI.SAVED_LIST_ID \= ? AND CU.USER_ID          \=  CS.SHARED_BY_USER_ID AND SIL.USER_ID         \= CU.USER_ID AND IP.ITEM_PRICE_ID    \= IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID         \= IP.ITEM_ID AND SIL.SAVED_LIST_ID   \= SLI.SAVED_LIST_ID AND IDMV.SUBSET_ID      \= ? AND IDMV.ITEM_ID NOT   IN (SELECT SLI.ITEM_ID FROM SAVED_LIST_ITEMS SLI, ITEM_DETAILS_MV IDMV WHERE SLI.SAVED_LIST_ID \= ? AND IDMV.ITEM_ID        \= SLI.ITEM_ID AND IDMV.SUBSET_ID      \= ? )

getSuperUserOfCompany :SELECT CU.USER_ID,CU.EMAIL,CU.FIRST_NAME,CU.LAST_NAME FROM BUYING_COMPANY BC,CIMM_USERS CU,CIMM_ROLES CR,CIMM_USER_ROLES CUR WHERE BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CR.ROLE_NAME ='Ecomm Customer Super User' AND CR.ROLE_ID = CUR.ROLE_ID AND CUR.USER_ID = CU.USER_ID AND CU.STATUS='Y' AND BC.CUSTOMER_NAME =?

getSuperUserOfAccount :SELECT CU.USER_ID,CU.EMAIL,CU.FIRST_NAME,CU.LAST_NAME FROM BUYING_COMPANY BC,CIMM_USERS CU,CIMM_ROLES CR,CIMM_USER_ROLES CUR WHERE BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CR.ROLE_NAME ='Ecomm Customer Super User' AND CR.ROLE_ID = CUR.ROLE_ID AND CUR.USER_ID = CU.USER_ID AND CU.STATUS='Y' AND BC.ENTITY_ID =?
 
deleteFromQuickCart :DELETE FROM CART WHERE USER_ID=? AND SESSIONID = ?
 
insertCustomForm :INSERT INTO CIMM_FORMS (CIMM_FORM_ID,CIMM_FORM_NAME) VALUES(?,?)
	
insertCustomFormFieldDetails:INSERT INTO CIMM_FORM_CONTENTS(CIMM_FORM_ROW_ID,CIMM_FORM_ID,FIELD_NAME,FIELD_VALUE,UPDATED_DATETIME) VALUES(CIMM_FORM_CONTENT_SEQ.NEXTVAL,?,?,?,SYSDATE)
	
getCIMMNotificationDetails: SELECT * FROM CIMM_NOTIFICATIONS where NOTIFICATION_NAME=? AND SITE_ID=?

getDistinctEventsType:SELECT EVENT_TYPE FROM EVENT_MANAGER

taxonomyLevelFitler:SELECT TT.TAXONOMY_TREE_ID, TT.CATEGORY_CODE, LTT.CATEGORY_NAME, TT.IMAGE_NAME, TT.LEVEL_NUMBER, TT.DISP_SEQ FROM  TAXONOMY_TREE TT, LOC_TAXONOMY_TREE LTT WHERE TT.TAXONOMY_ID =? AND TT.LEVEL_NUMBER =? AND TT.STATUS = 'Y' AND TT.TAXONOMY_TREE_ID = LTT.TAXONOMY_TREE_ID AND LTT.LOCALE_ID =? ORDER BY TT.DISP_SEQ

getShipBranchName:SELECT WAREHOUSE_NAME FROM WAREHOUSE WHERE WAREHOUSE_CODE=?

getSubsetByEntity:select subset_id from buying_company where entity_id =?

deleteQuoteCart:DELETE FROM QUOTE_CART WHERE QUOTE_CART_ID = ?

updateQuoteCart:UPDATE QUOTE_CART SET QTY = ?,EXT_PRICE=PRICE * ? WHERE QUOTE_CART_ID = ?

getAssignedAddressFromBCAddressBook:SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,BC.EMAIL,CA.BUYING_COMPANY_ID,CA.SUBSET_ID FROM BC_ADDRESS_BOOK BC,BUYING_COMPANY CA WHERE BC.BUYING_COMPANY_ID \=? AND BC.ADDRESS_TYPE \= 'Bill' AND BC.BUYING_COMPANY_ID \= CA.BUYING_COMPANY_ID AND BC.ENTITY_ID \= CA.ENTITY_ID UNION SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID, CA.CUSTOMER_NAME, BC.EMAIL, CA.BUYING_COMPANY_ID,CA.SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, USER_SHIPTO UST WHERE BC.BUYING_COMPANY_ID \=? AND BC.BUYING_COMPANY_ID \= CA.BUYING_COMPANY_ID AND UST.CIMM_USER_ID \= ? AND BC.BC_ADDRESS_BOOK_ID \= UST.BC_ADDRESS_BOOKID AND BC.ENTITY_ID  \= CA.ENTITY_ID\t

getAcceptPo:SELECT CU.ACCEPT_ORDER_BY_PO_NUM CU_ACCEPT_ORDER_BY_PO_NUM, BC.ACCEPT_ORDER_BY_PO_NUM BC_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU, BUYING_COMPANY BC WHERE USER_ID=? AND BC.BUYING_COMPANY_ID=CU.BUYING_COMPANY_ID

getNewsLetterSubScripitonStatusCustomField:SELECT C.USER_ID,UC.LOC_CUSTOM_FIELD_VALUE_ID,LC.TEXT_FIELD_VALUE  FROM USER_CUSTOM_FIELD_VALUES UC , LOC_CUSTOM_FIELD_VALUES LC ,  CIMM_USERS C, BUYING_COMPANY B WHERE UC.USER_ID = C.USER_ID AND C.BUYING_COMPANY_ID = B.BUYING_COMPANY_ID AND UC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND UC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = 'Newsletter' || 'MarketingMaterial'  ) AND UC.USER_ID = ?

getManufacturerIndex: SELECT DISTINCT UPPER((SUBSTR(TRIM(M.MANUFACTURER_NAME),1,1))) AS MANUFACTURER_NAME FROM MANUFACTURER M, ITEM_DETAILS_MV IDMV WHERE M.STATUS = 'Y' AND M.MANUFACTURER_ID = IDMV.MANUFACTURER_ID AND IDMV.SUBSET_ID in (?,?) ORDER BY MANUFACTURER_NAME ASC

getDirectFromManufacturerIndex: SELECT DISTINCT UPPER((SUBSTR(TRIM(M.MANUFACTURER_NAME),1,1))) AS MANUFACTURER_NAME FROM MANUFACTURER M,   ITEM_DETAILS_MV IDMV,   MFR_CF_VALUES_VIEW MFRCF WHERE MFRCF.field_name = 'DIRECT_FROM_MANUFACTURER' AND MFRCF.FIELD_VALUE  = 'Y' AND M.MANUFACTURER_ID  = MFRCF.MANUFACTURER_ID AND M.MANUFACTURER_ID  = IDMV.MANUFACTURER_ID AND IDMV.SUBSET_ID     =? ORDER BY MANUFACTURER_NAME ASC

getManufacturerList:SELECT distinct(M.MANUFACTURER_ID), M.MANUFACTURER_NAME,M.MANUFACTURER_LOGO FROM MANUFACTURER M, ITEM_DETAILS_MV IDMV WHERE UPPER(M.MANUFACTURER_NAME) LIKE ? AND M.STATUS = 'Y' AND M.MANUFACTURER_ID = IDMV.MANUFACTURER_ID AND IDMV.SUBSET_ID = ? ORDER BY NLSSORT(M.MANUFACTURER_NAME, 'NLS_SORT = GENERIC_M')

getDirectFromManufacturerList: SELECT DISTINCT(M.MANUFACTURER_ID), M.MANUFACTURER_NAME FROM MANUFACTURER M,  ITEM_DETAILS_MV IDMV,  MFR_CF_VALUES_VIEW MFRCF WHERE UPPER(M.MANUFACTURER_NAME) LIKE ? AND MFRCF.field_name = 'DIRECT_FROM_MANUFACTURER' AND MFRCF.FIELD_VALUE  = 'Y' AND M.MANUFACTURER_ID  = MFRCF.MANUFACTURER_ID AND M.STATUS = 'Y' AND M.MANUFACTURER_ID = IDMV.MANUFACTURER_ID AND IDMV.SUBSET_ID    = ? ORDER BY NLSSORT(M.MANUFACTURER_NAME, 'NLS_SORT = GENERIC_M')

getBrandList:SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME,B.BRAND_IMAGE FROM BRANDS B, ITEM_DETAILS_MV IDMV WHERE B.BRAND_NAME LIKE ? AND B.STATUS = 'Y' AND B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID=? ORDER BY NLSSORT(B.BRAND_NAME, 'NLS_SORT = GENERIC_M')

getBrandListCustom:select DISTINCT(BRAND_ID), BRAND_NAME,BRAND_IMAGE from BRAND_CF_VALUES_VIEW where FIELD_NAME ='FEATURED_BRANDS' and STATUS='Y' and BRAND_NAME LIKE ? ORDER BY NLSSORT(BRAND_NAME, 'NLS_SORT = GENERIC_M')

getBrandListIncludingGenralSubset:SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME,B.BRAND_IMAGE FROM BRANDS B, ITEM_DETAILS_MV IDMV WHERE B.BRAND_NAME LIKE ? AND B.STATUS = 'Y' AND B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID in (?,?) ORDER BY NLSSORT(B.BRAND_NAME, 'NLS_SORT = GENERIC_M')

getBrandListIncludingGenralSubsetCustom:SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME,B.BRAND_IMAGE FROM BRANDS B, ITEM_DETAILS_MV IDMV, BRAND_CF_VALUES_VIEW BCFVV WHERE B.STATUS = 'Y' AND B.BRAND_NAME LIKE ? AND B.BRAND_ID = IDMV.BRAND_ID AND BCFVV.FIELD_NAME='FEATURED_BRANDS' AND BCFVV.FILED_VALUE='Y' AND BCFVV.BRAND_ID=IDMV.BRAND_ID ORDER BY NLSSORT(B.BRAND_NAME, 'NLS_SORT = GENERIC_M')

getIsRegisteredUser:select user_id from cimm_users where upper(USER_NAME)=? AND STATUS = 'Y' AND SITE_ID =?

getIsRegisteredInactiveUser:select user_id from cimm_users where upper(USER_NAME)=? AND STATUS = 'I'

getReviews:SELECT CU.USER_NAME,R.REVIEW_ID,R.ITEM_ID,R.COMMENTS,R.RATING,R.UPDATED_DATETIME,R.TITLE FROM REVIEWS R,CIMM_USERS CU WHERE CU.STATUS = 'Y' AND R.STATUS='A' AND R.ITEM_ID =? AND CU.USER_ID = R.USER_ID ORDER BY R.UPDATED_DATETIME DESC

getTreeIdLevelNo:SELECT TT.TAXONOMY_TREE_ID,LEVEL_NUMBER FROM TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC,ITEM_PRICES IP WHERE IP.ITEM_PRICE_ID = ? AND IC.ITEM_ID = IP.ITEM_ID AND TT.TAXONOMY_ID = ? AND TT.TAXONOMY_TREE_ID = IC.TAXONOMY_TREE_ID AND IC.DEFAULT_CATEGORY = 'Y'

getShipViaList:SELECT * FROM SHIP_VIA_LIST

updateRejectipnReason:UPDATE SAVED_ITEM_LIST SET STATUS='R', UPDATED_DATETIME=SYSDATE WHERE SAVED_LIST_ID=? AND USER_ID=? AND TYPE = 'A'

selectFromCart:SELECT CART_ID, QTY, ITEM_ID FROM CART WHERE USER_ID = ? AND ITEM_ID=? AND UOM=?

selectFromCartAP:SELECT CART_ID, QTY, BC_ADDRESS_BOOK_ID FROM CART WHERE USER_ID = ? AND ITEM_ID=? AND UOM=? AND BC_ADDRESS_BOOK_ID=?

selectGroupName:SELECT * FROM SAVED_ITEM_LIST WHERE USER_ID=? AND SAVED_LIST_NAME=? AND TYPE=?

updateGroupName:UPDATE SAVED_ITEM_LIST SET SAVED_LIST_NAME=? WHERE SAVED_LIST_ID=?

getFromQuoteCartQuery:SELECT C.QUOTE_CART_ID,C.ITEM_ID,C.QTY,C.SHORT_DESC,C.UOM,C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC FROM QUOTE_CART C, LOC_ITEM_MASTER LIM WHERE LIM.ITEM_ID = C.ITEM_ID AND C.SESSION_ID = ?

getTaxInfo:SELECT TAX_INFO FROM BUYING_COMPANY WHERE ENTITY_ID=?

getCustomerWareHouseID:SELECT WAREHOUSE_ID FROM WAREHOUSE WHERE WAREHOUSE_CODE=?

getCustomerDefault:SELECT DIVISION_NO,WAREHOUSE_CODE,CREDIT_MANGER_CODE,SALES_REP_IN,SALES_REP_OUT FROM CUSTOMER_DEFAULT WHERE STATE_CODE=?

checkCustomerNumberExistInDB:SELECT BUYING_COMPANY_ID, ENTITY_ID,CUSTOMER_NAME FROM BUYING_COMPANY WHERE UPPER(ENTITY_ID) = ?

getDefaultShip:SELECT BAB.BC_ADDRESS_BOOK_ID FROM BUYING_COMPANY BC, BC_ADDRESS_BOOK BAB WHERE BAB.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID AND BAB.ADDRESS_TYPE = 'Ship' AND BC.ENTITY_ID = ? ORDER BY BAB.BC_ADDRESS_BOOK_ID

getDefaultBill:SELECT BAB.BC_ADDRESS_BOOK_ID FROM BUYING_COMPANY BC, BC_ADDRESS_BOOK BAB WHERE BAB.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID AND BAB.ADDRESS_TYPE = 'Bill' AND BC.ENTITY_ID = ? ORDER BY BAB.BC_ADDRESS_BOOK_ID

insertBCAddressBook:INSERT INTO BC_ADDRESS_BOOK(BC_ADDRESS_BOOK_ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIPCODE,COUNTRY,PHONE,ADDRESS_TYPE,STATUS,UPDATED_DATETIME,ENTITY_ID,BUYING_COMPANY_ID,FIRST_NAME,LAST_NAME,SHIP_TO_ID,EMAIL,SHIP_TO_NAME,WAREHOUSE_CODE)VALUES(?,?,?,?,?,?,?,?,?,'A',SYSDATE,?,?,?,?,?,?,?,?)

getUserRole:SELECT ROLE_NAME FROM CIMM_ROLES CR, CIMM_USER_ROLES CUR WHERE CUR.USER_ID = ? AND CR.ROLE_ID = CUR.ROLE_ID

getApprovalUserList:select CUA.*,CU.EMAIL from CIMM_USERS_APPROVERS CUA, CIMM_USERS CU WHERE CUA.USER_ID = ? AND CU.USER_ID = CUA.APPROVER_ID AND CU.STATUS = 'Y'

getBcAddressBookIdFromShipToId= SELECT BC_ADDRESS_BOOK_ID FROM BC_ADDRESS_BOOK WHERE SHIP_TO_ID=? AND BUYING_COMPANY_ID=?

getListAssignedAPAtoUser:SELECT * FROM CIMM_USERS_APPROVERS WHERE APPROVER_ID = ?

getAllUserRoles:SELECT * FROM CIMM_ROLES where STATUS='Y' and role_name not in('$ROLLER_USER','admin')

getAssignedShipToList:SELECT  BC_ADDRESS_BOOKID FROM USER_SHIPTO WHERE CIMM_USER_ID = ?

rolbackCheckOutCart:UPDATE CART SET USER_ID=? where USER_ID=? AND SESSIONID=?

getOpenOrdersList:SELECT COUNT(ORI.ORDER_ID) ITEM_CNT, ORD.ORDER_ID, ORD.PURCHASE_ORDER_NUMBER, ORD.ORDER_NUMBER, ORD.EXTERNAL_SYSTEM_ID, ORD.ORDER_DATE, ORD.SUBTOTAL_AMOUNT, ORD.TOTAL_AMOUNT, ORD.SHIP_METHOD, ORD.ORDER_STATUS, ORD.REQUIRED_BY_DATE, ORD.SHIP_ADDRESS1,ORD.SHIP_ADDRESS2,ORD.SHIP_CITY,ORD.SHIP_STATE,ORD.SHIP_ZIP_CODE,ORD.SHIP_COUNTRY_CODE,ORD.FREIGHT,ORD.DISCOUNT_AMOUNT FROM ORDERS ORD, ORDER_ITEMS ORI WHERE ORI.ORDER_ID   = ORD.ORDER_ID AND ORD.USER_ID = ? AND ORD.REQUEST_TYPE = ? AND ORD.ORDER_STATUS = ? GROUP BY ORD.ORDER_ID, ORD.PURCHASE_ORDER_NUMBER, ORD.ORDER_NUMBER, ORD.EXTERNAL_SYSTEM_ID, ORD.ORDER_DATE, ORD.SUBTOTAL_AMOUNT, ORD.TOTAL_AMOUNT, ORD.SHIP_METHOD, ORD.ORDER_STATUS, ORD.REQUIRED_BY_DATE, ORD.SHIP_ADDRESS1, ORD.SHIP_ADDRESS2, ORD.SHIP_CITY, ORD.SHIP_STATE, ORD.SHIP_ZIP_CODE, ORD.SHIP_COUNTRY_CODE, ORD.FREIGHT, ORD.DISCOUNT_AMOUNT ORDER BY ORD.ORDER_DATE DESC

getCustomerCustomTextFieldValue:SELECT LCFV.TEXT_FIELD_VALUE FROM CUSTOM_FIELDS CF,  BC_CUSTOM_FIELD_VALUES BCFV,  LOC_CUSTOM_FIELD_VALUES LCFV WHERE CF.FIELD_NAME = ? AND BCFV.BUYING_COMPANY_ID = ? AND BCFV.CUSTOM_FIELD_ID = CF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = BCFV.LOC_CUSTOM_FIELD_VALUE_ID

getBranchLocation:SELECT BRANCH_LOC_ID,WAREHOUSE_ID,WAREHOUSE_CODE,LOCATION_TITLE,PHONE,EMAIL,LATTITUDE,LONGITUDE,STREET_ADDRESS,STATE,AC,CITY,ZIP,FAX,WORK_HOUR,NOTE,COUNTRY,TOLL_FREE,SERVICE_MANAGER FROM BRANCH_LOCATIONS ORDER BY LOCATION_TITLE

getBranchLocationFilterQuery:SELECT BRANCH_LOC_ID,WAREHOUSE_ID,WAREHOUSE_CODE,LOCATION_TITLE,PHONE,EMAIL,LATTITUDE,LONGITUDE,STREET_ADDRESS,STATE,AC,CITY,ZIP,FAX,WORK_HOUR,NOTE,COUNTRY,TOLL_FREE,SERVICE_MANAGER FROM BRANCH_LOCATIONS

getOrderDetailById:SELECT CUSR.FIRST_NAME, CUSR.LAST_NAME, ORD.ORDER_ID, ORD.ORDER_NUMBER,ORD.BILL_EMAIL_ADDRESS,ORD.SHIP_EMAIL_ADDRESS, ORD.ORDER_STATUS, ORD.ORDER_DATE, ORD.REQUIRED_BY_DATE , ORD.SHIP_DATE, ORD.EXTERNAL_SYSTEM_ID, ORD.BILL_ADDRESS1, ORD.BILL_ADDRESS2, ORD.BILL_CITY, ORD.BILL_COUNTRY_CODE, ORD.BILL_PHONE, ORD.BILL_STATE, ORD.BILL_ZIP_CODE, ORD.SHIP_ADDRESS1, ORD.SHIP_ADDRESS2, ORD.SHIP_CITY, ORD.SHIP_COUNTRY_CODE, ORD.SHIP_PHONE, ORD.SHIP_STATE, ORD.SHIP_ZIP_CODE, ORD.SUBTOTAL_AMOUNT, ORD.TOTAL_AMOUNT, ORD.FREIGHT, ORD.HANDLING_FEE, ORD.CASHDISCOUNT_AMOUNT, ORD.TAX_AMOUNT, ORD.EXTERNAL_SYSTEM_ERROR, ORD.PAYMENT_AUTH_CODE, ORD.PAYMENT_REF_ID, ORD.CC_NUMBER, ORD.CC_EXPIRE_DATE, ORD.CC_CARD_HOLDER, ORD.USER_NOTE, ORD.PAYMENT_DATE,ORD.PAYMENT_METHOD,ORD.PAYMENT_AUTH_CODE,ORD.REFERENCE_KEY,ORD.SHIP_ADDRESSEE,ORD.SHIP_METHOD,ORD.SHIP_METHOD_ID,ORD.FEDERALEXCISETAX,ORD.PURCHASE_ORDER_NUMBER,ORD.ORDER_NOTES,ORD.USER_NAME,ORD.TRANSACTION_ID,ORD.ORDER_TRACKING_NUMBER,ORD.DISCOUNT_COUPON_CODE,ORD.DISCOUNT_AMOUNT,ORD.DISCOUNT_TYPE FROM ORDERS ORD, CIMM_USERS CUSR WHERE ORD.ORDER_ID = ?  AND CUSR.USER_ID = ORD.USER_ID

#getOrderDetailByIdAP:SELECT CUSR.FIRST_NAME, CUSR.LAST_NAME, ORD.ORDER_ID, ORD.ORDER_NUMBER, ORD.BILL_EMAIL_ADDRESS, ORD.SHIP_EMAIL_ADDRESS, ORD.ORDER_STATUS, ORD.ORDER_DATE, ORD.REQUIRED_BY_DATE , ORD.SHIP_DATE, ORD.EXTERNAL_SYSTEM_ID, ORD.BILL_ADDRESS1, ORD.BILL_ADDRESS2, ORD.BILL_CITY, ORD.BILL_COUNTRY_CODE, ORD.BILL_PHONE, ORD.BILL_STATE, ORD.BILL_ZIP_CODE, ORD.SHIP_ADDRESS1, ORD.SHIP_ADDRESS2, ORD.SHIP_CITY, ORD.SHIP_COUNTRY_CODE, ORD.SHIP_PHONE, ORD.SHIP_STATE, ORD.SHIP_ZIP_CODE, ORD.SUBTOTAL_AMOUNT, ORD.TOTAL_AMOUNT, ORD.FREIGHT, ORD.HANDLING_FEE, ORD.CASHDISCOUNT_AMOUNT, ORD.TAX_AMOUNT, ORD.EXTERNAL_SYSTEM_ERROR, ORD.PAYMENT_AUTH_CODE, ORD.PAYMENT_REF_ID, ORD.CC_NUMBER, ORD.CC_EXPIRE_DATE, ORD.CC_CARD_HOLDER, ORD.USER_NOTE, ORD.PAYMENT_DATE, ORD.PAYMENT_METHOD, ORD.PAYMENT_AUTH_CODE, ORD.REFERENCE_KEY, ORD.SHIP_ADDRESSEE, ORD.SHIP_METHOD, ORD.SHIP_METHOD_ID, ORD.FEDERALEXCISETAX, ORD.PURCHASE_ORDER_NUMBER, ORD.ORDER_NOTES, ORD.USER_NAME, ORD.TRANSACTION_ID, ORD.ORDER_TRACKING_NUMBER, ORD.DISCOUNT_COUPON_CODE, ORD.DISCOUNT_AMOUNT, ORD.DISCOUNT_TYPE, BCAB.BC_ADDRESS_BOOK_ID, CF.FIELD_NAME, LCFV.TEXT_FIELD_VALUE FROM ORDERS ORD, CIMM_USERS CUSR, BC_ADDRESS_BOOK BCAB, BC_AB_CUSTOM_FIELD_VALUES BCABCF, LOC_CUSTOM_FIELD_VALUES LCFV, CUSTOM_FIELDS CF WHERE ORD.ORDER_ID = ? AND CF.FIELD_NAME = ? AND CUSR.USER_ID = ORD.USER_ID AND BCAB.SHIP_TO_ID = ORD.SHIPPING_SHIP_TO_ID AND BCABCF.ADDRESS_BOOK_ID = BCAB.BC_ADDRESS_BOOK_ID AND CF.CUSTOM_FIELD_ID = BCABCF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = BCABCF.LOC_CUSTOM_FIELD_VALUE_ID

getOrderDetailByNumber:SELECT CUSR.FIRST_NAME, CUSR.LAST_NAME, ORD.ORDER_ID, ORD.ORDER_NUMBER, ORD.ORDER_STATUS, ORD.ORDER_DATE, ORD.REQUIRED_BY_DATE , ORD.SHIP_DATE, ORD.EXTERNAL_SYSTEM_ID, ORD.BILL_ADDRESS1, ORD.BILL_ADDRESS2, ORD.BILL_CITY, ORD.BILL_COUNTRY_CODE, ORD.BILL_PHONE, ORD.BILL_STATE, ORD.BILL_ZIP_CODE, ORD.SHIP_ADDRESS1, ORD.SHIP_ADDRESS2, ORD.SHIP_CITY, ORD.SHIP_COUNTRY_CODE, ORD.SHIP_PHONE, ORD.SHIP_STATE, ORD.SHIP_ZIP_CODE, ORD.SUBTOTAL_AMOUNT, ORD.TOTAL_AMOUNT, ORD.FREIGHT, ORD.HANDLING_FEE, ORD.CASHDISCOUNT_AMOUNT, ORD.TAX_AMOUNT, ORD.EXTERNAL_SYSTEM_ERROR, ORD.PAYMENT_AUTH_CODE, ORD.PAYMENT_REF_ID, ORD.CC_NUMBER, ORD.CC_EXPIRE_DATE, ORD.CC_CARD_HOLDER, ORD.USER_NOTE, ORD.PAYMENT_DATE,ORD.PAYMENT_METHOD,ORD.PAYMENT_AUTH_CODE,ORD.REFERENCE_KEY,ORD.SHIP_METHOD,ORD.SHIP_METHOD_ID,ORD.FEDERALEXCISETAX,ORD.PURCHASE_ORDER_NUMBER,ORD.ORDER_NOTES,ORD.USER_NAME,ORD.TRANSACTION_ID,ORD.DISCOUNT_COUPON_CODE,ORD.DISCOUNT_AMOUNT,ORD.DISCOUNT_TYPE,ORD.BILL_EMAIL_ADDRESS,ORD.SHIP_EMAIL_ADDRESS,ORD.ORDER_TRACKING_NUMBER,ORD.SHIP_ADDRESSEE FROM ORDERS ORD, CIMM_USERS CUSR WHERE ORD.PRIMARY_ORDER_NUMBER = ? AND CUSR.USER_ID = ORD.USER_ID

getQuoteCartItemDetailQuery:SELECT  TT.CATEGORY_NAME, C.QUOTE_CART_ID ,C.PRICE,C.QUOTE_CART_ID AS CART_ID,C.ADDITIONAL_PROPERTIES,IDMV.ITEM_ID,   IDMV.ITEM_PRICE_ID,   IDMV.SUBSET_ID,   IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC,   IDMV.LONG_DESC1,   IDMV.LONG_DESC2,   IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME,  IDMV.MATERIAL_GROUP,   IDMV.INVOICE_DESC,   IDMV.PACK_DESC,   IP.SALES_UOM,IP.OVERRIDE_PRICE_RULE,   IP.SALES_QTY,   IDMV.IMAGE_NAME,   IDMV.IMAGE_TYPE,   C.PRICE AS NET_PRICE,   IDMV.UNSPSC,   C.QTY,   IDMV.MIN_ORDER_QTY,   IDMV.ORDER_QTY_INTERVAL,   IP.PACKAGE_QTY,   IP.PACKAGE_FLAG,   IP.CUSTOMER_PART_NUMBER,   IDMV.MANUFACTURER_PART_NUMBER,   (C.PRICE * C.QTY) "EXTPRICE",C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA, C.ITEM_LEVEL_SHIPVIA_DESC, C.ITEMLEVEL_REQUIREDBYDATE, C.CATALOG_ID, C.GET_PRICE_FROM, C.UOM,C.SHORT_DESCRIPTION, IDMV.WEIGHT, IDMV.WEIGHT_UOM ,IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM FROM ITEM_DETAILS_MV IDMV,   QUOTE_CART C,   ITEM_PRICES IP, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE C.SESSION_ID      \=? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID        \= IP.ITEM_ID AND IDMV.SUBSET_ID   \=? AND TT.TAXONOMY_TREE_ID(+) = IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) = C.ITEM_ID AND IC.DEFAULT_CATEGORY = 'Y' AND TT.TAXONOMY_ID= ? UNION SELECT    TT.CATEGORY_NAME, C.QUOTE_CART_ID,C.PRICE, C.QUOTE_CART_ID AS CART_ID,C.ADDITIONAL_PROPERTIES, IDMV.ITEM_ID,   IDMV.ITEM_PRICE_ID,   IDMV.SUBSET_ID,   IDMV.PART_NUMBER,IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC,   IDMV.LONG_DESC1,   IDMV.LONG_DESC2,   IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME,  IDMV.MATERIAL_GROUP,   IDMV.INVOICE_DESC,   IDMV.PACK_DESC,   IP.SALES_UOM,IP.OVERRIDE_PRICE_RULE,   IP.SALES_QTY,   IDMV.IMAGE_NAME,   IDMV.IMAGE_TYPE,   C.PRICE AS NET_PRICE,   IDMV.UNSPSC,   C.QTY,   IDMV.MIN_ORDER_QTY,   IDMV.ORDER_QTY_INTERVAL,   IP.PACKAGE_QTY,   IP.PACKAGE_FLAG,   IP.CUSTOMER_PART_NUMBER,   IDMV.MANUFACTURER_PART_NUMBER,   (C.PRICE * C.QTY) "EXTPRICE",C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA, C.ITEM_LEVEL_SHIPVIA_DESC, C.ITEMLEVEL_REQUIREDBYDATE, C.CATALOG_ID, C.GET_PRICE_FROM,C.UOM,C.SHORT_DESCRIPTION, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM FROM ITEM_DETAILS_MV IDMV,   QUOTE_CART C,   ITEM_PRICES IP, TAXONOMY_TREE TT,ITEM_CLASSIFICATION IC WHERE C.SESSION_ID       \= ? AND IP.ITEM_PRICE_ID  \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID         \= IP.ITEM_ID AND IDMV.SUBSET_ID    \=? AND TT.TAXONOMY_TREE_ID(+) = IC.TAXONOMY_TREE_ID AND IC.ITEM_ID(+) = C.ITEM_ID  AND IC.DEFAULT_CATEGORY = 'Y' AND TT.TAXONOMY_ID= ? AND IDMV.ITEM_ID NOT IN   (SELECT C.ITEM_ID   FROM QUOTE_CART C,     ITEM_DETAILS_MV IDMV   WHERE C.SESSION_ID   \=?   AND IDMV.ITEM_ID  \= C.ITEM_ID   AND IDMV.SUBSET_ID\=?   )

updateExistingUserEmail:UPDATE CIMM_USERS SET USER_NAME=? WHERE USER_NAME=?

isSharedCart:SELECT SHARED_CART_ID FROM CART_SHARE WHERE CART_ID = ? AND SHARE_W_USER_ID = ?

shareUserSavedCart:INSERT INTO CART_SHARE(SHARED_CART_ID,CART_ID,SHARE_W_USER_ID,SHARED_BY_USER_ID,USER_EDITED,UPDATED_DATETIME,NOTES)VALUES(CART_SHARE_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?)

getCartItemDetailQueryQuote:SELECT QC.QUOTE_CART_ID,QC.PART_NUMBER,QC.MANUFACTURER_PART_NUMBER,QC.UPC,QC.SHORT_DESC,QC.LONG_DESC,QC.PRICE,QC.EXT_PRICE,QC.SESSION_ID,QC.ITEM_ID,QC.UNSPSC,QC.MATERIAL_GROUP,QC.QTY,QC.UOM,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC,IDMV.PACK_DESC,IP.SALES_UOM,IP.PACKAGE_FLAG,IP.NET_PRICE,IP.SALES_QTY,IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,IP.ITEM_PRICE_ID,IP.SUBSET_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.CUSTOMER_PART_NUMBER,IP.PACKAGE_QTY,((IP.NET_PRICE/IP.SALES_QTY) * QC.QTY) EXTPRICE FROM QUOTE_CART QC,ITEM_DETAILS_MV IDMV,ITEM_PRICES IP WHERE QC.SESSION_ID  = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND QC.ITEM_ID = IP.ITEM_ID

getTopTabInUse:SELECT TT.TAXONOMY_TREE_ID, TT.CATEGORY_CODE, LTT.CATEGORY_NAME, TT.IMAGE_NAME,   TT.LEVEL_NUMBER, TT.DISP_SEQ, ttcm.subset_id FROM TAXONOMY_TREE TT, LOC_TAXONOMY_TREE LTT,   subsets dept,   top_tab_counts_mv ttcm WHERE TT.TAXONOMY_ID    =? AND TT.LEVEL_NUMBER     =? AND TT.STATUS = 'Y' AND TT.TAXONOMY_TREE_ID = LTT.TAXONOMY_TREE_ID AND LTT.LOCALE_ID =? and ttcm.level1=tt.TAXONOMY_TREE_ID and ttcm.subset_id = dept.subset_id ORDER BY TT.DISP_SEQ

updateBCAddress:UPDATE BC_ADDRESS_BOOK SET ADDRESS1=?,ADDRESS2=?,CITY=?,STATE=?,ZIPCODE=?,PHONE =?,STATUS=? WHERE ENTITY_ID = ?

updateBuyingCompany:UPDATE BUYING_COMPANY SET CUSTOMER_NAME=?,ADDRESS1=?,ADDRESS2=?,CITY=?,STATE=?,ZIP=?,COUNTRY=?,EMAIL=?,STATUS=?,USER_EDITED=?,UPDATED_DATETIME=sysdate WHERE ENTITY_ID = ?

getSubsetIdFromSubsetName:SELECT SUBSET_ID FROM SUBSETS WHERE SUBSET_NAME = ?

#staticSubMenu:SELECT STATIC_LINK_ID,LINK_NAME,LEVEL_NUMBER,STATIC_PAGE_ID,STATIC_PAGE_TYPE,STATIC_PAGE_URL,PARENT_ID from WEB_STATIC_LINKS_TREE where site_id = ?
staticSubMenu:SELECT WSLT.STATIC_LINK_ID, WSLT.LINK_NAME, WSLT.LEVEL_NUMBER, WSLT.STATIC_PAGE_ID, WSLT.STATIC_PAGE_TYPE, WSLT.STATIC_PAGE_URL, WSLT.PARENT_ID,SP.PAGE_NAME,SP.PAGE_TITLE,SP.CUSTOM_URL from WEB_STATIC_LINKS_TREE WSLT, STATIC_PAGES SP where WSLT.site_id = ? AND SP.STATIC_PAGE_ID(+) = WSLT.STATIC_PAGE_ID

getUserCustomTextFieldValue : SELECT LCFV.TEXT_FIELD_VALUE FROM CUSTOM_FIELDS CF, USER_CUSTOM_FIELD_VALUES UCFV, LOC_CUSTOM_FIELD_VALUES LCFV WHERE UPPER(CF.FIELD_NAME) = ? AND UCFV.USER_ID =? AND UCFV.CUSTOM_FIELD_ID = CF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = UCFV.LOC_CUSTOM_FIELD_VALUE_ID

customFieldValueInsert: INSERT INTO LOC_CUSTOM_FIELD_VALUES (LOC_CUSTOM_FIELD_VALUE_ID,TEXT_FIELD_VALUE,LOCALE_ID,USER_EDITED,UPDATED_DATETIME)  (SELECT LOC_CUSTOM_FIELD_VALUE_ID_SEQ.NEXTVAL,?,?,?,SYSDATE FROM DUAL WHERE 0=(SELECT COUNT(1) FROM LOC_CUSTOM_FIELD_VALUES WHERE UPPER(TEXT_FIELD_VALUE)=?))

getCustomFieldId: SELECT CF.CUSTOM_FIELD_ID FROM CUSTOM_FIELDS CF WHERE UPPER(CF.FIELD_NAME)=? AND CF.DATA_ENTITY=?

updateUserCustomFieldValue: UPDATE USER_CUSTOM_FIELD_VALUES UCFV SET UCFV.LOC_CUSTOM_FIELD_VALUE_ID=(SELECT LCFV.LOC_CUSTOM_FIELD_VALUE_ID FROM LOC_CUSTOM_FIELD_VALUES LCFV WHERE UPPER(LCFV.TEXT_FIELD_VALUE)=?) WHERE UCFV.CUSTOM_FIELD_ID=? AND USER_ID=?

insertUserCustomFieldValue: INSERT INTO USER_CUSTOM_FIELD_VALUES (USER_CUSTOM_FIELD_VALUE_ID,USER_ID,CUSTOM_FIELD_ID,LOC_CUSTOM_FIELD_VALUE_ID,STATUS,USER_EDITED,UPDATED_DATETIME) values (USER_CUSTOM_FIELD_VAL_ID_SEQ.NEXTVAL,?,?,?,'Y',?,SYSDATE)

updateSubsetIdFromERP: UPDATE BUYING_COMPANY SET SUBSET_ID= ? where BUYING_COMPANY_ID = ? AND BUYING_COMPANY_ID >3

getUserRoleByUserName:SELECT ROLE_NAME FROM CIMM_ROLES CR, CIMM_USER_ROLES CUR WHERE CUR.USER_ID in (SELECT USER_ID FROM cimm_users where UPPER(USER_NAME) = UPPER(?) AND USER_TYPE='ECOMM' AND SITE_ID=?) AND CR.ROLE_ID = CUR.ROLE_ID

getUserShipViaAdvanced: SELECT SV.SHIP_VIA_CODE,SV.SHIP_VIA_NAME,SV.SERVICE_CODES FROM SHIP_VIA_METHODS SVM,SHIP_VIA_VALUES SVV,SHIP_VIA_DELIVERY_TYPE SVDT,SHIP_VIA SV WHERE UPPER(SVV.SHIP_VIA_CODE)=? AND SVDT.SHIP_DELIVERY_ID=SVV.SHIP_DELIVERY_ID AND SVM.SHIP_DELIVERY_ID = SVDT.SHIP_DELIVERY_ID AND SV.SHIP_VIA_ID = SVM.SHIP_VIA_ID ORDER BY SV.DISP_SEQ

getEntityIdFromBCAddressBookBybcAddressBookId: SELECT BC_ADDRESS_BOOK_ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIPCODE,COUNTRY,PHONE,ADDRESS_TYPE,STATUS,UPDATED_DATETIME,ENTITY_ID,BUYING_COMPANY_ID,FIRST_NAME,LAST_NAME,SHIP_TO_ID,EMAIL FROM BC_ADDRESS_BOOK WHERE BC_ADDRESS_BOOK_ID = ? AND BUYING_COMPANY_ID = ?

getEntityIdFromBCAddressBookByEntityId: SELECT BC_ADDRESS_BOOK_ID,ADDRESS1,ADDRESS2,CITY,STATE,ZIPCODE,COUNTRY,PHONE,ADDRESS_TYPE,STATUS,UPDATED_DATETIME,ENTITY_ID,BUYING_COMPANY_ID,FIRST_NAME,LAST_NAME,SHIP_TO_ID,EMAIL FROM BC_ADDRESS_BOOK WHERE ENTITY_ID = ? AND BUYING_COMPANY_ID = ?

getUserContactInformation : SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,ADDRESS1,ADDRESS2,CITY,STATE,ZIP,COUNTRY,OFFICE_PHONE,CELL_PHONE,FAX,EMAIL,ECLIPSE_CONTACT_ID FROM CIMM_USERS WHERE USER_ID=?

getFreightValue: SELECT FREIGHT, OVERSIZE_INCLUDED FROM FREIGHT_RULES FR, WAREHOUSE WH WHERE WH.WAREHOUSE_CODE=? AND FR.WAREHOUSE_ID = WH.WAREHOUSE_ID AND UPPER(SHIPVIA_CODE)=? AND MINORDER_VALUE <= ? AND MAXORDER_VALUE >= ?

getAddressListFromBCAddressBookJDW:with SL as (SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.EMAIL, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BC.BUYING_COMPANY_ID =? AND CA.STATUS='A' AND W.WAREHOUSE_CODE(+) = CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = CA.PARENT_COMPANY_ID) SELECT  FROM (Select SL., ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE ORDER BY ENTITY_ID) AS rn from SL) WHERE   rn < 2

getShipBranchId : SELECT * FROM WHAREHOUSE_CF_VALUES_VIEW WHERE WAREHOUSE_CODE=? AND UPPER(FIELD_NAME)='SHIP BRANCH'

getDistributionCenterFromWarehouseCustomFields = SELECT BC.BUYING_COMPANY_ID, WC.LOC_CUSTOM_FIELD_VALUE_ID, LC.TEXT_FIELD_VALUE,W.WAREHOUSE_ID FROM WAREHOUSE_CUSTOM_FIELD_VALUES WC, LOC_CUSTOM_FIELD_VALUES LC, WAREHOUSE W, BUYING_COMPANY BC WHERE WC.WAREHOUSE_ID = W.WAREHOUSE_ID AND W.WAREHOUSE_CODE = BC.WAREHOUSE_CODE AND WC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND WC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = 'DistributionCenter' ) AND BC.BUYING_COMPANY_ID = ?

getDistributionCenterFromWarehouseCustomFieldsByWarehouse = SELECT WC.LOC_CUSTOM_FIELD_VALUE_ID, LC.TEXT_FIELD_VALUE,W.WAREHOUSE_ID FROM WAREHOUSE_CUSTOM_FIELD_VALUES WC, LOC_CUSTOM_FIELD_VALUES LC, WAREHOUSE W WHERE WC.WAREHOUSE_ID = W.WAREHOUSE_ID AND WC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND WC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = 'DistributionCenter' ) AND UPPER(W.WAREHOUSE_CODE) = ?

getUserShipVia: SELECT * FROM SHIP_VIA

getProductVideoLinks : SELECT NVL(IVL.VIDEO_CAPTION,IV.VIDEO_NAME) VIDEO_CAPTION,IV.VIDEO_NAME,IV.VIDEO_TYPE FROM ITEM_VIDEOS_LIST IVL,ITEM_VIDEOS IV WHERE IVL.ITEM_ID = ? AND IV.ITEM_VIDEO_ID = IVL.ITEM_VIDEO_ID

updateUserContactEmail :UPDATE CIMM_USERS SET EMAIL=? WHERE USER_ID=?

getWarehouseEmailID:SELECT * FROM WAREHOUSE WHERE WAREHOUSE_CODE=?

getShipViaValuesFromERP : SELECT * FROM SHIP_VIA_VALUES

updateApproveCartStatus : UPDATE SAVED_ITEM_LIST SET STATUS = 'S', UPDATED_DATETIME=SYSDATE WHERE SAVED_LIST_ID=? AND USER_ID=? AND TYPE = 'A'

getWareHouseList : SELECT * FROM WAREHOUSE WHERE (STATUS='A' OR STATUS='Y')

getWareHouseListByCustomFields : SELECT W.WAREHOUSE_ID, W.WAREHOUSE_CODE, W.WAREHOUSE_NAME, W.ADDRESS1, W.ADDRESS2, W.COUNTRY, W.CITY, W.STATE, W.ZIP, W.EMAIL, W.PHONE_NUMBER, W.FAX, W.LATTITUDE, W.LONGITUDE, W.SERVICE_MANAGER, W.WORK_HOUR, W.NOTE, W.AC, TO_NUMBER(WCFVV1.FIELD_VALUE) DISPLAY_SEQ FROM WAREHOUSE W, WAREHOUSE_CF_VALUES_VIEW WCFVV, WAREHOUSE_CF_VALUES_VIEW WCFVV1 WHERE W.WAREHOUSE_ID=WCFVV.WAREHOUSE_ID AND WCFVV.FIELD_NAME='INCLUDE_FOR_AVAILABILITY_CALL' AND WCFVV.FIELD_VALUE='Y' AND W.WAREHOUSE_ID(+)=WCFVV1.WAREHOUSE_ID AND WCFVV1.FIELD_NAME='DISPLAY_SEQ' ORDER BY DISPLAY_SEQ ASC

getWareHouseDetailsByCode : SELECT * FROM WAREHOUSE where WAREHOUSE_CODE = ? AND STATUS = 'Y'

getHomePageBanners :Select Banner_Image_Name,Image_Type ,Banner_Landing_Url,Url_Will_Be,Delay,scrollable, V.LIST_VALUE From (SELECT * FROM Banners WHERE NVL(STATUS,-1)!='D') B,Value_List_Data V, (SELECT * FROM Values_List WHERE Value_List_Name='Home Page Banners') Vl Where TO_DATE(Sysdate,'DD-MM-YY HH:MI:SS') >= TO_DATE(Nvl(B.Effective_Date,Sysdate),'DD-MM-YY HH:MI:SS') And TO_DATE(Sysdate,'DD-MM-YY HH:MI:SS') <= TO_DATE(Nvl(B.End_Date,Sysdate),'DD-MM-YY HH:MI:SS') And TO_DATE(Sysdate,'DD-MM-YY HH:MI:SS') >= TO_DATE(Nvl(Vl.Effective_Date,Sysdate),'DD-MM-YY HH:MI:SS') And TO_DATE(Sysdate,'DD-MM-YY HH:MI:SS') <=TO_DATE(Nvl(Vl.End_Date,Sysdate),'DD-MM-YY HH:MI:SS') And V.Banner_Id = B.Banner_Id(+) And Vl.Value_List_Id = V.Value_List_Id  AND 0=(SELECT CASE WHEN URL_WILL_BE='R' AND BANNER_IMAGE_NAME IS NOT NULL THEN 0 ELSE CASE WHEN URL_WILL_BE='P' AND BANNER_LANDING_URL IS NOT NULL THEN 0 END END FROM DUAL) Order By V.Disp_Seq

getAllBannersList : SELECT BANNER_IMAGE_NAME,IMAGE_TYPE ,BANNER_LANDING_URL,URL_WILL_BE,DELAY FROM (SELECT * FROM BANNERS WHERE NVL(STATUS,-1)!='D' AND TO_DATE(SYSDATE,'DD-MM-YY HH:MI:SS')>= TO_DATE(NVL(EFFECTIVE_DATE,SYSDATE),'DD-MM-YY HH:MI:SS') AND TO_DATE(SYSDATE,'DD-MM-YY HH:MI:SS')<= TO_DATE(NVL(END_DATE,SYSDATE),'DD-MM-YY HH:MI:SS')) B,VALUE_LIST_DATA V, (SELECT * FROM VALUES_LIST WHERE TO_DATE(SYSDATE,'DD-MM-YY HH:MI:SS')>= TO_DATE(NVL(EFFECTIVE_DATE,SYSDATE),'DD-MM-YY HH:MI:SS') AND TO_DATE(SYSDATE,'DD-MM-YY HH:MI:SS')<= TO_DATE(NVL(END_DATE,SYSDATE),'DD-MM-YY HH:MI:SS')) VL WHERE UPPER(VL.VALUE_LIST_NAME) = ? AND V.BANNER_ID = B.BANNER_ID(+) AND VL.VALUE_LIST_ID = V.VALUE_LIST_ID  AND 0=(SELECT CASE WHEN URL_WILL_BE='R' AND BANNER_IMAGE_NAME IS NOT NULL THEN 0 ELSE CASE WHEN URL_WILL_BE='P' AND BANNER_LANDING_URL IS NOT NULL THEN 0 END END FROM DUAL) ORDER BY V.DISP_SEQ

getCartBrandExcludeStatusSessionUser : SELECT BRAND_ID, C.SESSIONID FROM CART C, ITEM_MASTER IM WHERE C.ITEM_ID=IM.ITEM_ID AND IM.BRAND_ID=? AND C.SITE_ID=? AND C.SESSIONID=? AND C.USER_ID=?

getCartBrandExcludeStatusWebUser : SELECT BRAND_ID, C.SESSIONID FROM CART C, ITEM_MASTER IM WHERE C.ITEM_ID=IM.ITEM_ID AND IM.BRAND_ID=? AND C.SITE_ID=? AND C.USER_ID=?

getCartBrandExcludeStatusReorderCart : SELECT IM.BRAND_ID,QC.SESSION_ID FROM QUOTE_CART QC,ITEM_MASTER IM WHERE QC.ITEM_ID=IM.ITEM_ID AND IM.BRAND_ID =? AND QC.SITE_ID = ? AND QC.SESSION_ID = ?

createQuoteCart : INSERT INTO QUOTE_CART(PART_NUMBER, MANUFACTURER_PART_NUMBER, UPC, SHORT_DESC, LONG_DESC, PRICE, EXT_PRICE, SESSION_ID, ITEM_ID, UNSPSC, MATERIAL_GROUP, QTY, UOM,QUOTE_CART_ID,SITE_ID,LINE_ITEM_COMMENT,CATALOG_ID,GET_PRICE_FROM) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

getQuoteCartDao :SELECT IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME,IDMV.MANUFACTURER_NAME,QC.GET_PRICE_FROM, QC.QUOTE_CART_ID,QC.UOM, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE,   IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1,  IDMV.SHORT_DESC,   IDMV.LONG_DESC1,   IDMV.LONG_DESC2,   IDMV.BRAND_NAME,   IDMV.MATERIAL_GROUP,   IDMV.INVOICE_DESC,   IDMV.PACK_DESC,   IP.SALES_UOM, IP.DISPLAY_PRICING,   IP.SALES_QTY,   IDMV.IMAGE_NAME,   IDMV.IMAGE_TYPE,   QC.PRICE,   IDMV.UNSPSC,   QC.QTY,   IDMV.MIN_ORDER_QTY,   IDMV.ORDER_QTY_INTERVAL,   IP.PACKAGE_QTY,   IP.PACKAGE_FLAG,   IP.CUSTOMER_PART_NUMBER,   IDMV.MANUFACTURER_PART_NUMBER, IP.OVERRIDE_PRICE_RULE,  QC.EXT_PRICE, QC.LINE_ITEM_COMMENT, QC.ITEM_LEVEL_SHIPVIA , QC.ITEM_LEVEL_SHIPVIA_DESC,  QC.ITEMLEVEL_REQUIREDBYDATE FROM ITEM_DETAILS_MV IDMV,   QUOTE_CART QC,   ITEM_PRICES IP WHERE QC.SESSION_ID  =? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND QC.ITEM_ID  = IP.ITEM_ID AND IDMV.SUBSET_ID   =? UNION SELECT IDMV.BRAND_NAME   || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME,IDMV.MANUFACTURER_NAME ,QC.GET_PRICE_FROM, QC.QUOTE_CART_ID, QC.UOM,  IDMV.ITEM_ID,   IDMV.ITEM_PRICE_ID,   IDMV.SUBSET_ID,   IDMV.PAGE_TITLE,   IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1,   IDMV.SHORT_DESC,   IDMV.LONG_DESC1,   IDMV.LONG_DESC2,   IDMV.BRAND_NAME,   IDMV.MATERIAL_GROUP,   IDMV.INVOICE_DESC,   IDMV.PACK_DESC,   IP.SALES_UOM,  IP.DISPLAY_PRICING,   IP.SALES_QTY,   IDMV.IMAGE_NAME,   IDMV.IMAGE_TYPE,    QC.PRICE,   IDMV.UNSPSC,   QC.QTY,   IDMV.MIN_ORDER_QTY,   IDMV.ORDER_QTY_INTERVAL,   IP.PACKAGE_QTY,   IP.PACKAGE_FLAG,   IP.CUSTOMER_PART_NUMBER,   IDMV.MANUFACTURER_PART_NUMBER, IP.OVERRIDE_PRICE_RULE,  QC.EXT_PRICE, QC.LINE_ITEM_COMMENT, QC.ITEM_LEVEL_SHIPVIA , QC.ITEM_LEVEL_SHIPVIA_DESC,  QC.ITEMLEVEL_REQUIREDBYDATE FROM ITEM_DETAILS_MV IDMV,   QUOTE_CART QC,   ITEM_PRICES IP WHERE QC.SESSION_ID   =? AND IP.ITEM_PRICE_ID  = IDMV.ITEM_PRICE_ID and QC.ITEM_ID   = IP.ITEM_ID AND IDMV.SUBSET_ID =? AND IDMV.ITEM_ID NOT IN   (SELECT QC.ITEM_ID   FROM QUOTE_CART QC,  ITEM_DETAILS_MV IDMV   WHERE QC.SESSION_ID  =?   AND IDMV.ITEM_ID  = QC.ITEM_ID   AND IDMV.SUBSET_ID=?)
 
getManufListForQOrderGeneralSubset : SELECT * FROM (SELECT MANUFACTURER_ID, MANUFACTURER_NAME, ROW_NUMBER() OVER (ORDER BY NLSSORT(MANUFACTURER_NAME, 'NLS_SORT = GENERIC_M')) AS RN FROM (SELECT DISTINCT(m.MANUFACTURER_ID), M.MANUFACTURER_NAME FROM manufacturer m, ITEM_DETAILS_MV IDMV WHERE M.MANUFACTURER_ID   = IDMV.MANUFACTURER_ID AND M.STATUS='Y' AND IDMV.SUBSET_ID in (?,?) ))

getManufListForQOrder: SELECT * FROM (SELECT MANUFACTURER_ID, MANUFACTURER_NAME, ROW_NUMBER() OVER (ORDER BY NLSSORT(MANUFACTURER_NAME, 'NLS_SORT = GENERIC_M')) AS RN FROM (SELECT DISTINCT(m.MANUFACTURER_ID), M.MANUFACTURER_NAME FROM manufacturer m, ITEM_DETAILS_MV IDMV WHERE M.MANUFACTURER_ID   = IDMV.MANUFACTURER_ID AND M.STATUS='Y' AND IDMV.SUBSET_ID = ?))

getShipViaForSX:SELECT * FROM SHIP_VIA ORDER BY ? ASC

getUpcomingEvents : SELECT * FROM EVENT_MANAGER WHERE TO_CHAR(TO_DATE(REPLACE(END_DATE,'T',' '),'YYYY-MM-DD HH24:MI:SS'),'YYYYMMDDHH24MISS') >= TO_CHAR(sysdate,'YYYYMMDDHH24MISS')

getEvents : SELECT * FROM EVENT_MANAGER

updateShipViaFromERP:UPDATE CIMM_USERS SET SHIP_VIA = ? ,SHIP_VIA_DESC = ? WHERE USER_ID = ?

getCategoryBanners:SELECT * FROM (SELECT 'TOP' BANNER_POSITION, VL.SCROLLABLE, VL.DELAY, B.BANNER_IMAGE_NAME, B.IMAGE_TYPE, V.BANNER_LANDING_URL, VL.NUMOFIMGSTOSCROLL,  VL.DIRECTION, V.DISP_SEQ FROM BANNERS B, VALUE_LIST_DATA V,  VALUES_LIST VL, TAXONOMY_TREE SP WHERE B.BANNER_ID = V.BANNER_ID AND V.VALUE_LIST_ID = VL.VALUE_LIST_ID AND V.VALUE_LIST_ID = SP.TOP_BANNER_ID AND SP.TAXONOMY_TREE_ID = ? AND SP.TOP_BANNER_ID=VL.VALUE_LIST_ID AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(B.EFFECTIVE_DATE, B.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(B.END_DATE, B.END_DATE, SYSDATE)) AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(VL.EFFECTIVE_DATE, VL.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(VL.END_DATE, VL.END_DATE, SYSDATE)) UNION SELECT 'RIGHT' BANNER_POSITION, VL.SCROLLABLE, VL.DELAY, B.BANNER_IMAGE_NAME, B.IMAGE_TYPE, V.BANNER_LANDING_URL, VL.NUMOFIMGSTOSCROLL, VL.DIRECTION, V.DISP_SEQ FROM BANNERS B, VALUE_LIST_DATA V, VALUES_LIST VL, TAXONOMY_TREE SP WHERE B.BANNER_ID = V.BANNER_ID AND V.VALUE_LIST_ID = VL.VALUE_LIST_ID AND V.VALUE_LIST_ID = SP.RIGHT_BANNER_ID AND SP.TAXONOMY_TREE_ID = ? AND SP.RIGHT_BANNER_ID=VL.VALUE_LIST_ID  AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(B.EFFECTIVE_DATE, B.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(B.END_DATE, B.END_DATE, SYSDATE)) AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(VL.EFFECTIVE_DATE, VL.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(VL.END_DATE, VL.END_DATE, SYSDATE)) UNION SELECT 'BOTTOM' BANNER_POSITION, VL.SCROLLABLE, VL.DELAY, B.BANNER_IMAGE_NAME, B.IMAGE_TYPE, V.BANNER_LANDING_URL, VL.NUMOFIMGSTOSCROLL, VL.DIRECTION, V.DISP_SEQ FROM BANNERS B, VALUE_LIST_DATA V, VALUES_LIST VL, TAXONOMY_TREE SP WHERE B.BANNER_ID = V.BANNER_ID AND V.VALUE_LIST_ID = VL.VALUE_LIST_ID AND V.VALUE_LIST_ID = SP.BOTTOM_BANNER_ID AND SP.TAXONOMY_TREE_ID = ? AND SP.BOTTOM_BANNER_ID=VL.VALUE_LIST_ID  AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(B.EFFECTIVE_DATE, B.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(B.END_DATE, B.END_DATE, SYSDATE)) AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(VL.EFFECTIVE_DATE, VL.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(VL.END_DATE, VL.END_DATE, SYSDATE)) UNION SELECT 'LEFT'BANNER_POSITION, VL.SCROLLABLE, VL.DELAY, B.BANNER_IMAGE_NAME, B.IMAGE_TYPE, V.BANNER_LANDING_URL, VL.NUMOFIMGSTOSCROLL, VL.DIRECTION , V.DISP_SEQ FROM BANNERS B, VALUE_LIST_DATA V, VALUES_LIST VL, TAXONOMY_TREE SP WHERE B.BANNER_ID = V.BANNER_ID AND V.VALUE_LIST_ID = VL.VALUE_LIST_ID AND V.VALUE_LIST_ID = SP.LEFT_BANNER_ID AND SP.TAXONOMY_TREE_ID = ? AND SP.LEFT_BANNER_ID=VL.VALUE_LIST_ID  AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(B.EFFECTIVE_DATE, B.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(B.END_DATE, B.END_DATE, SYSDATE)) AND TO_DATE(SYSDATE) >= TO_DATE(NVL2(VL.EFFECTIVE_DATE, VL.EFFECTIVE_DATE, SYSDATE)) AND TO_DATE(SYSDATE) <= TO_DATE(NVL2(VL.END_DATE, VL.END_DATE, SYSDATE)))  ORDER BY BANNER_POSITION, DISP_SEQ

getEventAvailableSeats : SELECT COUNT(EVENT_REG_ID) AVAILABLESEATS  FROM EVENT_REGISTRATION WHERE EVENT_ID =? AND (REGISTRATION_STATUS='Unconfirmed' OR REGISTRATION_STATUS='Confirmed') AND EVENT_REG_ID NOT IN (SELECT EVENT_REGISTRATION_EXTRA_INFO.CHILD_ID FROM EVENT_REGISTRATION_EXTRA_INFO)

advancedForgotPasswordInsert : INSERT INTO FORGOT_PASSWORD (FORGOT_PASSWORD_ID,SECRET_CODE,USER_ID,MAIL_SENT_TO,STATUS,UPDATED_DATETIME) VALUES(FORGOT_PASSWORD_SEQ.NEXTVAL,?,?,?,'A',SYSDATE)

advancedForgotPasswordRead  : SELECT * FROM FORGOT_PASSWORD FP,CIMM_USERS CU WHERE FP.SECRET_CODE=? AND CU.USER_TYPE='ECOMM' AND FP.STATUS='A' AND FP.USER_ID=CU.USER_ID

advancedForgotPasswordDisable : UPDATE FORGOT_PASSWORD SET STATUS = ? WHERE SECRET_CODE=? AND USER_ID = ?

afpDisableOtherActiveTokensForUser : UPDATE FORGOT_PASSWORD SET STATUS = 'D' WHERE SECRET_CODE != ? AND USER_ID = ?

disableUser : UPDATE CIMM_USERS SET STATUS = 'I' WHERE USER_ID = ?

enableUser : UPDATE CIMM_USERS SET STATUS = 'Y' WHERE USER_ID = ?

updateContactEmailAddress :UPDATE CIMM_USERS SET EMAIL=? , UPDATED_DATETIME = SYSDATE WHERE USER_ID=?

getPromotionalCodeByWarehouse : SELECT C.COUPON_ID,C.COUPON_RULE_ID,C.COUPON_RULE_TYPE,CRT.DISCOUNT_TYPE,CRT.DISCOUNT_VALUE,C.NUMBER_OF_USE_PER_CUSTOMER FROM COUPONS C, WAREHOUSE_COUPONS WC, COUPON_RULE_TABLE CRT WHERE C.COUPON_ID = WC.COUPON_ID AND CRT.COUPON_ID = C.COUPON_ID AND WC.WAREHOUSE_ID IN ( SELECT WAREHOUSE_ID FROM WAREHOUSE WHERE WAREHOUSE_CODE = ?  ) AND C.COUPON_CODE =? AND TO_DATE(TO_CHAR(SYSDATE,'DD-MM-YY'),'DD-MM-YY') >= TO_DATE(TO_CHAR(C.COUPON_START_DATE,'DD-MM-YY'),'DD-MM-YY') AND TO_DATE(TO_CHAR(SYSDATE,'DD-MM-YY'),'DD-MM-YY') <= TO_DATE(TO_CHAR(C.COUPON_END_DATE,'DD-MM-YY'),'DD-MM-YY') AND CRT.MIN_ORDER_TOTAL  <=? AND CRT.MAX_ORDER_TOTAL  >= ?

getWarehouseIndex : SELECT DISTINCT UPPER((SUBSTR(TRIM(WAREHOUSE_NAME),1,1))) AS WAREHOUSE_NAME FROM WAREHOUSE ORDER BY WAREHOUSE_NAME ASC

getWareHouseListFromIndex : SELECT DISTINCT(WAREHOUSE_CODE),WAREHOUSE_NAME FROM WAREHOUSE WHERE UPPER(WAREHOUSE_CODE) LIKE ? ORDER BY WAREHOUSE_CODE ASC

getApproveCartMultipleShipVia : UPDATE SAVED_LIST_ITEMS SET ITEM_LEVEL_SHIPVIA = ? ,ITEM_LEVEL_SHIPVIA_DESC = ? WHERE SAVED_LIST_ID = ? AND ITEM_ID = ?

getCartMultipleShipVia : UPDATE CART SET ITEM_LEVEL_SHIPVIA = ? ,ITEM_LEVEL_SHIPVIA_DESC = ? WHERE CART_ID = ? AND ITEM_ID = ? AND USER_ID=?

getReorderCartMultipleShipVia : UPDATE QUOTE_CART SET ITEM_LEVEL_SHIPVIA = ? ,ITEM_LEVEL_SHIPVIA_DESC = ? WHERE QUOTE_CART_ID = ? AND PART_NUMBER = ?

getAllCustomerCustomFieldValue : SELECT * FROM BC_CF_VALUES_VIEW WHERE BUYING_COMPANY_ID=?

getAllUserCustomFieldValue : SELECT * FROM CUSTOM_FIELDS CF, USER_CUSTOM_FIELD_VALUES UCFV, LOC_CUSTOM_FIELD_VALUES LCFV WHERE UCFV.USER_ID =? AND UCFV.CUSTOM_FIELD_ID = CF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = UCFV.LOC_CUSTOM_FIELD_VALUE_ID

saveOrderItems : INSERT INTO ORDER_ITEMS(ORDER_ITEM_ID,ORDER_ID,ITEM_ID,PART_NUMBER,CUSTOMER_PART_NUMBER,SHORT_DESC,QTY,PRICE,USER_NOTE,INVOICE_DESC,UOM,PACK_DESC,ORDER_ITEM_STATUS,LINE_ITEM_COMMENT,ITEM_LEVEL_SHIPVIA,ITEM_LEVEL_SHIPVIA_DESC,ITEMLEVEL_REQUIREDBYDATE,CATALOG_ID,UPDATED_DATETIME) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)

updateQuoteCartDao : UPDATE QUOTE_CART SET QTY = ?,EXT_PRICE=PRICE * ?,LINE_ITEM_COMMENT=?, ITEMLEVEL_REQUIREDBYDATE=? WHERE QUOTE_CART_ID = ?

getCouponCounter : SELECT (SELECT COUNT(*) FROM COUPON_USE WHERE BUYING_COMPANY_ID = ? AND COUPON_CODE  = ? )AS COUNTER, C.COUPON_RULE_TYPE,C.NUMBER_OF_USE_PER_CUSTOMER,C.COUPON_IMAGE FROM COUPONS C WHERE C.COUPON_CODE  = ?

updateCouponUse : INSERT INTO COUPON_USE(COUPON_USE_ID,BUYING_COMPANY_ID,COUPON_CODE,ORDER_DATETIME,DISCOUNTED_AMOUNT) VALUES(?,?,?,SYSDATE,?)

insertItemToCart : INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,SITE_ID,LINE_ITEM_COMMENT, CATALOG_ID,UOM, PRICE, MIN_ORDER_QTY, ITEM_WEIGHT, UNITS, ORDER_QUOTE_NUMBER, AVAILABILITY, GET_PRICE_FROM) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?)

insertItemToCartWitoutLineItemComment : INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,SITE_ID,CATALOG_ID,UOM, PRICE, MIN_ORDER_QTY, ITEM_WEIGHT, UNITS, BC_ADDRESS_BOOK_ID, AVAILABILITY, GET_PRICE_FROM) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?)

sendApproval : SELECT C.CART_ID,C.ITEM_ID,C.QTY,LIM.SHORT_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID, C.UOM,C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC FROM CART C, LOC_ITEM_MASTER LIM WHERE LIM.ITEM_ID = C.ITEM_ID AND USER_ID = ?

getQuoteItemDetail : SELECT PART_NUMBER,MANUFACTURER_PART_NUMBER,SHORT_DESC,ITEM_ID,UNSPSC,MATERIAL_GROUP,CATALOG_ID FROM ITEM_DETAILS_MV WHERE UPPER(PART_NUMBER) = ? AND SUBSET_ID = ? UNION SELECT PART_NUMBER,MANUFACTURER_PART_NUMBER,SHORT_DESC,ITEM_ID,UNSPSC,MATERIAL_GROUP,CATALOG_ID FROM ITEM_DETAILS_MV WHERE UPPER(PART_NUMBER) = ? AND SUBSET_ID = ?  AND ITEM_ID NOT IN (SELECT ITEM_ID FROM ITEM_DETAILS_MV WHERE SUBSET_ID  =?)

getCartMultipleShipViaBySession : UPDATE CART SET ITEM_LEVEL_SHIPVIA = ? ,ITEM_LEVEL_SHIPVIA_DESC = ? ,LINE_ITEM_COMMENT = ?, SESSIONID = ? WHERE CART_ID = ? AND ITEM_ID = ? AND USER_ID = ?

getBrandCustomFieldValues : SELECT  LCFV.TEXT_FIELD_VALUE, B.BRAND_NAME FROM LOC_CUSTOM_FIELD_VALUES LCFV,BRAND_CUSTOM_FIELD_VALUES BCFV,BRANDS B,CUSTOM_FIELDS CF WHERE LCFV.LOC_CUSTOM_FIELD_VALUE_ID=BCFV.LOC_CUSTOM_FIELD_VALUE_ID AND CF.FIELD_NAME=?  AND  LCFV.LOC_CUSTOM_FIELD_VALUE_ID =BCFV.LOC_CUSTOM_FIELD_VALUE_ID AND B.BRAND_ID  =BCFV.BRAND_ID AND CF.CUSTOM_FIELD_ID = BCFV.CUSTOM_FIELD_ID

getManufacturerCustomFieldValuesFromView : SELECT * FROM MFR_CF_VALUES_VIEW WHERE field_name = ?  AND FIELD_VALUE = 'Y' order by manufacturer_name asc

getBrandCustomFieldValuesFromView : SELECT * FROM BRAND_CF_VALUES_VIEW WHERE field_name = ?  AND FILED_VALUE = 'Y' order by BRAND_NAME asc

getWareHouseListFromIndexFromDisplaySeq: SELECT DISTINCT(WAREHOUSE_CODE),NUMERIC_FIELD_VALUE, WAREHOUSE_NAME from LOC_CUSTOM_FIELD_VALUES LCFV, WAREHOUSE_CUSTOM_FIELD_VALUES WCFV, WAREHOUSE W where UPPER(WAREHOUSE_CODE) LIKE ? AND  LCFV.LOC_CUSTOM_FIELD_VALUE_ID = WCFV.LOC_CUSTOM_FIELD_VALUE_ID AND W.WAREHOUSE_ID=WCFV.WAREHOUSE_ID ORDER BY NUMERIC_FIELD_VALUE ASC

##checkItemExistInCIMM: SELECT IM.ITEM_ID,IP.ITEM_PRICE_ID,IM.PART_NUMBER  FROM ITEM_MASTER IM,ITEM_PRICES IP WHERE IM.PART_NUMBER =? AND IM.ACTIVE! ='D' AND IM.DISPLAY_ONLINE='Y' AND IM.ITEM_ID = IP.ITEM_ID AND IP.SUBSET_ID =?
##For Rock Well
checkItemExistInCIMM: SELECT IM.ITEM_ID,IP.ITEM_PRICE_ID,IM.PART_NUMBER  FROM ITEM_MASTER IM,ITEM_PRICES IP WHERE (IM.PART_NUMBER =? OR IM.MANUFACTURER_PART_NUMBER=?) AND IM.ACTIVE! ='D' AND IM.DISPLAY_ONLINE='Y' AND IM.ITEM_ID = IP.ITEM_ID AND IP.SUBSET_ID =?

insertAbandonedCart : INSERT INTO ABANDONED_CART (USER_ID, UPDATED_TIME, SECRET_KEY, USER_SUBSET, SESSIONID, BEFORE_LOGIN) VALUES (?,SYSDATE,?,?,?,?)

getUserDetailById : SELECT USER_NAME, PASSWORD FROM CIMM_USERS WHERE USER_ID = ?

getAllAbandonedCart : SELECT USER_ID,USER_SUBSET,EMAIL_STATUS, DIFF_TIME, SECRET_KEY, SESSIONID, BEFORE_LOGIN FROM (SELECT USER_ID,USER_SUBSET,EMAIL_STATUS,ROUND((SYSDATE - UPDATED_TIME)*24*60, 0) DIFF_TIME, SECRET_KEY, SESSIONID, BEFORE_LOGIN FROM ABANDONED_CART WHERE CART_PROCESSED = 'N') WHERE DIFF_TIME  >= ? AND EMAIL_STATUS = 'N'

getWLAbandonedCartUserIdFromKey : SELECT USER_ID FROM ABANDONED_CART WHERE KEY_STATUS='A'  AND SESSIONID = ?

checkAbandonedCartEntry : SELECT * FROM ABANDONED_CART WHERE USER_ID = ? AND KEY_STATUS = 'A' AND EMAIL_STATUS = 'N' AND SESSIONID = ?

getAbandonedCartUserIdFromKey : SELECT USER_ID FROM ABANDONED_CART WHERE SECRET_KEY = ? AND KEY_STATUS='A'  AND SESSIONID = ?

updateAbandonedCartKeyStatus : UPDATE ABANDONED_CART SET KEY_STATUS = 'D' WHERE USER_ID = ? AND SECRET_KEY = ? AND SESSIONID = ?

getAbandonedCartKey : SELECT SECRET_KEY FROM ABANDONED_CART WHERE USER_ID = ? AND SESSIONID = ?

updateAbandonedCart : UPDATE ABANDONED_CART SET UPDATED_TIME = SYSDATE, SECRET_KEY = ?, CART_PROCESSED = 'N' WHERE USER_ID=? AND KEY_STATUS='A' AND SESSIONID = ? AND EMAIL_STATUS = 'N'

insertNonCatalogItemToCart: INSERT INTO CART (CART_ID,PART_NUMBER,BRAND,QTY,PRICE,MANUFACTURER,SHORT_DESCRIPTION,GET_PRICE_FROM,SESSIONID,USER_ID,SITE_ID,UPDATED_DATETIME,ITEM_ID,ITEM_TYPE) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)

saveOrderItemsWithDiscount : INSERT INTO ORDER_ITEMS(ORDER_ITEM_ID,ORDER_ID,ITEM_ID,PART_NUMBER,CUSTOMER_PART_NUMBER,SHORT_DESC,QTY,PRICE,USER_NOTE,INVOICE_DESC,UOM,PACK_DESC,ORDER_ITEM_STATUS,LINE_ITEM_COMMENT,ITEM_LEVEL_SHIPVIA,ITEM_LEVEL_SHIPVIA_DESC,ITEMLEVEL_REQUIREDBYDATE,CATALOG_ID,UPDATED_DATETIME,DISCOUNT_AMOUNT,DISCOUNT_PERCENTAGE,DISCOUNT_COUPON_CODE,DISCOUNT_TYPE,CART_ID, MANUFACTURER) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?)

getPasswordUserToUpper:SELECT USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,ECLIPSE_CONTACT_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE USER_NAME \= ? AND UPPER(EMAIL)\= UPPER(?) AND (STATUS = 'A' OR STATUS = 'Y') AND USER_TYPE='ECOMM' AND SITE_ID=?

getPasswordUserToUpperEmailOnly:SELECT USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,ECLIPSE_CONTACT_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE UPPER(EMAIL)\= UPPER(?) AND (STATUS = 'A' OR STATUS = 'Y') AND USER_TYPE='ECOMM' AND SITE_ID=?

getPasswordUserToUpperUserNameOnly:SELECT USER_ID,USER_NAME,PASSWORD,FIRST_NAME,LAST_NAME,ECLIPSE_CONTACT_ID,BUYING_COMPANY_ID FROM CIMM_USERS WHERE USER_NAME \= UPPER(?) AND (STATUS = 'A' OR STATUS = 'Y') AND USER_TYPE='ECOMM' AND SITE_ID=?

getUserAddressListFromBCAddressBookEclipse: with SL as (SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.EMAIL, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BC.BUYING_COMPANY_ID \=? AND BC.ENTITY_ID \= CA.ENTITY_ID AND CA.STATUS\='A' AND W.WAREHOUSE_CODE(+) \= CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) \= CA.PARENT_COMPANY_ID  AND BC.BC_ADDRESS_BOOK_ID \= ?) SELECT * FROM (Select SL.*, ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE ORDER BY ENTITY_ID) AS rn from SL) WHERE   rn < 2\t

insertIntoOutstandingPaymentTable : INSERT INTO OUTSTANDING_ORDER_PAYMENT(ERP_ORDER_ID,ORDER_AMOUNT,CUSTOMER_NUMBER,STAGE_CODE,UPDATED_DATE_TIME,PAYMENT_STATUS)VALUES(?,?,?,?,SYSDATE,'Pending')

updatetoOutstandingPaymentTable : UPDATE OUTSTANDING_ORDER_PAYMENT SET UPDATED_DATE_TIME=SYSDATE,PAYMENT_STATUS='Approved',PAYMENT_TRANSACTION_ID=?,PAYMENT_AUTH_CODE=?,PAYMENT_REFRENCE_NUMBER=?,PAYMENT_APPROVAL_MESSAGE=?,APPROVED_AMOUNT=?,CARD_NUMBER=? WHERE ERP_ORDER_ID IN (#REPLACETEXT#)

updateExistingUserEmailforcimm2bCentral:UPDATE CIMM_USERS SET USER_NAME=?, FIRST_NAME = ?, LAST_NAME = ?, EMAIL = ?, PASSWORD=?, UPDATED_DATETIME = SYSDATE WHERE USER_NAME=?

getWarehouseCustomFields : SELECT BC.BUYING_COMPANY_ID, WC.LOC_CUSTOM_FIELD_VALUE_ID, LC.TEXT_FIELD_VALUE,W.WAREHOUSE_ID FROM WAREHOUSE_CUSTOM_FIELD_VALUES WC, LOC_CUSTOM_FIELD_VALUES LC, WAREHOUSE W, BUYING_COMPANY BC WHERE WC.WAREHOUSE_ID = W.WAREHOUSE_ID AND W.WAREHOUSE_CODE = BC.WAREHOUSE_CODE AND WC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND WC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = ? ) AND BC.BUYING_COMPANY_ID = ?

getBuyingCompanyIdByUserId : select buying_company_id from cimm_users where  STATUS= 'Y' and USER_ID =?

insertCustomerCreditApplicationDetails : INSERT INTO CREDIT_APPLICATION_DETAILS (UPDATED_DATE_TIME, USER_ID, DATE_ON_APPLICATION, BUSINESS_NAME, BUSINESS_PHONE, BUSINESS_FAX, BUSINESS_ADDRESS1, BUSINESS_ADDRESS2, BUSINESS_CITY, BUSINESS_STATE, BUSINESS_ZIPCODE, SHIPPING_ADDRESS1, SHIPPING_ADDRESS2, SHIPPING_CITY, SHIPPING_STATE, SHIPPING_ZIPCODE, LEGAL_STRUCTURE_TYPE, BUSINESS_TYPE, DIVISION_OF, SUBSIDIARY_OF, FEDERAL_ID_NUMBER, SALES_TAX_STATUS, EXEMPTION_CERTIFICATE_NAME, PREFERRED_METHOD_OF_INVOICES, INVOICE_EMAIL_ADDRESS, INVOICE_FAX_NUMBER, INVOICE_EDI_CONTACT_NAME, INVOICE_EDI_EMAIL_ADDRESS, DATE_BUSINESS_COMMENCED, NUMBER_OF_EMPLOYEES, CREDIT_LIMIT_REQUESTED, AP_CONTACT_PERSON_OR_EMAIL, DECLARATION_NAME, DECLARATION_EMAIL_ADDRESS, DECLARATION_TITLE, DECLARATION_DATE,CUSTOMER_CREDIT_APPLICATION_ID,FINANCIAL_STATEMENT,FINANCIAL_STATEMENT_FILE_NAME) VALUES (SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

insertCreditApplicationPrincipalOfficers : INSERT INTO PRINCIPAL_OFFICERS (UPDATED_DATE_TIME, CUSTOMER_CREDIT_APPLICATION_ID, USER_ID, PRINCIPAL_OFFICER_NAMES, PRINCIPAL_OFFICER_TITLES) VALUES (SYSDATE,?,?,?,?)

insertCreditApplicationTradeReference : INSERT INTO TRADE_REFERENCE (UPDATED_DATE_TIME, CUSTOMER_CREDIT_APPLICATION_ID, USER_ID, TRADE_REFERENCE_NAME, TRADE_REFERENCE_PHONE, TRADE_REFERENCE_FAX, TRADE_REFERENCE_EMAIL) VALUES (SYSDATE,?,?,?,?,?,?)

insertCreditApplicationBankReference :  INSERT INTO BANK_REFERENCE(UPDATED_DATE_TIME, CUSTOMER_CREDIT_APPLICATION_ID, USER_ID, BANK_NAME, BANK_TELEPHONE_NUMBER,BANK_FAX_NUMBER,BANK_CONTACT_NAME,BANK_ACCOUNT_OR_LOAN_NUMBER) VALUES (SYSDATE,?,?,?,?,?,?,?)

getCustomerCreditApplicationId : SELECT CUSTOMER_CREDIT_APPLICATION_ID FROM CREDIT_APPLICATION_DETAILS WHERE USER_ID = ?

getUserCustomFieldValues:SELECT C.USER_ID,UC.LOC_CUSTOM_FIELD_VALUE_ID,LC.TEXT_FIELD_VALUE  FROM USER_CUSTOM_FIELD_VALUES UC , LOC_CUSTOM_FIELD_VALUES LC ,  CIMM_USERS C, BUYING_COMPANY B WHERE UC.USER_ID = C.USER_ID AND C.BUYING_COMPANY_ID = B.BUYING_COMPANY_ID AND UC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND UC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = ? ) AND UC.USER_ID = ?

getBrandDetails : SELECT BRAND_ID,MANUFACTURER_ID,BRAND_NAME,BRAND_DESC,BRAND_IMAGE,BRAND_URL,STATIC_PAGE_ID FROM BRANDS WHERE BRAND_ID \= ? 
#getBrandDetails : SELECT B.BRAND_ID,B.MANUFACTURER_ID,B.BRAND_NAME,B.BRAND_DESC,B.BRAND_IMAGE,B.BRAND_URL,B.STATIC_PAGE_ID, SP.STATUS FROM BRANDS B, STATIC_PAGES SP WHERE B.BRAND_ID \= ? AND SP.STATIC_PAGE_ID = B.STATIC_PAGE_ID AND (SP.STATUS='A' OR SP.STATUS='Y')

getActiveStaticPage : SELECT STATIC_PAGE_ID FROM  STATIC_PAGES WHERE STATIC_PAGE_ID = ? AND (STATUS='A' OR STATUS='Y')

getManufacturerDetails : SELECT MANUFACTURER_ID,MANUFACTURER_NAME,MANUFACTURER_LOGO,STATIC_PAGE_ID FROM MANUFACTURER WHERE MANUFACTURER_ID \= ? 
#getManufacturerDetails : SELECT M.MANUFACTURER_ID,M.MANUFACTURER_NAME,M.MANUFACTURER_LOGO,M.STATIC_PAGE_ID FROM MANUFACTURER M, STATIC_PAGES SP WHERE M.MANUFACTURER_ID \= ? AND SP.STATIC_PAGE_ID = M.STATIC_PAGE_ID AND (SP.STATUS='A' OR SP.STATUS='Y')

insertCounponData : INSERT INTO APPLIED_DISCOUNT_COUPON_DATA (DISCOUNT_ID,ORDER_ID,USER_ID,DISCOUNT_AMOUNT,DISCOUNT_PERCENTAGE,COUPON_CODE,DISCOUNT_TYPE,UPDATED_DATETIME) VALUES (APPLIED_COUPON_DATA_SEQ.NEXTVAL,?,?,?,?,?,?,SYSDATE)

readCouponData = SELECT * FROM APPLIED_DISCOUNT_COUPON_DATA WHERE USER_ID=? AND ORDER_ID=?

updatecartSession :UPDATE CART SET SESSIONID=? where SESSIONID=?

updateAbandonedCartSessionId : UPDATE ABANDONED_CART SET SESSIONID=? where SESSIONID=?

getOrderAndCouponDetails : WITH FU AS (SELECT ? USER_ID FROM DUAL), UCD AS (SELECT A.USER_ID,COUNT(COUPON_CODE) COUPONTOTALNUMBER,SUM(DISCOUNT_AMOUNT) COUPONTOTALDISCOUNTS, TO_CHAR(MIN(UPDATED_DATETIME),'MM-DD-YYYY HH:MI:SS') FIRSTCOUPONDATE,TO_CHAR(MAX(UPDATED_DATETIME),'MM-DD-YYYY HH:MI:SS') LASTCOUPONDATE FROM APPLIED_DISCOUNT_COUPON_DATA A,FU WHERE A.USER_ID=FU.USER_ID GROUP BY A.USER_ID),UFC AS (SELECT UCD.USER_ID,RTRIM(XMLAGG(XMLELEMENT("CC",COUPON_CODE||',')).EXTRACT('//text()'),',') COUPONFIRSTCODE FROM APPLIED_DISCOUNT_COUPON_DATA A ,UCD WHERE A.USER_ID=UCD.USER_ID AND TO_CHAR(A.UPDATED_DATETIME,'MM-DD-YYYY HH:MI:SS')=UCD.FIRSTCOUPONDATE GROUP BY UCD.USER_ID),ULC AS (SELECT UCD.USER_ID,RTRIM(XMLAGG(XMLELEMENT("CC",COUPON_CODE||',')).EXTRACT('//text()'),',') COUPONLASTCODE FROM APPLIED_DISCOUNT_COUPON_DATA A ,UCD WHERE A.USER_ID=UCD.USER_ID AND TO_CHAR(A.UPDATED_DATETIME,'MM-DD-YYYY HH:MI:SS')=UCD.LASTCOUPONDATE GROUP BY UCD.USER_ID),UFLC AS (SELECT UFC.*,ULC.COUPONLASTCODE FROM ULC,UFC WHERE ULC.USER_ID=UFC.USER_ID),UO AS (SELECT COUNT(1) ORDERTOTALNUMBER,SUM(TOTAL_AMOUNT)/COUNT(1) ORDERAVERAGETOTAL,SUM(TOTAL_AMOUNT) ORDERTOTALREVENUE, TO_CHAR(MIN(UPDATED_DATETIME),'MM-DD-YYYY HH:MI:SS') ORDERFIRSTDATE,TO_CHAR(MAX(UPDATED_DATETIME),'MM-DD-YYYY HH:MI:SS') ORDERLASTDATE FROM ORDERS O,FU WHERE O.USER_ID=FU.USER_ID),LOT AS (SELECT O.TOTAL_AMOUNT ORDERLASTTOTAL FROM ORDERS O,UO,FU WHERE FU.USER_ID=O.USER_ID AND UO.ORDERLASTDATE=TO_CHAR(O.UPDATED_DATETIME,'MM-DD-YYYY HH:MI:SS'))SELECT DISTINCT UCD.*,UO.*,UFLC.COUPONFIRSTCODE,UFLC.COUPONLASTCODE,LOT.ORDERLASTTOTAL FROM UO,UCD,UFLC,LOT

insertBuyingCompanyCustomFieldValue : INSERT INTO BC_CUSTOM_FIELD_VALUES (BC_CUSTOM_FIELD_VALUE_ID,BUYING_COMPANY_ID,CUSTOM_FIELD_ID,LOC_CUSTOM_FIELD_VALUE_ID,STATUS,USER_EDITED,UPDATED_DATETIME) values (USER_CUSTOM_FIELD_VAL_ID_SEQ.NEXTVAL,?,?,?,'Y',?,SYSDATE)

getOrderItemsAjax : SELECT OI.ITEM_ID,  OI.LEAD_TIME,  OI.PART_NUMBER,  OI.SHORT_DESC,  OI.QTY,  OI.PRICE,  OI.UOM,  OI.EXT_PRICE,  (QTY*PRICE) "EXTPRICE",  ITIMG.IMAGE_NAME,  ITIMG.IMAGE_TYPE,  OI.PER_UOM,  OI.PER_QTY,  OI.LINE_ITEM_COMMENT,  OI.ITEM_LEVEL_SHIPVIA,  OI.ITEM_LEVEL_SHIPVIA_DESC,  OI.ITEMLEVEL_REQUIREDBYDATE,  OI.CATALOG_ID,  OI.HAZARDIOUS_MATERIAL,  IM.MANUFACTURER_PART_NUMBER,  IM.SALES_UOM,  OI.UNITS_PER_STOCKING,  OI.UNITS_PER_STOCKING_STRING,  OI.CART_ID,  OI.ORDER_ITEM_ID,  IDMV.INVOICE_DESC,  IDMV.MANUFACTURER_NAME,  IDMV.ALT_PART_NUMBER1,  IM.PACK_DESC,  IP.PACKAGE_FLAG,  IP.PACKAGE_QTY FROM ORDER_ITEMS OI,  LOC_ITEM_MASTER LIM,  ITEM_IMAGES ITIMG,  ITEM_MASTER IM,  ITEM_DETAILS_MV IDMV,  ITEM_PRICES IP WHERE OI.ORDER_ID = ? AND OI.ITEM_ID = LIM.ITEM_ID(+) AND IM.ITEM_ID = OI.ITEM_ID(+) AND LIM.ITEM_IMAGE_ID = ITIMG.ITEM_IMAGE_ID(+) AND OI.ITEM_ID = IDMV.ITEM_ID AND OI.ITEM_ID = IP.ITEM_ID AND IDMV.SUBSET_ID = IP.SUBSET_ID AND IDMV.SUBSET_ID = ?

redirectsFromCatalog : select * from REDIRECTS_FROM_CATALOG where WEB_ID=?

getAdvPassword24Hours: SELECT * FROM FORGOT_PASSWORD WHERE (EXTRACT (DAY FROM TO_TIMESTAMP(TO_CHAR(SYSDATE,'DD-MON-YY HH:MI:SS AM'))-TO_TIMESTAMP(TO_CHAR(UPDATED_DATETIME,'DD-MON-YY HH:MI:SS AM')))>=1 OR STATUS !='A') AND SECRET_CODE=?

getCustomFieldsSubScripitonStatus : SELECT C.USER_ID,UC.LOC_CUSTOM_FIELD_VALUE_ID,LC.TEXT_FIELD_VALUE  FROM USER_CUSTOM_FIELD_VALUES UC , LOC_CUSTOM_FIELD_VALUES LC ,  CIMM_USERS C, BUYING_COMPANY B WHERE UC.USER_ID = C.USER_ID AND C.BUYING_COMPANY_ID = B.BUYING_COMPANY_ID AND UC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND UC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = ?) AND UC.USER_ID = ?

getBranchLocationsFromWarehouse : SELECT WAREHOUSE_ID, WAREHOUSE_CODE, WAREHOUSE_NAME LOCATION_TITLE, PHONE_NUMBER PHONE, EMAIL,SERVICE_MANAGER,LATTITUDE,LONGITUDE, ADDRESS1||' '||ADDRESS2 STREET_ADDRESS, STATE,AC, CITY, ZIP, FAX, WORK_HOUR, NOTE, COUNTRY, TOLL_FREE_NUMBER TOLL_FREE  FROM WAREHOUSE WHERE STATUS IN ('Y','A')

getShipToEntityOpenQuotes: SELECT OQ.BUYING_COMPANY_ID, ERP_QUOTE_ID, OQ.STATUS,OD.ORDER_NOTES FROM OPEN_QUOTES OQ, ORDERS OD WHERE OQ.BUYING_COMPANY_ID = ? AND ERP_QUOTE_ID = OD.EXTERNAL_SYSTEM_ID(+) AND OQ.STATUS='Open' order by OQ.update_datetime desc nulls last

getLinkedItems: SELECT IDMV.BRAND_NAME,IDMV.MANUFACTURER_PART_NUMBER,IDMV.MANUFACTURER_NAME,ILT.LINK_TYPE_NAME, IDMV.ITEM_ID,IDMV.PART_NUMBER, IDMV.ITEM_PRICE_ID, IDMV.SHORT_DESC, IDMV.IMAGE_NAME, IP.SALES_QTY, IP.NET_PRICE, IDMV.IMAGE_TYPE, IDMV.PAGE_TITLE FROM ITEM_LINKS IL, ITEM_LINK_TYPES ILT, ITEM_DETAILS_MV IDMV, ITEM_PRICES IP WHERE IL.LINKED_TO_ITEM_ID = ? AND ILT.ITEM_LINK_TYPE_ID = ? AND IDMV.ITEM_ID = IL.ITEM_ID AND IDMV.SUBSET_ID = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND ILT.ITEM_LINK_TYPE_ID = IL.ITEM_LINK_TYPE_ID

getLinkedItemsLists : SELECT * FROM ITEM_LINK_TYPES WHERE STATUS='Y'

getRecentOrderdItems:SELECT OI.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.PART_NUMBER, IDMV.SHORT_DESC, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, IDMV.SALES_UOM, OI.UPDATED_DATETIME, ROW_NUMBER() OVER (PARTITION BY OI.ITEM_ID ORDER BY OI.UPDATED_DATETIME DESC) AS RN FROM ORDERS O, ORDER_ITEMS OI, ITEM_DETAILS_MV IDMV  WHERE O.USER_ID = ? AND IDMV.SUBSET_ID = ? AND OI.ORDER_ID = O.ORDER_ID AND IDMV.ITEM_ID = OI.ITEM_ID AND ROWNUM < 21

getRecentOrderdItemsBySubset:SELECT OI.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.MANUFACTURER_PART_NUMBER, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.PART_NUMBER, IDMV.SHORT_DESC, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, IDMV.SALES_UOM, IDMV.UPC, OI.UPDATED_DATETIME, ROW_NUMBER() OVER (PARTITION BY OI.ITEM_ID ORDER BY OI.UPDATED_DATETIME DESC) AS RN, IDMV.SUBSET_ID FROM ORDERS O, ORDER_ITEMS OI, ITEM_DETAILS_MV IDMV  WHERE O.USER_ID = ? AND OI.ORDER_ID = O.ORDER_ID AND IDMV.ITEM_ID = OI.ITEM_ID AND ROWNUM < 21 AND (SUBSET_ID = ? OR SUBSET_ID = ?)

getNumberOfTimesLoggedInLoggedout:SELECT COUNT(ACTION), ACTION FROM USER_LOG WHERE ACTION IN ('Login','SignOut Click') AND USER_ID = ? GROUP BY ACTION  ORDER BY ACTION

getlastLogin:SELECT USER_ID ,TO_CHAR(DATETIME , 'DD/MM/YYYY HH24:MI:SS') LAST_LOGIN_DATE_TIME,DATETIME, SESSIONTIMEZONE AS DATABASE_TIMEZONE, CURRENT_TIMESTAMP, USER_IP_ADDRESS, ACTION_TYPE, ROW_NUMBER() OVER (PARTITION BY USER_ID ORDER BY DATETIME DESC) AS RN FROM USER_LOG WHERE ACTION = 'Login' AND USER_ID = ?

uploadUserProfileImage: UPDATE CIMM_USERS SET PROFILE_IMAGE=? WHERE USER_ID=?

uploadCustomerLogo: UPDATE BUYING_COMPANY SET LOGO=? WHERE BUYING_COMPANY_ID=?

getValueList : SELECT VALUE_DATA_ID,LIST_VALUE FROM VALUE_LIST_DATA VLD,VALUES_LIST VL WHERE VL.VALUE_LIST_NAME = ? AND VLD.VALUE_LIST_ID=VL.VALUE_LIST_ID

getCustomersAlsoViewed : with boundaries (prevr, nextr, lvl) as ( select nvl((select max(ul.DATETIME) from USER_LOG ul where  ul.DATETIME < ul2.DATETIME), ul2.DATETIME) prevr, nvl((select min(ul.DATETIME) from USER_LOG ul where ul.DATETIME > ul2.DATETIME), ul2.DATETIME) nextr, 1 lvl from   USER_LOG ul2 where ACTION_KEY = ? union all select nvl((select max(DATETIME) from   USER_LOG ul where  ul.DATETIME < prevr), prevr ) prevr, nvl((select min(DATETIME) from   USER_LOG ul where  ul.DATETIME > nextr), nextr) nextr, lvl+1 lvl from boundaries where  lvl+1 <= 1) select  DISTINCT ul.ACTION_KEY AS ITEM_ID from USER_LOG ul join boundaries b on ul.DATETIME between b.prevr and b.nextr and b.lvl = 1 and ul.ACTION = 'Product Detail' order  by ul.ACTION_KEY

getTaxonomyInfo = SELECT * FROM TAXONOMY_TREE WHERE TAXONOMY_TREE_ID=?

getBannerDetailsName = SELECT B.BANNER_IMAGE_NAME,B.IMAGE_TYPE,BI.BANNER_URL FROM BANNERS B,BANNER_INFO BI,BANNER_LIST BL WHERE B.BANNER_ID=BI.BANNER_ID AND BL.BANNER_LIST_ID = BI.BANNER_LIST_ID AND BL.BANNER_NAME=?

getBannerDetailsID = SELECT B.BANNER_IMAGE_NAME,B.IMAGE_TYPE,BI.BANNER_URL FROM BANNERS B,BANNER_INFO BI,BANNER_LIST BL WHERE B.BANNER_ID=BI.BANNER_ID AND BL.BANNER_LIST_ID = BI.BANNER_LIST_ID AND BL.BANNER_LIST_ID=?

updateCartSessionId : UPDATE CART SET SESSIONID = ? WHERE SESSIONID = ?

getBcAddressBookShipBillId : SELECT * FROM BC_ADDRESS_BOOK WHERE ENTITY_ID = ? AND ADDRESS_TYPE = ? AND BUYING_COMPANY_ID = ?

getBcAddressJobEntityId :SELECT BC_ADDRESS_BOOK_ID FROM BC_ADDRESS_BOOK WHERE ENTITY_ID=? and BUYING_COMPANY_ID=? and ADDRESS_TYPE=?

insertIntoBcAddressJobEntityId : INSERT INTO BC_ADDRESS_BOOK (BC_ADDRESS_BOOK_ID,BUYING_COMPANY_ID,ENTITY_ID,FIRST_NAME,ADDRESS_TYPE,ADDRESS1) VALUES (?,?,?,?,?,?)

insertIntoBuyingCompanyJobEntityId : INSERT INTO BUYING_COMPANY (BUYING_COMPANY_ID,ENTITY_ID,CUSTOMER_NAME,SHORT_NAME,CUSTOMER_TYPE,ADDRESS1,STATUS,GENERAL_CATALOG_ACCESS,PARENT_COMPANY_ID) VALUES (?,?,?,?,?,?,?,?,?)

getListFromBCAddressBook : WITH SL AS (SELECT BC.BC_ADDRESS_BOOK_ID,BC.FIRST_NAME,BC.EMAIL,BC.LAST_NAME,BC.ADDRESS1,BC.ADDRESS2,BC.CITY,BC.STATE,BC.ZIPCODE,BC.ENTITY_ID,BC.COUNTRY,BC.PHONE,BC.ADDRESS_TYPE,BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID,BC1.SUBSET_ID PARENET_SUBSET,W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC,BUYING_COMPANY CA,BUYING_COMPANY BC1,WAREHOUSE W WHERE BC.BUYING_COMPANY_ID   = ? AND BC.ENTITY_ID = CA.ENTITY_ID AND W.WAREHOUSE_CODE(+)= CA.WAREHOUSE_CODE AND BC1.BUYING_COMPANY_ID(+) = CA.PARENT_COMPANY_ID) SELECT * FROM (SELECT SL.*,ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE, SHIP_TO_ID ORDER BY ENTITY_ID) AS rn FROM SL) WHERE rn < 2

getListOfJobAccounts : SELECT US.ENTITY_ID,BC.FIRST_NAME,BC.ADDRESS_TYPE,BC.BUYING_COMPANY_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,US.BC_ADDRESS_BOOKID FROM USER_SHIPTO US,BC_ADDRESS_BOOK BC,CIMM_USERS CU WHERE US.CIMM_USER_ID = ? AND US.BC_ADDRESS_BOOKID=BC.BC_ADDRESS_BOOK_ID AND US.CIMM_USER_ID = CU.USER_ID

getCartUserId : SELECT USER_ID FROM CART WHERE SESSIONID = ?

updateAnonymousUser : UPDATE CIMM_USERS SET STATUS = ?, USER_NAME=?, UPDATED_DATETIME = SYSDATE  WHERE USER_NAME = ? AND SITE_ID=?

getcontactId : SELECT EXTERNAL_SYSTEM2_USER_ID FROM CIMM_USERS WHERE USER_ID=?

CUSTOM_BRAND_LIST_QUERY_FOR_GENERAL_SUBSET : SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME,B.BRAND_IMAGE FROM BRANDS B, ITEM_DETAILS_MV IDMV WHERE  B.STATUS = 'Y' AND B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID in (?,?) ORDER BY NLSSORT(B.BRAND_NAME, 'NLS_SORT = GENERIC_M')

CUSTOM_BRAND_LIST_QUERY : SELECT DISTINCT(B.BRAND_ID),B.BRAND_NAME,B.BRAND_IMAGE FROM BRANDS B, ITEM_DETAILS_MV IDMV WHERE  B.STATUS = 'Y' AND B.BRAND_ID = IDMV.BRAND_ID AND IDMV.SUBSET_ID=? ORDER BY NLSSORT(B.BRAND_NAME, 'NLS_SORT = GENERIC_M')

getUserCustomerProfileId : SELECT CUSTOMER_PROFILE_ID FROM CIMM_USERS WHERE USER_ID=?

deleteFromCartCustom : DELETE FROM CART WHERE USER_ID=? AND ITEM_LEVEL_SHIPVIA LIKE ?

getEventsCustomFeildsList : SELECT * FROM EVENTS_CF_VALUES_VIEW ORDER BY EVENT_ID

getManufacturerListAsGroup : SELECT distinct(M.MANUFACTURER_ID), M.MANUFACTURER_NAME,M.MANUFACTURER_LOGO FROM MANUFACTURER M, ITEM_DETAILS_MV IDMV WHERE M.STATUS = 'Y' AND M.MANUFACTURER_ID = IDMV.MANUFACTURER_ID AND IDMV.SUBSET_ID in (?,?) ORDER BY NLSSORT(M.MANUFACTURER_NAME, 'NLS_SORT = GENERIC_M')

getAddressListFromBCAddressBookDefaults:with SL as (SELECT BC.BC_ADDRESS_BOOK_ID, BC.FIRST_NAME, BC.EMAIL, BC.LAST_NAME, BC.ADDRESS1, BC.ADDRESS2, BC.CITY, BC.STATE, BC.ZIPCODE, BC.ENTITY_ID, BC.COUNTRY, BC.PHONE, BC.ADDRESS_TYPE, BC.SHIP_TO_ID,CA.CUSTOMER_NAME,CA.STATUS,CA.BUYING_COMPANY_ID,CA.SUBSET_ID DEFAULT_SUBSET_ID, BC1.SUBSET_ID PARENET_SUBSET, W.SUBSET_ID WAREHOUSE_SUBSET,CASE WHEN NVL(CA.SUBSET_ID,1) > 1 THEN CA.SUBSET_ID WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) WHEN NVL(CA.SUBSET_ID,1) < 2 THEN NVL(BC1.SUBSET_ID,1) WHEN NVL(BC1.SUBSET_ID,1) < 2 THEN NVL(W.SUBSET_ID,1) END SUBSET_ID FROM BC_ADDRESS_BOOK BC, BUYING_COMPANY CA, BUYING_COMPANY BC1, WAREHOUSE W WHERE BC.BUYING_COMPANY_ID =? AND CA.STATUS='A' AND BC.STATUS='A' AND W.WAREHOUSE_CODE(+) = CA.WAREHOUSE_CODE  AND  BC1.BUYING_COMPANY_ID(+) = CA.PARENT_COMPANY_ID) SELECT * FROM (Select SL.*, ROW_NUMBER() OVER (PARTITION BY ENTITY_ID, ADDRESS1, CITY, STATE, ZIPCODE, ADDRESS_TYPE, SHIP_TO_ID ORDER BY ENTITY_ID) AS rn from SL) WHERE   rn < 2

#getOrdersHistory : SELECT * FROM ORDERS O,ORDER_ITEMS OI WHERE USER_ID=? AND O.ORDER_ID =OI.ORDER_ID ORDER BY O.ORDER_DATE DESC
getOrdersHistory : SELECT * FROM ORDERS O LEFT JOIN ORDER_ITEMS OI ON OI.ORDER_ITEM_ID = (SELECT ORDER_ITEM_ID FROM ORDER_ITEMS OI1 WHERE OI1.ORDER_ID = O.ORDER_ID AND ROWNUM <=1) WHERE O.USER_ID=? ORDER BY O.ORDER_DATE DESC

getOrdersHistoryForCustomer : SELECT * FROM ORDERS O, ORDER_ITEMS OI WHERE (O.USER_ID=? OR O.CUSTOMER_ERP_ID IN(?,?) ) AND O.ORDER_ID=OI.ORDER_ID AND O.STATUS='A' AND O.ORDER_DATE BETWEEN TO_DATE(?, 'MM-dd-yyyy') AND TO_DATE(?, 'MM-dd-yyyy') ORDER BY O.ORDER_DATE DESC

getWhseCustFieldValByCode : SELECT TEXT_FIELD_VALUE FROM WAREHOUSE_CUSTOM_FIELD_VALUES WC,LOC_CUSTOM_FIELD_VALUES LC,WAREHOUSE W WHERE WC.WAREHOUSE_ID=W.WAREHOUSE_ID AND W.WAREHOUSE_CODE= ? AND WC.LOC_CUSTOM_FIELD_VALUE_ID = LC.LOC_CUSTOM_FIELD_VALUE_ID AND WC.CUSTOM_FIELD_ID IN ( SELECT CUSTOM_FIELD_ID FROM CUSTOM_FIELDS WHERE FIELD_NAME = ?)

updateChangePasswordOnLogin : UPDATE CIMM_USERS SET CHANGE_PASSWD_ON_LOGIN = ? WHERE USER_NAME=? AND USER_TYPE=? AND SITE_ID=?

getClusterdata : SELECT W.WAREHOUSE_NAME,W.WAREHOUSE_CODE FROM WAREHOUSE_CLUSTER wc INNER JOIN WAREHOUSE_CLUSTER_MAPPING wcm ON wcm.WAREHOUSE_CLUSTER_ID= wc.WAREHOUSE_CLUSTER_ID INNER join warehouse w on w.WAREHOUSE_ID = wcm.WAREHOUSE_ID where W.STATUS  ='Y' and WC.STATUS ='A' and WC.DESCRIPTION = ?

#firstOrderMail : SELECT Count(ORDERS.ORDER_ID) as OrderCount FROM ORDERS JOIN CIMM_USERS ON ORDERS.CUSTOMER_ERP_ID= CIMM_USERS.BUYING_COMPANY_ID WHERE ORDERS.USER_ID=? AND ORDERS.SHIPPING_SHIP_TO_ID=? AND CIMM_USERS.CNE_BATCH_ID Is null
firstOrderMail : SELECT Count(ORDER_ID) as OrderCount FROM ORDERS WHERE USER_ID=? AND SHIPPING_SHIP_TO_ID=?

getAllBCAddressBookCustomFields : Select * from BC_AB_CUSTOM_FIELD_VALUES BCAB,LOC_CUSTOM_FIELD_VALUES LCFV , CUSTOM_FIELDS CF  where  BCAB.ADDRESS_BOOK_ID =? AND CF.CUSTOM_FIELD_ID = BCAB.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID = BCAB.LOC_CUSTOM_FIELD_VALUE_ID

insertBcAddressBookCustomFieldValue : INSERT INTO BC_AB_CUSTOM_FIELD_VALUES (BC_AB_CUSTOM_FIELD_VALUE_ID,ADDRESS_BOOK_ID,CUSTOM_FIELD_ID,LOC_CUSTOM_FIELD_VALUE_ID,STATUS,USER_EDITED,UPDATED_DATETIME) values (USER_CUSTOM_FIELD_VAL_ID_SEQ.NEXTVAL,?,?,?,'Y',?,SYSDATE)

getNextSevenDigitSequenceId :SELECT 'NNS'||to_char(^SEQUENCENAME^.NEXTVAL,'FM0000000') AS SEQVAL FROM DUAL

getNextSevenDigitBillToId :SELECT 'AXE'||to_char(^SEQUENCENAME^.NEXTVAL,'FM0000000') AS SEQVAL FROM DUAL

getNextSevenDigitShipToId :SELECT 'AXE'||to_char(^SEQUENCENAME^.NEXTVAL,'FM00000') AS SEQVAL FROM DUAL

updateDefaultShipToId : UPDATE CIMM_USERS SET DEFAULT_SHIPPING_ADDRESS_ID=? WHERE USER_ID=?

updateBuyingAddressId: UPDATE CIMM_USERS SET DEFAULT_BILLING_ADDRESS_ID=?,DEFAULT_SHIPPING_ADDRESS_ID = ? WHERE BUYING_COMPANY_ID=?

checkForItemsWithDifferentLocation : select distinct regexp_substr (ITEM_LEVEL_SHIPVIA_DESC, '[^,]+', 1, 2) as STORE,USER_ID,SESSIONID,ITEM_LEVEL_SHIPVIA from cart where (USER_ID = ? OR SESSIONID=?)

updateStoreLocation : UPDATE CART SET ITEM_LEVEL_SHIPVIA_DESC = ? where USER_ID = ? and ITEM_LEVEL_SHIPVIA = ?

updateCustomerProfileId : UPDATE CIMM_USERS SET CUSTOMER_PROFILE_ID=? WHERE USER_ID=?

getUsersByCustomerSaleUsers : SELECT CU.USER_ID, CU.USER_NAME, CU.FIRST_NAME, CU.LAST_NAME, CU.ADDRESS1, CU.ADDRESS2, CU.CITY, CU.STATE, CU.COUNTRY, CU.ZIP, CU.EMAIL, CU.ECLIPSE_CONTACT_ID, CU.BUYING_COMPANY_ID from CIMM_USERS CU, BUYING_COMPANY BC WHERE CU.BUYING_COMPANY_ID = ? and CU.status = 'Y' AND CU.USER_TYPE = 'ECOMM' and CU.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID

getUsersByCustomerForSalesRep : SELECT CR.ROLE_NAME, CU.USER_ID, CU.USER_NAME, CU.FIRST_NAME, CU.LAST_NAME, CU.ADDRESS1, CU.ADDRESS2, CU.CITY, CU.STATE, CU.COUNTRY, CU.ZIP, CU.EMAIL, CU.ECLIPSE_CONTACT_ID, CU.BUYING_COMPANY_ID from CIMM_USERS CU, BUYING_COMPANY BC, CIMM_USER_ROLES CUR, CIMM_ROLES CR WHERE CU.BUYING_COMPANY_ID = ? and CU.status = 'Y' AND CU.USER_TYPE = 'ECOMM' and CU.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND CR.ROLE_NAME NOT IN ('Ecomm SALES_REP', 'Ecomm SALES_ADMIN')

getSalesRepUserDetailsForCustomer : SELECT CU.FIRST_NAME, CU.LAST_NAME, CU.EMAIL, CU.USER_NAME, CU.USER_ID, CU.CITY, CU.STATE, CU.COUNTRY, CU.OFFICE_PHONE from CIMM_USERS CU, SALES_REP_COMPANIES SR WHERE CU.USER_ID = SR.USER_ID and SR.CUSTOMER_ID=? ORDER BY SR.UPDATED_DATETIME DESC

#getCustomersForSalesAdminExcludeSrcCompany : SELECT BUYING_COMPANY_ID, CUSTOMER_NAME, ENTITY_ID, ADDRESS1, STATE, CITY, ZIP, COUNTRY from BUYING_COMPANY where STATUS = 'A' AND BUYING_COMPANY_ID != 1 AND BUYING_COMPANY_ID !=?
getCustomersForSalesAdminExcludeSrcCompany : SELECT COUNT(CU.BUYING_COMPANY_ID), BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY FROM BUYING_COMPANY BC, CIMM_USERS CU WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID != 1 AND BC.BUYING_COMPANY_ID !=? AND CU.BUYING_COMPANY_ID= BC.BUYING_COMPANY_ID AND CU.STATUS = 'Y' AND CU.USER_TYPE = 'ECOMM' HAVING COUNT (CU.BUYING_COMPANY_ID)>0 GROUP BY BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY ORDER BY BC.CUSTOMER_NAME

#getCustomersForSalesAdmin : SELECT BUYING_COMPANY_ID, CUSTOMER_NAME, ENTITY_ID, ADDRESS1, STATE, CITY, ZIP, COUNTRY from BUYING_COMPANY where STATUS = 'A' AND BUYING_COMPANY_ID != 1
getCustomersForSalesAdmin : SELECT COUNT(CU.BUYING_COMPANY_ID), BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY FROM BUYING_COMPANY BC, CIMM_USERS CU WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID != 1 AND CU.BUYING_COMPANY_ID= BC.BUYING_COMPANY_ID AND CU.STATUS = 'Y' AND CU.USER_TYPE = 'ECOMM' HAVING COUNT (CU.BUYING_COMPANY_ID)>0 GROUP BY BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY ORDER BY BC.CUSTOMER_NAME

#getCustomersForSalesRepExcludeSrcCompany : SELECT BUYING_COMPANY_ID, CUSTOMER_NAME, ENTITY_ID, ADDRESS1, STATE, CITY, ZIP, COUNTRY FROM BUYING_COMPANY BC, SALES_REP_COMPANIES SRC WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID = SRC.CUSTOMER_ID AND SRC.USER_ID = ? AND BC.BUYING_COMPANY_ID != 1 AND BC.BUYING_COMPANY_ID != ?
getCustomersForSalesRepExcludeSrcCompany : SELECT COUNT(CU.BUYING_COMPANY_ID), BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY FROM BUYING_COMPANY BC, SALES_REP_COMPANIES SRC, CIMM_USERS CU, CIMM_USER_ROLES CUR, CIMM_ROLES CR WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID  = SRC.CUSTOMER_ID AND SRC.USER_ID = ? AND BC.BUYING_COMPANY_ID != 1 AND BC.BUYING_COMPANY_ID != ? AND CU.BUYING_COMPANY_ID= BC.BUYING_COMPANY_ID AND CU.STATUS = 'Y' AND CU.USER_TYPE = 'ECOMM' AND CUR.USER_ID = CU.USER_ID AND CR.ROLE_ID = CUR.ROLE_ID AND CR.ROLE_NAME NOT IN ('Ecomm SALES_REP', 'Ecomm SALES_ADMIN') HAVING COUNT (CU.BUYING_COMPANY_ID)>0 GROUP BY BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY ORDER BY BC.CUSTOMER_NAME

#getCustomersForSalesRep : SELECT BUYING_COMPANY_ID, CUSTOMER_NAME, ENTITY_ID, ADDRESS1, STATE, CITY, ZIP, COUNTRY FROM BUYING_COMPANY BC, SALES_REP_COMPANIES SRC WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID = SRC.CUSTOMER_ID AND SRC.USER_ID = ? AND BC.BUYING_COMPANY_ID != 1
getCustomersForSalesRep : SELECT COUNT(CU.BUYING_COMPANY_ID), BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY FROM BUYING_COMPANY BC, SALES_REP_COMPANIES SRC, CIMM_USERS CU, CIMM_USER_ROLES CUR, CIMM_ROLES CR WHERE BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID  = SRC.CUSTOMER_ID AND SRC.USER_ID = ? AND BC.BUYING_COMPANY_ID != 1 AND CU.BUYING_COMPANY_ID= BC.BUYING_COMPANY_ID AND CU.STATUS = 'Y' AND CU.USER_TYPE = 'ECOMM' AND CUR.USER_ID = CU.USER_ID AND CR.ROLE_ID = CUR.ROLE_ID AND CR.ROLE_NAME NOT IN ('Ecomm SALES_REP', 'Ecomm SALES_ADMIN') HAVING COUNT (CU.BUYING_COMPANY_ID)>0 GROUP BY BC.BUYING_COMPANY_ID, BC.CUSTOMER_NAME, BC.ENTITY_ID, BC.ADDRESS1, BC.STATE, BC.CITY, BC.ZIP, BC.COUNTRY ORDER BY BC.CUSTOMER_NAME

getLocationServices:SELECT DISTINCT CF.FIELD_NAME FROM WAREHOUSE W, WAREHOUSE_CUSTOM_FIELD_VALUES WCFV, CUSTOM_FIELDS CF, LOC_CUSTOM_FIELD_VALUES LCFV WHERE W.WAREHOUSE_ID = WCFV.WAREHOUSE_ID AND WCFV.CUSTOM_FIELD_ID = CF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID=WCFV.LOC_CUSTOM_FIELD_VALUE_ID AND (W.STATUS ='Y' OR W.STATUS ='A')

getServiceDetails:SELECT DISTINCT W.WAREHOUSE_ID, CF.FIELD_NAME, W.WAREHOUSE_NAME, W.WAREHOUSE_CODE, W.PHONE_NUMBER PHONE, W.EMAIL, W.SERVICE_MANAGER, W.LATTITUDE, W.LONGITUDE, W.ADDRESS1||' '||W.ADDRESS2 STREET_ADDRESS, W.STATE,W.AC, W.CITY, W.ZIP, W.FAX, W.WORK_HOUR, W.NOTE, W.COUNTRY, W.TOLL_FREE_NUMBER TOLL_FREE, CASE WHEN UPPER(CF.FIELD_DATA_TYPE)='TXT' OR UPPER(CF.FIELD_DATA_TYPE) ='BOL' OR UPPER(CF.FIELD_DATA_TYPE) ='DT' THEN LCFV.TEXT_FIELD_VALUE ELSE TO_CHAR(LCFV.NUMERIC_FIELD_VALUE) END FIELD_VALUE FROM WAREHOUSE W, WAREHOUSE_CUSTOM_FIELD_VALUES WCFV, CUSTOM_FIELDS CF, LOC_CUSTOM_FIELD_VALUES LCFV WHERE W.WAREHOUSE_ID = WCFV.WAREHOUSE_ID AND WCFV.CUSTOM_FIELD_ID = CF.CUSTOM_FIELD_ID AND LCFV.LOC_CUSTOM_FIELD_VALUE_ID=WCFV.LOC_CUSTOM_FIELD_VALUE_ID AND (W.STATUS ='Y' OR W.STATUS ='A') AND LCFV.TEXT_FIELD_VALUE='Y' AND CF.FIELD_NAME= ? ORDER BY WAREHOUSE_ID

logicalDeleteCartQuery: UPDATE CART SET CHECKOUT_TYPE='P' WHERE USER_ID=? AND CART_ID=?

getPartialCartItemDetailQuery: SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ADDITIONAL_PROPERTIES, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD ,C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA, C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.DISPLAY_PRICING,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP, ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+)= C.ITEM_ID AND C.CHECKOUT_TYPE is null UNION SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ADDITIONAL_PROPERTIES, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD , C.UOM,C.BRAND,C.PART_NUMBER  NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY,IP.CLEARANCE, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.DISPLAY_PRICING,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP, ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+)= C.ITEM_ID AND IDMV.ITEM_ID NOT IN (SELECT C.ITEM_ID FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.SITE_ID \= ? AND C.USER_ID\=? AND IDMV.ITEM_ID \= C.ITEM_ID AND IDMV.SUBSET_ID\=?) AND C.CHECKOUT_TYPE is null

getPartialCartItemDetailQueryBySession: SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ADDITIONAL_PROPERTIES, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD , C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, IP.DISPLAY_PRICING,IP.SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP, ITEM_TAXONOMY_NAME_VIEW ITNV WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND C.SESSIONID \= ? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+) = C.ITEM_ID AND C.CHECKOUT_TYPE is null UNION SELECT IDMV.STANDARD_APPROVALS,IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, ITNV.CATEGORY_NAME, C.ADDITIONAL_PROPERTIES, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.AVAILABILITY, C.PRICE_OLD ,C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC,IP.DISPLAY_PRICING, IP.SALES_UOM,IP.SALES_QTY,IP.CLEARANCE, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP, ITEM_TAXONOMY_NAME_VIEW ITNV  WHERE C.SITE_ID \= ? AND C.USER_ID   \=? AND C.SESSIONID \= ? AND IP.ITEM_PRICE_ID \= IDMV.ITEM_PRICE_ID AND C.ITEM_ID \= IP.ITEM_ID AND IDMV.SUBSET_ID\=? AND ITNV.ITEM_ID(+) = C.ITEM_ID  AND IDMV.ITEM_ID NOT IN (SELECT C.ITEM_ID FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.SITE_ID \= ? AND C.USER_ID\=? AND C.SESSIONID \= ? AND IDMV.ITEM_ID \= C.ITEM_ID AND IDMV.SUBSET_ID\=?) AND C.CHECKOUT_TYPE is null

partialDeleteFromCart : DELETE FROM CART WHERE USER_ID=? AND CHECKOUT_TYPE is null

partialDeleteFromCartBySession :DELETE FROM CART WHERE USER_ID=? AND SESSIONID=? AND CHECKOUT_TYPE is null

resetCheckoutTypeInCart: Update CART set CHECKOUT_TYPE='' where USER_ID=?

partialCheckoutUpdateCart: UPDATE CART SET QTY = ?,LINE_ITEM_COMMENT=?,ITEMLEVEL_REQUIREDBYDATE=?, ORDER_QUOTE_NUMBER = ?, CHECKOUT_TYPE='' WHERE USER_ID=? AND CART_ID=?

getItemPriceIdOnPartNumber: SELECT IP.ITEM_PRICE_ID from item_master IM INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IM.ITEM_ID WHERE IM.PART_NUMBER = ? AND (IP.SUBSET_ID = ? OR IP.SUBSET_ID=?)

getUserPreferencesJsonData : SELECT USER_PREFERENCES FROM CIMM_USERS WHERE USER_ID = ?

updateUserPreferencesJsonData : UPDATE CIMM_USERS SET USER_PREFERENCES=? WHERE USER_ID=?

getTopSelledCategoriesByCustomer: SELECT * FROM (select tt.CATEGORY_NAME NAME, sum(to_char(oi.ext_price,'999999999.99')) Extended_Price, oi.MANUFACTURER MANUFACTURER from order_items oi, ITEM_CLASSIFICATION ic, TAXONOMY_TREE tt, orders od where oi.item_id = ic.item_id and ic.TAXONOMY_TREE_ID=tt.TAXONOMY_TREE_ID and ic.DEFAULT_CATEGORY='Y' and oi.ext_price is not null  and oi.ext_price>0 and oi.UPDATED_DATETIME BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') and od.CUSTOMER_ERP_ID=? group by tt.CATEGORY_NAME, oi.MANUFACTURER ORDER BY EXTENDED_PRICE DESC)

getTopSelledCategoriesByUser: SELECT * FROM (select tt.CATEGORY_NAME NAME, sum(to_char(oi.ext_price,'999999999.99')) Extended_Price, oi.MANUFACTURER MANUFACTURER from order_items oi, ITEM_CLASSIFICATION ic,TAXONOMY_TREE tt, orders od where oi.item_id = ic.item_id and ic.TAXONOMY_TREE_ID=tt.TAXONOMY_TREE_ID and ic.DEFAULT_CATEGORY='Y' and oi.ext_price is not null  and oi.ext_price>0 and oi.UPDATED_DATETIME BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') and od.USER_ID=? group by tt.CATEGORY_NAME, oi.MANUFACTURER ORDER BY EXTENDED_PRICE DESC)

getPromotedProductGroupListNameQuery: SELECT * FROM( SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID, SIL.ASSIGN_TO_ALL_CUSTOMER , ITEMSCOUNT.ITEM_COUNTS AS ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC, SAVED_LIST_ITEMS SI, CIMM_USERS CU, USER_PRODUCT_GROUP UPG, BC_GROUP_COMPANY BCG, BC_PRODUCT_GROUP BPG , BC_GROUP_PRODUCT_GROUP BGPG ,( SELECT SIL1.SAVED_LIST_ID, COUNT(ITEM_ID) AS ITEM_COUNTS FROM SAVED_LIST_ITEMS SI1, SAVED_ITEM_LIST SIL1 WHERE SIL1.SAVED_LIST_ID = SI1.SAVED_LIST_ID AND SIL1.TYPE = 'GP' AND SIL1.STATUS = 'Y' GROUP BY SIL1.SAVED_LIST_ID) ITEMSCOUNT WHERE SIL.SITE_ID = ? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND SIL.SAVED_LIST_ID = SI.SAVED_LIST_ID AND SIL.TYPE = 'GP' AND SIL.STATUS = 'Y' AND ITEMSCOUNT.SAVED_LIST_ID = SIL.SAVED_LIST_ID AND BC.BUYING_COMPANY_ID = BPG.BUYING_COMPANY_ID(+) AND SIL.SAVED_LIST_ID = BGPG.SAVED_LIST_ID (+) AND SIL.SAVED_LIST_ID = BPG.SAVED_LIST_ID (+) AND SIL.SAVED_LIST_ID = UPG.SAVED_LIST_ID (+) AND BC.BUYING_COMPANY_ID = BCG.BUYING_COMPANY_ID (+) AND BCG.BC_GROUP_ID = BGPG.BC_GROUP_ID (+) AND ( ( UPG.USER_ID = CU.USER_ID AND UPG.SAVED_LIST_ID = SIL.SAVED_LIST_ID ) OR BPG.SAVED_LIST_ID = SIL.SAVED_LIST_ID OR BGPG.SAVED_LIST_ID = SIL.SAVED_LIST_ID ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID , SIL.ASSIGN_TO_ALL_CUSTOMER ,ITEM_COUNTS UNION SELECT SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID, SIL.ASSIGN_TO_ALL_CUSTOMER , ITEMSCOUNT.ITEM_COUNTS AS ITEM_COUNTS FROM SAVED_ITEM_LIST SIL, BUYING_COMPANY BC, SAVED_LIST_ITEMS SI, CIMM_USERS CU, USER_PRODUCT_GROUP UPG, BC_GROUP_COMPANY BCG, BC_PRODUCT_GROUP BPG , BC_GROUP_PRODUCT_GROUP BGPG ,( SELECT SIL1.SAVED_LIST_ID, COUNT(ITEM_ID) AS ITEM_COUNTS FROM SAVED_LIST_ITEMS SI1, SAVED_ITEM_LIST SIL1 WHERE SIL1.SAVED_LIST_ID = SI1.SAVED_LIST_ID AND SIL1.TYPE = 'GP' AND SIL1.STATUS = 'Y' GROUP BY SIL1.SAVED_LIST_ID ) ITEMSCOUNT WHERE SIL.SITE_ID = ? AND SIL.SAVED_LIST_ID = SI.SAVED_LIST_ID AND SIL.TYPE = 'GP' AND SIL.STATUS = 'Y' AND ITEMSCOUNT.SAVED_LIST_ID = SIL.SAVED_LIST_ID AND BC.BUYING_COMPANY_ID = BPG.BUYING_COMPANY_ID (+) AND SIL.SAVED_LIST_ID = BGPG.SAVED_LIST_ID (+) AND SIL.SAVED_LIST_ID = BPG.SAVED_LIST_ID (+) AND SIL.SAVED_LIST_ID = UPG.SAVED_LIST_ID (+) AND BC.BUYING_COMPANY_ID = BCG.BUYING_COMPANY_ID (+) AND BCG.BC_GROUP_ID = BGPG.BC_GROUP_ID (+) AND ( SIL.ASSIGN_TO_ALL_CUSTOMER IS NOT NULL AND SIL.ASSIGN_TO_ALL_CUSTOMER = 'Y' ) GROUP BY SIL.SAVED_LIST_ID, SIL.SAVED_LIST_NAME, SIL.TYPE, SIL.UPDATED_DATETIME, SIL.ASSIGNED_SHIP_TO, SIL.STATUS, SIL.SENT_BY_APPR_USER_ID , SIL.ASSIGN_TO_ALL_CUSTOMER ,ITEM_COUNTS) ORDER BY ?

selectPromotedProductGroupItems: SELECT SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM WHERE SLI.SAVED_LIST_ID = ? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND IDMV.SUBSET_ID = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID = IP.ITEM_ID AND SIL.SAVED_LIST_ID = SLI.SAVED_LIST_ID AND IM.ITEM_ID = IP.ITEM_ID UNION SELECT SLI.LIST_ITEM_ID, SLI.LIST_ITEM_ID AS CART_ID, IDMV.UNSPSC, SIL.SAVED_LIST_NAME, SIL.UPDATED_DATETIME, SIL.TYPE, SIL.STATUS, SIL.ASSIGNED_SHIP_TO, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.BRAND_NAME, IDMV.BRAND_IMAGE, IDMV.MANUFACTURER_NAME, IDMV.MANUFACTURER_ID, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM, IP.SALES_QTY, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE, IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, SLI.QTY, IM.QTY_AVAILABLE, SIL.SENT_BY_APPR_USER_ID, IDMV.MIN_ORDER_QTY, IDMV.ORDER_QTY_INTERVAL, NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY, IP.PACKAGE_FLAG, IP.CUSTOMER_PART_NUMBER, IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE", SLI.LINE_ITEM_COMMENT, IDMV.UPC, SLI.ITEM_LEVEL_SHIPVIA, SLI.ITEM_LEVEL_SHIPVIA_DESC, SLI.ITEMLEVEL_REQUIREDBYDATE, SLI.CATALOG_ID, SLI.GET_PRICE_FROM, SLI.UOM, SLI.PRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM, IDMV.LENGTH, IDMV.LENGTH_UOM, IDMV.HEIGHT, IDMV.HEIGHT_UOM, IDMV.WIDTH, IDMV.WIDTH_UOM, SLI.BC_ADDRESS_BOOK_ID FROM ITEM_DETAILS_MV IDMV, SAVED_LIST_ITEMS SLI, SAVED_ITEM_LIST SIL, ITEM_PRICES IP, CIMM_USERS CU, BUYING_COMPANY BC, ITEM_MASTER IM WHERE SLI.SAVED_LIST_ID = ? AND CU.USER_ID = ? AND BC.BUYING_COMPANY_ID = ? AND IDMV.SUBSET_ID = ? AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND SLI.ITEM_ID = IP.ITEM_ID AND SIL.SAVED_LIST_ID = SLI.SAVED_LIST_ID AND IM.ITEM_ID = IP.ITEM_ID AND IDMV.ITEM_ID NOT IN (SELECT SLI.ITEM_ID FROM SAVED_LIST_ITEMS SLI, ITEM_DETAILS_MV IDMV WHERE SLI.SAVED_LIST_ID = ? AND IDMV.ITEM_ID = SLI.ITEM_ID AND IDMV.SUBSET_ID = ?)

getAssetsByWareHouse: SELECT A.ASSET_ID, A.ASSET_NAME, A.TITLE, A.ASSET_TYPE, A.ASSET_THUMBNAIL, A.DESCRIPTION, A.VALID_FROM, A.VALID_TO, ACL.CATEGORY_ID, ACL.CATEGORY_NAME, W.WAREHOUSE_CODE, W.WAREHOUSE_NAME, W.WAREHOUSE_CODE, W.WAREHOUSE_ID, W.ADDRESS1, W.ADDRESS2, W.BRANCH_LOCATION_ID, W.CITY, W.STATE, W.COUNTRY, W.STATUS FROM ASSET A LEFT JOIN WAREHOUSE_ASSETS WA INNER JOIN WAREHOUSE W ON WA.WAREHOUSE_ID = W.WAREHOUSE_ID ON A.ASSET_ID = WA.ASSET_ID LEFT JOIN ASSET_CATEGORY AC INNER JOIN ASSET_CATEGORY_LIST ACL ON ACL.CATEGORY_ID = AC.CATEGORY_ID ON A.ASSET_ID = AC.ASSET_ID WHERE A.STATUS= 'A' AND (A.VALID_FROM IS NULL OR A.VALID_FROM <= SYSDATE) AND (A.VALID_TO IS NULL OR A.VALID_TO >= SYSDATE) AND (W.WAREHOUSE_CODE = ? OR W.WAREHOUSE_CODE IS NULL)

getVMIItems: SELECT VC.CART_ID, VC.UOM, VC.BRAND, VC.PART_NUMBER NC_PART_NUMBER, VC.PRICE, VC.MANUFACTURER, VC.SHORT_DESCRIPTION, VC.BC_ADDRESS_BOOK_ID, VC.ADDITIONAL_PROPERTIES, VC.LINE_ITEM_COMMENT, VC.GET_PRICE_FROM, VC.THRESHOLD_QTY, VC.REPLENISH_TO_QTY, VC.USER_ID, VC.SESSIONID, VC.CUSTOMER_ID, VC.QTY, VC.CATALOG_ID, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.LONG_DESC2, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.UPC, IDMV.MANUFACTURER_PART_NUMBER, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH, IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH, IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID, IDMV.IMAGE_TYPE, IDMV.IMAGE_NAME, IDMV.MIN_ORDER_QTY, IP.NET_PRICE, IP.PACKAGE_QTY, IP.PACKAGE_FLAG, IP.SALES_UOM, IP.CLEARANCE, IP.ORDER_QTY_INTERVAL, IP.CUSTOMER_PART_NUMBER, IP.DISPLAY_PRICING FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ? UNION SELECT VC.CART_ID, VC.UOM, VC.BRAND, VC.PART_NUMBER NC_PART_NUMBER, VC.PRICE, VC.MANUFACTURER, VC.SHORT_DESCRIPTION, VC.BC_ADDRESS_BOOK_ID, VC.ADDITIONAL_PROPERTIES, VC.LINE_ITEM_COMMENT, VC.GET_PRICE_FROM, VC.THRESHOLD_QTY, VC.REPLENISH_TO_QTY, VC.USER_ID, VC.SESSIONID, VC.CUSTOMER_ID, VC.QTY, VC.CATALOG_ID, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.LONG_DESC2, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.UPC, IDMV.MANUFACTURER_PART_NUMBER, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH, IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH, IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID, IDMV.IMAGE_TYPE, IDMV.IMAGE_NAME, IDMV.MIN_ORDER_QTY, IP.NET_PRICE, IP.PACKAGE_QTY, IP.PACKAGE_FLAG, IP.SALES_UOM, IP.CLEARANCE, IP.ORDER_QTY_INTERVAL, IP.CUSTOMER_PART_NUMBER, IP.DISPLAY_PRICING FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ? AND IDMV.ITEM_ID NOT IN( SELECT IDMV.ITEM_ID FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ?)

insertItemsToVMICart: INSERT INTO VMI_CART (CART_ID, ITEM_ID, USER_ID, SITE_ID, BRAND, PART_NUMBER, MANUFACTURER, CUSTOMER_ID, THRESHOLD_QTY, REPLENISH_TO_QTY, UPDATED_DATETIME, SESSIONID, SUBSET_ID) VALUES (VMI_CART_ID_SEQ.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, ?, ?)

updateItemsInVMICart: UPDATE VMI_CART SET ITEM_ID = ?, USER_ID = ?, SITE_ID = ?, BRAND = ?, PART_NUMBER = ?, MANUFACTURER = ?, CUSTOMER_ID = ?, THRESHOLD_QTY = ?, REPLENISH_TO_QTY = ?, UPDATED_DATETIME = SYSDATE, SESSIONID = ?, SUBSET_ID = ? WHERE CART_ID = ?

updateVMICart: UPDATE VMI_CART SET USER_ID = ?, SESSIONID = ?, QTY = ?, ORDERED_QTY = ?, ADDTOCART_FLAG = ?, UPDATED_DATETIME = SYSDATE WHERE CUSTOMER_ID = ? AND CART_ID = ?

deleteFromVMICart: DELETE FROM VMI_CART WHERE CUSTOMER_ID =? AND CART_ID = ?

resetQtyInVMICart: UPDATE VMI_CART SET QTY = NULL, ADDTOCART_FLAG = 'N' WHERE CUSTOMER_ID =? AND SITE_ID = ? AND CART_ID = ?

getVMIOrderedItemsList: SELECT VC.CART_ID, VC.UOM, VC.BRAND, VC.PART_NUMBER NC_PART_NUMBER, VC.PRICE, VC.MANUFACTURER, VC.SHORT_DESCRIPTION, VC.BC_ADDRESS_BOOK_ID, VC.ADDITIONAL_PROPERTIES, VC.LINE_ITEM_COMMENT, VC.GET_PRICE_FROM, VC.THRESHOLD_QTY, VC.REPLENISH_TO_QTY, VC.USER_ID, VC.SESSIONID, VC.CUSTOMER_ID, VC.QTY, VC.CATALOG_ID, VC.ADDTOCART_FLAG, VC.ORDERED_QTY, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.LONG_DESC2, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.UPC, IDMV.MANUFACTURER_PART_NUMBER, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH, IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH, IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID, IDMV.IMAGE_TYPE, IDMV.IMAGE_NAME, IDMV.MIN_ORDER_QTY, IP.NET_PRICE, IP.PACKAGE_QTY, IP.PACKAGE_FLAG, IP.SALES_UOM, IP.CLEARANCE, IP.ORDER_QTY_INTERVAL, IP.CUSTOMER_PART_NUMBER, IP.DISPLAY_PRICING FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ? AND VC.ADDTOCART_FLAG = ? UNION SELECT VC.CART_ID, VC.UOM, VC.BRAND, VC.PART_NUMBER NC_PART_NUMBER, VC.PRICE, VC.MANUFACTURER, VC.SHORT_DESCRIPTION, VC.BC_ADDRESS_BOOK_ID, VC.ADDITIONAL_PROPERTIES, VC.LINE_ITEM_COMMENT, VC.GET_PRICE_FROM, VC.THRESHOLD_QTY, VC.REPLENISH_TO_QTY, VC.USER_ID, VC.SESSIONID, VC.CUSTOMER_ID, VC.QTY, VC.CATALOG_ID, VC.ADDTOCART_FLAG, VC.ORDERED_QTY, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID, IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1, IDMV.LONG_DESC2, IDMV.BRAND_NAME, IDMV.MANUFACTURER_NAME, IDMV.UPC, IDMV.MANUFACTURER_PART_NUMBER, IDMV.MATERIAL_GROUP, IDMV.INVOICE_DESC, IDMV.PACK_DESC, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH, IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH, IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID, IDMV.IMAGE_TYPE, IDMV.IMAGE_NAME, IDMV.MIN_ORDER_QTY, IP.NET_PRICE, IP.PACKAGE_QTY, IP.PACKAGE_FLAG, IP.SALES_UOM, IP.CLEARANCE, IP.ORDER_QTY_INTERVAL, IP.CUSTOMER_PART_NUMBER, IP.DISPLAY_PRICING FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ? AND VC.ADDTOCART_FLAG = ? AND IDMV.ITEM_ID NOT IN( SELECT IDMV.ITEM_ID FROM ITEM_DETAILS_MV IDMV INNER JOIN VMI_CART VC ON VC.ITEM_ID = IDMV.ITEM_ID INNER JOIN ITEM_PRICES IP ON IP.ITEM_ID = IDMV.ITEM_ID AND IP.SUBSET_ID = IDMV.SUBSET_ID WHERE VC.SITE_ID = ? AND VC.CUSTOMER_ID = ? AND IDMV.SUBSET_ID = ? AND VC.ADDTOCART_FLAG = ?)

selectFromVMICart: SELECT * FROM VMI_CART WHERE CUSTOMER_ID = ? AND PART_NUMBER = ? AND SITE_ID = ?

updateGroupToPublic : UPDATE SAVED_ITEM_LIST SET BUYING_COMPANY_ID=?,IS_PUBLIC=? WHERE SAVED_LIST_ID=? AND TYPE=?

getShipToIdShipAddresses : SELECT * FROM BC_ADDRESS_BOOK WHERE BC_ADDRESS_BOOK_ID = ? AND ADDRESS_TYPE='Ship'

getRistrictionStateNames : Select MANUFACTURER_ID,(SELECT STATE_CODE FROM STATES_CODES where STATE_CODE_ID = STATE_ID) AS STATE_CODE from MANUFACTURER_RESTRICTED_STATES order by MANUFACTURER_ID ASC

getStateNameBySHIPToID : SELECT STATE FROM BC_ADDRESS_BOOK WHERE BC_ADDRESS_BOOK_ID = ? 

getCustomerSalesByDate : SELECT SALESDATE,SUM(TO_CHAR(SUBTOTAL_AMOUNT,'999999999.99')) Extended_Price FROM(SELECT to_date(UPDATED_DATETIME,'dd-mm-yy') SALESDATE, SUBTOTAL_AMOUNT FROM orders WHERE UPDATED_DATETIME BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') AND SUBTOTAL_AMOUNT IS NOT NULL AND SUBTOTAL_AMOUNT > 0 AND CUSTOMER_ERP_ID = ? ORDER BY UPDATED_DATETIME) GROUP BY SALESDATE ORDER BY SALESDATE

getUserSalesByDate : SELECT SALESDATE,SUM(TO_CHAR(SUBTOTAL_AMOUNT,'999999999.99')) Extended_Price FROM(SELECT to_date(UPDATED_DATETIME,'dd-mm-yy') SALESDATE, SUBTOTAL_AMOUNT FROM orders WHERE UPDATED_DATETIME BETWEEN to_date(?,'dd/mm/yyyy') AND to_date(?,'dd/mm/yyyy') AND SUBTOTAL_AMOUNT IS NOT NULL AND SUBTOTAL_AMOUNT > 0 AND USER_ID = ? ORDER BY UPDATED_DATETIME) GROUP BY SALESDATE ORDER BY SALESDATE

insertDesignDetails : INSERT INTO ITEM_LOGO_CUSTOMIZATION_LIST(CUSTOMIZATION_LIST_ID,USER_ID, BUYING_COMPANY_ID, DESIGN_STATUS, DESIGN_ID, DETAILS, DESIGN_DATE) VALUES(?,?,?,?,?,?,SYSDATE)

updateDesignStatus : UPDATE ITEM_LOGO_CUSTOMIZATION_LIST SET DESIGN_STATUS = ? WHERE CUSTOMIZATION_LIST_ID = ?

getDesigneDetails : SELECT CUSTOMIZATION_LIST_ID, DESIGN_ID, STATUS, DESIGN_STATUS, DETAILS FROM ITEM_LOGO_CUSTOMIZATION_LIST WHERE USER_ID = ? AND BUYING_COMPANY_ID = ? AND STATUS = 'Y'

insertItemToCartWithDesignId : INSERT INTO CART (CART_ID,ITEM_ID,QTY,SESSIONID,USER_ID,UPDATED_DATETIME,SITE_ID,CATALOG_ID,UOM, PRICE, MIN_ORDER_QTY, ITEM_WEIGHT, UNITS, BC_ADDRESS_BOOK_ID, ADDITIONAL_PROPERTIES, AVAILABILITY) VALUES(CART_ID_SEQ.NEXTVAL,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?)

updateDesignDetails : UPDATE ITEM_LOGO_CUSTOMIZATION_LIST SET JOB_ID = ?, STATUS = 'O' WHERE DESIGN_ID = ?

checkDesignExits : SELECT * FROM ITEM_LOGO_CUSTOMIZATION_LIST WHERE DESIGN_ID = ?

selectFromCartCSP : SELECT * FROM CART WHERE USER_ID = ? AND ADDITIONAL_PROPERTIES = ?

selectFromCartDesign : SELECT CART_ID, QTY FROM CART WHERE USER_ID = ? AND ITEM_ID=? AND UOM=? AND ADDITIONAL_PROPERTIES IS NULL

updateEclipseUserContactInformation :UPDATE CIMM_USERS SET UPDATED_DATETIME=SYSDATE, FIRST_NAME=?, LAST_NAME=?,ADDRESS1=?, ADDRESS2=?, CITY=?, STATE=?,ZIP=?,COUNTRY=?, OFFICE_PHONE=?, EMAIL=?, FAX=? WHERE USER_ID=?

getCategoryNameByTaxonomyID : SELECT CATEGORY_NAME FROM TAXONOMY_TREE WHERE TAXONOMY_TREE_ID = ?

getEventListByDate : SELECT EVENT_TITLE, START_DATE, END_DATE, EVENT_BODY_KEYWORD, EVENT_CATEGORY, LOCATION, CONTACT, ADDRESS, TOTAL_SEATS, BOOKED_SEATS from EVENT_MANAGER WHERE START_DATE >= ? AND END_DATE <= ?

getManufacturerMultipleCustomFieldValues : SELECT * FROM MFR_CF_VALUES_VIEW WHERE Manufacturer_ID = ?

getLastUpdateTimeDifferenceFromCart : SELECT EXTRACT( DAY FROM DIFF ) DAYS, EXTRACT( HOUR FROM DIFF ) HOURS, EXTRACT( MINUTE FROM DIFF ) MINUTES, EXTRACT( SECOND FROM DIFF ) SECONDS,NOW_TIME, PREV_TIME,PRICE,AVAILABILITY,ITEM_ID,CART_ID,USER_ID FROM (SELECT   TO_TIMESTAMP_TZ(SYSDATE, 'dd/mm/yyyy hh:mi:ssxff PM tzh:tzm') -  TO_TIMESTAMP_TZ(UPDATED_DATETIME, 'dd/mm/yyyy hh:mi:ssxff PM tzh:tzm') DIFF ,TO_TIMESTAMP_TZ(SYSDATE, 'dd/mm/yyyy hh:mi:ssxff PM tzh:tzm') NOW_TIME, TO_TIMESTAMP_TZ(UPDATED_DATETIME, 'dd/mm/yyyy hh:mi:ssxff PM tzh:tzm') PREV_TIME,PRICE,AVAILABILITY,ITEM_ID,CART_ID,USER_ID FROM CART WHERE USER_ID = ? AND SITE_ID = ? )

updateCartItemPrieAndAvailabilityFromERP : UPDATE CART SET UPDATED_DATETIME = SYSDATE, PRICE_OLD = PRICE, PRICE = ?, AVAILABILITY = ? WHERE CART_ID = ?

updateBuyingCompanyWithBuyingCompanyId: UPDATE BUYING_COMPANY SET CUSTOMER_NAME=?,ADDRESS1=?,ADDRESS2=?,CITY=?,STATE=?,ZIP=?,COUNTRY=?,EMAIL=?,CUSTOMER_TYPE=?,UPDATED_DATETIME=sysdate WHERE BUYING_COMPANY_ID= ?

getAbandonCart: SELECT user_id,user_name,first_name, last_name,email,status,default_shipping_address_id FROM Cimm_users WHERE user_id IN(SELECT DISTINCT user_id FROM cart WHERE UPDATED_DATETIME < SYSDATE - INTERVAL '5' MINUTE AND user_id!=1 AND AB_NOTIFICATION IS NULL) AND email IS NOT NULL AND status! ='D' AND USER_TYPE = 'ECOMM'

updateABCartNotificaion: UPDATE CART SET AB_NOTIFICATION = 'Y', UPDATED_DATETIME = SYSDATE WHERE USER_ID = ?

getSupplierDetails : SELECT IM.ITEM_ID, IM.PART_NUMBER, IM.ACTIVE, IM.DISPLAY_ONLINE, SUP.SUPPLIER_ID, SUP.SUPPLIER_NAME, SUP.SHORT_NAME, SUP.CUSTOMER_TYPE, SUP.ADDRESS1, SUP.CITY, SUP.STATE, SUP.ZIP, SUP.COUNTRY, SUP.EMAIL, SUP.URL, SUP.DUNS_NUMBER, SUP.TAXID, SUP.SUBSET_ID, SUP.LOGO, SUP.STATUS, SUP.ALLOW_SUBMIT_RFQ, SUP.ALLOW_SUBMIT_NPR, SUP.ALLOW_SUBMIT_PO, SUP.ALLOW_MARKET_BASKET, SUP.USER_EDITED, SUP.UPDATED_DATETIME, SUP.ADDRESS2, SUP.CNE_BATCH_ID, SUP.WFL_PHASE_ID, SUP.TAXONOMY_ID, SUP.SUPPLIER_CODE, SUP.PAYMENT_TERMS, SUP.ACCEPTSWILLCALL, SUP.ADDRESS3, SUP.BUYER_NAME, SUP.PHONE, SUP.FAX, SUP.CUSTOMER_ID, SUP.ALSO_KNOWN_AS, SUP.DROP_SHIP_PPD_FREIGHT, SUP.DROP_SHIP_ORDER_MIN, SUP.RETURN_POLICY, SUP.PRODUCT_LINES, SUP.REP_NAME, SUP.REP_ADDRESS, SUP.REP_PHONE, SUP.REP_CELL, SUP.REP_FAX, SUP.REP_EMAIL, SUP.REP_AGENCY FROM ITEM_MASTER IM INNER JOIN SUPPLIER SUP ON SUP.SUPPLIER_ID = IM.SUPPLIER_ID WHERE IM.ITEM_ID = ? AND SUP.SUBSET_ID = ?

getCartWithUserOrSessionID: SELECT * FROM (SELECT IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.USER_ID, C.AVAILABILITY, C.PRICE_OLD , C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID, C.ADDITIONAL_PROPERTIES, IDMV.ITEM_ID, IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC, IP.DISPLAY_PRICING,IP.SALES_UOM, IP.SALES_QTY,IP.CLEARANCE,IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER, ((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP WHERE C.SITE_ID = ? AND (C.USER_ID   =? OR C.SESSIONID = ?) AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND C.ITEM_ID = IP.ITEM_ID AND IDMV.SUBSET_ID=? UNION SELECT IDMV.BRAND_NAME || IDMV.MANUFACTURER_PART_NUMBER AS PRODUCT_NAME, C.ORDER_QUOTE_NUMBER, C.CART_ID, C.USER_ID, C.AVAILABILITY, C.PRICE_OLD ,C.UOM,C.BRAND,C.PART_NUMBER NC_PART_NUMBER,C.PRICE,C.MANUFACTURER,C.SHORT_DESCRIPTION,C.GET_PRICE_FROM,C.BC_ADDRESS_BOOK_ID,C.ADDITIONAL_PROPERTIES,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID, IDMV.SUBSET_ID,IDMV.PAGE_TITLE, IDMV.PART_NUMBER, IDMV.ALT_PART_NUMBER1, IDMV.ALT_PART_NUMBER2, IDMV.SHORT_DESC, IDMV.LONG_DESC1,IDMV.LONG_DESC2,IDMV.BRAND_NAME,IDMV.MANUFACTURER_NAME,IDMV.UPC,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC, IDMV.PACK_DESC,IP.DISPLAY_PRICING, IP.SALES_UOM,IP.SALES_QTY,IP.CLEARANCE, IDMV.IMAGE_NAME, IDMV.IMAGE_TYPE,IP.OVERRIDE_PRICE_RULE, IP.NET_PRICE, IDMV.UNSPSC, C.QTY,C.LINE_ITEM_COMMENT, C.ITEM_LEVEL_SHIPVIA,C.ITEM_LEVEL_SHIPVIA_DESC,C.ITEMLEVEL_REQUIREDBYDATE,C.CATALOG_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,IP.PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY) * C.QTY) EXTPRICE, IDMV.WEIGHT, IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM,IDMV.MANUFACTURER_ID FROM ITEM_DETAILS_MV IDMV, CART C,  ITEM_PRICES IP WHERE C.SITE_ID = ? AND (C.USER_ID   =? OR C.SESSIONID = ?) AND IP.ITEM_PRICE_ID = IDMV.ITEM_PRICE_ID AND C.ITEM_ID = IP.ITEM_ID AND IDMV.SUBSET_ID=? AND IDMV.ITEM_ID NOT IN (SELECT C.ITEM_ID FROM CART C, ITEM_DETAILS_MV IDMV WHERE C.SITE_ID = ? AND (C.USER_ID=? OR C.SESSIONID = ?) AND IDMV.ITEM_ID = C.ITEM_ID AND IDMV.SUBSET_ID=?)) ORDER BY  CART_ID

getUserCompleteDetailsByUserId : SELECT CU.USER_ID,CU.PASSWORD,CU.APPROVAL_USER_ID,CU.BUYING_COMPANY_ID,CU.PARENT_USER_ID,BC.LOGO,BC.ALLOW_SUBMIT_PO,BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM,BC.CREDIT_CARD_CHECKOUT,BC.GENERAL_CATALOG_ACCESS,BC.ALLOW_SUBMIT_NPR,BC.DISPLAY_CUST_PART_NUMBER,BC.ALLOW_LIVE_CHAT,BC.PARENT_COMPANY_ID,BC.ENTITY_ID,BC.ENTITY_ID_NUMBER,CU.PUNCHOUT_USER,CU.FIRST_LOGIN,CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID,CU.FIRST_NAME,CU.LAST_NAME,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,CU.EXISTING_CUSTOMER,BC.CUSTOMER_NAME,CU.COUNTRY,CR.ROLE_NAME,BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE,CU.CELL_PHONE,CU.JOB_TITLE,CU.SALES_REP_CONTACT,CU.EXTERNAL_SYSTEM2_USER_ID,CU.ADDRESS1,CU.CITY,CU.STATE,CU.ZIP,NVL(BC.SUBSET_ID, NVL(BC1.SUBSET_ID, NVL(W.SUBSET_ID,(select CONFIG_VALUE from SYSTEM_PARAMETERS where CONFIG_KEY = 'USERSUBSETID')))) SUBSET_ID, CU.PROFILE_IMAGE, CU.CHANGE_PASSWD_ON_LOGIN, CU.USER_PREFERENCES, BC.LANDING_PAGE_ID, CU.ACCEPT_ORDER_BY_PO_NUM USER_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_TYPE='ECOMM' AND CU.USER_ID = ? AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID AND CU.SITE_ID=?

getUserRoleByUserId : SELECT ROLE_NAME FROM CIMM_ROLES CR, CIMM_USER_ROLES CUR WHERE CUR.USER_ID in (SELECT USER_ID FROM cimm_users where USER_ID = ?) AND CR.ROLE_ID = CUR.ROLE_ID

getUserAccountList : SELECT CU.EMAIL,CU.FIRST_NAME,CU.LAST_NAME,CU.USER_NAME,CU.PASSWORD, CU.ECLIPSE_CONTACT_ID, BC.CUSTOMER_NAME,CU.OFFICE_PHONE,CU.STATUS FROM CIMM_USERS CU, BUYING_COMPANY BC WHERE UPPER(CU.USER_NAME)=? AND CU.STATUS = 'Y' AND BC.STATUS = 'A' AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.SITE_ID=?

getEntityIdWithBuyingCompanyId : SELECT ENTITY_ID_NUMBER FROM BUYING_COMPANY WHERE BUYING_COMPANY_ID=?

checkItemExistInCart: SELECT CART_ID,QTY FROM CART WHERE PART_NUMBER=? AND USER_ID=? AND SESSIONID=?
updateCustomerCategory = UPDATE CUSTOMER_LEVEL_CATEGORIES SET CATEGORY_NAME = ? WHERE PART_NUMBER=? AND ENTITY_ID=?

getUnlimitedAccessSuperAndAPAlist:SELECT CUR.USER_ID AS APPROVER_ID, CUR.*,CU.EMAIL FROM CIMM_USER_ROLES CUR, CIMM_USERS CU WHERE CU.USER_ID = CUR.USER_ID AND CU.STATUS = 'Y' AND CU.BUYING_COMPANY_ID=? AND CUR.APPROVE_LIMIT IS NOT NULL AND CUR.USER_ID NOT IN(select CUA.APPROVER_ID from CIMM_USERS_APPROVERS CUA, CIMM_USERS CU WHERE CUA.USER_ID = ? AND CU.USER_ID = CUA.APPROVER_ID and  CU.STATUS = 'Y')

getAllApprovalUserList:SELECT CUA.*, CU.EMAIL,CUR.APPROVE_LIMIT from CIMM_USERS_APPROVERS CUA,CIMM_USER_ROLES CUR, CIMM_USERS CU WHERE CUA.USER_ID = ? AND CU.USER_ID = CUA.APPROVER_ID and CU.USER_ID = CUR.USER_ID AND CU.STATUS = 'Y' ORDER BY CUA.APPROVER_SEQUENCE ASC

etUnlimitedAccessSuperAndAPAlist:SELECT CUR.USER_ID AS APPROVER_ID, CUR.*,CU.EMAIL FROM CIMM_USER_ROLES CUR, CIMM_USERS CU WHERE CU.USER_ID = CUR.USER_ID AND CU.STATUS = 'Y' AND CU.BUYING_COMPANY_ID=? AND CUR.APPROVE_LIMIT IS NOT NULL AND CUR.USER_ID NOT IN(select CUA.APPROVER_ID from CIMM_USERS_APPROVERS CUA, CIMM_USERS CU WHERE CUA.USER_ID = ? AND CU.USER_ID = CUA.APPROVER_ID and  CU.STATUS = 'Y')

getAssignedShipToApprover: SELECT DISTINCT(ASSIGNED_SHIP_TO) FROM SAVED_ITEM_LIST WHERE TYPE='A' AND STATUS ='N' AND SITE_ID=21 AND Sent_By_Appr_User_Id=?

updateAssignedShipToApprover: UPDATE SAVED_ITEM_LIST SET ASSIGNED_SHIP_TO=? WHERE TYPE='A' AND STATUS ='N' AND SITE_ID=21 AND ASSIGNED_SHIP_TO=? AND Sent_By_Appr_User_Id=?

getUnlimitedAccessSuperAndAPAlist:SELECT CUR.USER_ID AS APPROVER_ID, CUR.*,CU.EMAIL FROM CIMM_USER_ROLES CUR, CIMM_USERS CU WHERE CU.USER_ID = CUR.USER_ID AND CU.STATUS = 'Y' AND CU.BUYING_COMPANY_ID=? AND CUR.APPROVE_LIMIT IS NOT NULL AND CUR.USER_ID NOT IN(select CUA.APPROVER_ID from CIMM_USERS_APPROVERS CUA, CIMM_USERS CU WHERE CUA.USER_ID = ? AND CU.USER_ID = CUA.APPROVER_ID and  CU.STATUS = 'Y')

getBcAddressBookIdFromShipToId= SELECT BC_ADDRESS_BOOK_ID FROM BC_ADDRESS_BOOK WHERE SHIP_TO_ID=? AND BUYING_COMPANY_ID=?

updateAppGroupItemQuery :UPDATE SAVED_LIST_ITEMS SET QTY = ? WHERE ITEM_ID = ?  AND SAVED_LIST_ID = ? AND REQ_TOKEN_ID = ?

deleteAppGroupItemQuery : DELETE SAVED_LIST_ITEMS WHERE ITEM_ID = ?  AND SAVED_LIST_ID = ? AND REQ_TOKEN_ID = ?

getNextLevelApproverEmailId : SELECT CU.EMAIL,CU.USER_NAME,CU.FIRST_NAME,CU.LAST_NAME,SIL.* FROM SAVED_ITEM_LIST SIL,CIMM_USERS CU WHERE SIL.REQ_TOKEN_ID  = ? AND SIL.SENT_BY_APPR_USER_ID = ? AND SIL.APPROVER_SEQ = ? AND SIL.TYPE = 'A' AND SIL.APPROVAL_STATUS = 'N' AND SIL.STATUS = 'N' AND SIL.USER_ID = CU.USER_ID AND CU.STATUS = 'Y' ORDER BY SIL.APPROVER_SEQ

deleteApprovalCartItemQuery: DELETE SAVED_LIST_ITEMS WHERE REQ_TOKEN_ID = ?

deleteApprovalCartNameQuery:DELETE SAVED_ITEM_LIST WHERE REQ_TOKEN_ID = ?

deleteSavedCartItemQuery: DELETE SAVED_LIST_ITEMS WHERE SAVED_LIST_ID = ?
	
deleteSavedCartNameQuery:DELETE SAVED_ITEM_LIST WHERE SAVED_LIST_ID = ?

getApproveGroupList:SELECT CU.EMAIL,CU.USER_NAME,CU.FIRST_NAME,CU.LAST_NAME, SIL.* FROM SAVED_ITEM_LIST SIL,CIMM_USERS CU WHERE SIL.REQ_TOKEN_ID = ? AND SIL.SENT_BY_APPR_USER_ID = ? AND SIL.TYPE = 'A' AND SIL.USER_ID = CU.USER_ID AND CU.STATUS = 'Y' ORDER BY SIL.APPROVER_SEQ

getMultiCustomerPasswordForUserName:SELECT CU.USER_ID,CU.PASSWORD,CU.APPROVAL_USER_ID,CU.BUYING_COMPANY_ID,CU.PARENT_USER_ID,BC.LOGO,BC.ALLOW_SUBMIT_PO,BC.ALLOW_SUBMIT_RFQ,BC.ACCEPT_ORDER_BY_PO_NUM,BC.CREDIT_CARD_CHECKOUT,BC.GENERAL_CATALOG_ACCESS,BC.ALLOW_SUBMIT_NPR,BC.DISPLAY_CUST_PART_NUMBER,BC.ALLOW_LIVE_CHAT,BC.PARENT_COMPANY_ID,BC.ENTITY_ID,BC.ENTITY_ID_NUMBER,CU.PUNCHOUT_USER,CU.FIRST_LOGIN,CU.SHIP_VIA,CU.SHIP_VIA_DESC,CU.ECLIPSE_CONTACT_ID,CU.FIRST_NAME,CU.LAST_NAME,CU.DEFAULT_BILLING_ADDRESS_ID,CU.DEFAULT_SHIPPING_ADDRESS_ID,CU.EXISTING_CUSTOMER,BC.CUSTOMER_NAME,CU.COUNTRY,CR.ROLE_NAME,BC.WAREHOUSE_CODE_ID,BC.WAREHOUSE_CODE,CU.EMAIL,CU.USER_NAME,CU.OFFICE_PHONE,CU.CELL_PHONE,CU.JOB_TITLE,CU.SALES_REP_CONTACT,CU.EXTERNAL_SYSTEM2_USER_ID,CU.ADDRESS1,CU.CITY,CU.STATE,CU.ZIP,NVL(BC.SUBSET_ID, NVL(BC1.SUBSET_ID, NVL(W.SUBSET_ID,(select CONFIG_VALUE from SYSTEM_PARAMETERS where CONFIG_KEY = 'USERSUBSETID')))) SUBSET_ID, CU.PROFILE_IMAGE, CU.CHANGE_PASSWD_ON_LOGIN, CU.USER_PREFERENCES, BC.LANDING_PAGE_ID, CU.ACCEPT_ORDER_BY_PO_NUM USER_ACCEPT_ORDER_BY_PO_NUM FROM CIMM_USERS CU,BUYING_COMPANY BC,BUYING_COMPANY BC1,CIMM_USER_ROLES CUR,CIMM_ROLES CR,WAREHOUSE W WHERE CU.USER_TYPE='ECOMM' AND UPPER(CU.USER_NAME) = UPPER(?) AND CU.PASSWORD = ? AND CUR.USER_ID(+)= CU.USER_ID AND CR.ROLE_ID(+)= CUR.ROLE_ID AND BC.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID AND CU.STATUS= ? AND W.WAREHOUSE_ID(+)= BC.WAREHOUSE_CODE_ID AND BC1.BUYING_COMPANY_ID(+) = BC.PARENT_COMPANY_ID AND CU.SITE_ID=?

selectGroupItemForApproveCart:SELECT SLI.LIST_ITEM_ID,SLI.LIST_ITEM_ID AS CART_ID,IDMV.UNSPSC,SIL.SAVED_LIST_NAME,SIL.REQ_TOKEN_ID,SIL.APPROVAL_STATUS,SIL.APPROVER_SEQ,SIL.APPROVER_COMMENT,SIL.UPDATED_DATETIME,CU.USER_NAME,CU.USER_ID,SIL.TYPE,SIL.STATUS,IDMV.ITEM_ID,IDMV.ITEM_PRICE_ID,IDMV.SUBSET_ID,IDMV.PAGE_TITLE,IDMV.PART_NUMBER,IDMV.ALT_PART_NUMBER1,IDMV.SHORT_DESC,IDMV.LONG_DESC1,IDMV.BRAND_NAME,         IDMV.BRAND_IMAGE,IDMV.MANUFACTURER_NAME,IDMV.MANUFACTURER_ID,IDMV.MATERIAL_GROUP,IDMV.INVOICE_DESC,IDMV.PACK_DESC,NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM,IP.SALES_QTY,IDMV.IMAGE_NAME,IDMV.IMAGE_TYPE,         IP.OVERRIDE_PRICE_RULE,IP.NET_PRICE,SLI.QTY,SIL.SENT_BY_APPR_USER_ID,IDMV.MIN_ORDER_QTY,IDMV.ORDER_QTY_INTERVAL,NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY,IP.PACKAGE_FLAG,IP.CUSTOMER_PART_NUMBER,IDMV.MANUFACTURER_PART_NUMBER,((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE",         SLI.LINE_ITEM_COMMENT,IDMV.UPC,SLI.ITEM_LEVEL_SHIPVIA,SLI.ITEM_LEVEL_SHIPVIA_DESC,SLI.ITEMLEVEL_REQUIREDBYDATE,SLI.CATALOG_ID,SLI.GET_PRICE_FROM,         SLI.UOM,SLI.PRICE,IDMV.WEIGHT,IDMV.WEIGHT_UOM,IDMV.LENGTH,IDMV.LENGTH_UOM,IDMV.HEIGHT,IDMV.HEIGHT_UOM,IDMV.WIDTH,IDMV.WIDTH_UOM FROM ITEM_DETAILS_MV IDMV,SAVED_LIST_ITEMS SLI,SAVED_ITEM_LIST SIL,ITEM_PRICES IP,CIMM_USERS CU,BUYING_COMPANY BC WHERE SLI.REQ_TOKEN_ID = ? AND SLI.SAVED_LIST_ID = ? AND CU.STATUS = 'Y' AND BC.BUYING_COMPANY_ID = ? AND (SIL.USER_ID         = CU.USER_ID OR SIL.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID)       AND IP.ITEM_PRICE_ID     = IDMV.ITEM_PRICE_ID  AND SLI.ITEM_ID          = IP.ITEM_ID AND SIL.SAVED_LIST_ID    = SLI.SAVED_LIST_ID AND IDMV.SUBSET_ID       =?       UNION       SELECT SLI.LIST_ITEM_ID,         SLI.LIST_ITEM_ID AS CART_ID,         IDMV.UNSPSC,         SIL.SAVED_LIST_NAME,         SIL.REQ_TOKEN_ID,         SIL.APPROVER_SEQ,         SIL.APPROVER_COMMENT,         SIL.APPROVAL_STATUS,         SIL.UPDATED_DATETIME,          CU.USER_NAME,       CU.USER_ID,         SIL.TYPE,         SIL.STATUS,         IDMV.ITEM_ID,         IDMV.ITEM_PRICE_ID,         IDMV.SUBSET_ID,         IDMV.PAGE_TITLE,         IDMV.PART_NUMBER,         IDMV.ALT_PART_NUMBER1,         IDMV.SHORT_DESC,         IDMV.LONG_DESC1,         IDMV.BRAND_NAME,         IDMV.BRAND_IMAGE,         IDMV.MANUFACTURER_NAME,         IDMV.MANUFACTURER_ID,         IDMV.MATERIAL_GROUP,         IDMV.INVOICE_DESC,         IDMV.PACK_DESC,         NVL(IP.SALES_UOM,IDMV.SALES_UOM) SALES_UOM,         IP.SALES_QTY,         IDMV.IMAGE_NAME,         IDMV.IMAGE_TYPE,         IP.OVERRIDE_PRICE_RULE,         IP.NET_PRICE,         SLI.QTY,         SIL.SENT_BY_APPR_USER_ID,         IDMV.MIN_ORDER_QTY,         IDMV.ORDER_QTY_INTERVAL,         NVL(IP.PACKAGE_QTY,IDMV.PACKAGE_QTY) PACKAGE_QTY,         IP.PACKAGE_FLAG,         IP.CUSTOMER_PART_NUMBER,         IDMV.MANUFACTURER_PART_NUMBER,         ((IP.NET_PRICE/IP.SALES_QTY)*SLI.QTY) "EXTPRICE",         SLI.LINE_ITEM_COMMENT,         IDMV.UPC,         SLI.ITEM_LEVEL_SHIPVIA,         SLI.ITEM_LEVEL_SHIPVIA_DESC,         SLI.ITEMLEVEL_REQUIREDBYDATE,         SLI.CATALOG_ID,         SLI.GET_PRICE_FROM,         SLI.UOM,         SLI.PRICE,         IDMV.WEIGHT,         IDMV.WEIGHT_UOM,         IDMV.LENGTH,         IDMV.LENGTH_UOM,         IDMV.HEIGHT,         IDMV.HEIGHT_UOM,         IDMV.WIDTH,         IDMV.WIDTH_UOM       FROM ITEM_DETAILS_MV IDMV,         SAVED_LIST_ITEMS SLI,         SAVED_ITEM_LIST SIL,         ITEM_PRICES IP,         CIMM_USERS CU,         BUYING_COMPANY BC       WHERE SLI.REQ_TOKEN_ID = ?   AND SLI.SAVED_LIST_ID = ?    AND CU.STATUS = 'Y'       AND BC.BUYING_COMPANY_ID = ?       AND (SIL.USER_ID         = CU.USER_ID       OR SIL.BUYING_COMPANY_ID = CU.BUYING_COMPANY_ID       OR SIL.BUYING_COMPANY_ID = BC.PARENT_COMPANY_ID       OR SIL.BUYING_COMPANY_ID = BC.BUYING_COMPANY_ID)       AND IP.ITEM_PRICE_ID     = IDMV.ITEM_PRICE_ID       AND SLI.ITEM_ID          = IP.ITEM_ID       AND SIL.SAVED_LIST_ID    = SLI.SAVED_LIST_ID       AND IDMV.SUBSET_ID       = ?       AND IDMV.ITEM_ID NOT    IN         (SELECT SLI.ITEM_ID         FROM SAVED_LIST_ITEMS SLI,           ITEM_DETAILS_MV IDMV         WHERE SLI.REQ_TOKEN_ID = ?         AND IDMV.ITEM_ID        = SLI.ITEM_ID         AND IDMV.SUBSET_ID      =?         )

insertCustomerCategory = INSERT INTO CUSTOMER_LEVEL_CATEGORIES (PART_NUMBER,ENTITY_ID,CATEGORY_NAME) VALUES(?,?,?)

getmyItemListForMatrixPricing: SELECT MI.YTD,MI.PART_NUMBER,MI.UNIT_STOCK,MI.ID_LIST,MI.LAST_PURCHASED_UNIT,IM.ITEM_ID,MI.LAST_PURCHASED_DATE,MI.LAST_PURCHASED_QUANTITY FROM CNES_ENTITY_SPECIFIC_ITEMS MI,ITEM_MASTER IM WHERE UPPER(IM.PART_NUMBER) = UPPER(MI.PART_NUMBER) AND MI.CUSTOMER_NUMBER=? AND IM.ACTIVE=? AND IM.DISPLAY_ONLINE=?