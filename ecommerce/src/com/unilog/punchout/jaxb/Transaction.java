//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}URL"/>
 *         &lt;element ref="{}Option" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="requestName" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="a-dtype" type="{http://www.w3.org/2001/XMLSchema}NMTOKENS" fixed="requestName NMTOKEN" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "url",
    "option"
})
@XmlRootElement(name = "Transaction")
public class Transaction
    implements Serializable, Equals, HashCode, ToString
{

    /**
	 * 
	 */
	private static final long serialVersionUID = -9197301246173361895L;
	@XmlElement(name = "URL", required = true)
    protected URL url;
    @XmlElement(name = "Option")
    protected List<Option> option;
    @XmlAttribute(name = "requestName", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String requestName;
    @XmlAttribute(name = "a-dtype")
    @XmlSchemaType(name = "NMTOKENS")
    protected List<String> aDtype;

    /**
     * Gets the value of the url property.
     * 
     * @return
     *     possible object is
     *     {@link URL }
     *     
     */
    public URL getURL() {
        return url;
    }

    /**
     * Sets the value of the url property.
     * 
     * @param value
     *     allowed object is
     *     {@link URL }
     *     
     */
    public void setURL(URL value) {
        this.url = value;
    }

    /**
     * Gets the value of the option property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the option property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOption().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Option }
     * 
     * 
     */
    public List<Option> getOption() {
        if (option == null) {
            option = new ArrayList<Option>();
        }
        return this.option;
    }

    /**
     * Gets the value of the requestName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestName() {
        return requestName;
    }

    /**
     * Sets the value of the requestName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequestName(String value) {
        this.requestName = value;
    }

    /**
     * Gets the value of the aDtype property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the aDtype property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getADtype().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getADtype() {
        if (aDtype == null) {
            aDtype = new ArrayList<String>();
        }
        return this.aDtype;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            URL theURL;
            theURL = this.getURL();
            strategy.appendField(locator, this, "url", buffer, theURL);
        }
        {
            List<Option> theOption;
            theOption = (((this.option!= null)&&(!this.option.isEmpty()))?this.getOption():null);
            strategy.appendField(locator, this, "option", buffer, theOption);
        }
        {
            String theRequestName;
            theRequestName = this.getRequestName();
            strategy.appendField(locator, this, "requestName", buffer, theRequestName);
        }
        {
            List<String> theADtype;
            theADtype = (((this.aDtype!= null)&&(!this.aDtype.isEmpty()))?this.getADtype():null);
            strategy.appendField(locator, this, "aDtype", buffer, theADtype);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Transaction)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Transaction that = ((Transaction) object);
        {
            URL lhsURL;
            lhsURL = this.getURL();
            URL rhsURL;
            rhsURL = that.getURL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsURL), LocatorUtils.property(thatLocator, "url", rhsURL), lhsURL, rhsURL)) {
                return false;
            }
        }
        {
            List<Option> lhsOption;
            lhsOption = (((this.option!= null)&&(!this.option.isEmpty()))?this.getOption():null);
            List<Option> rhsOption;
            rhsOption = (((that.option!= null)&&(!that.option.isEmpty()))?that.getOption():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "option", lhsOption), LocatorUtils.property(thatLocator, "option", rhsOption), lhsOption, rhsOption)) {
                return false;
            }
        }
        {
            String lhsRequestName;
            lhsRequestName = this.getRequestName();
            String rhsRequestName;
            rhsRequestName = that.getRequestName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestName", lhsRequestName), LocatorUtils.property(thatLocator, "requestName", rhsRequestName), lhsRequestName, rhsRequestName)) {
                return false;
            }
        }
        {
            List<String> lhsADtype;
            lhsADtype = (((this.aDtype!= null)&&(!this.aDtype.isEmpty()))?this.getADtype():null);
            List<String> rhsADtype;
            rhsADtype = (((that.aDtype!= null)&&(!that.aDtype.isEmpty()))?that.getADtype():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "aDtype", lhsADtype), LocatorUtils.property(thatLocator, "aDtype", rhsADtype), lhsADtype, rhsADtype)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            URL theURL;
            theURL = this.getURL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theURL), currentHashCode, theURL);
        }
        {
            List<Option> theOption;
            theOption = (((this.option!= null)&&(!this.option.isEmpty()))?this.getOption():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "option", theOption), currentHashCode, theOption);
        }
        {
            String theRequestName;
            theRequestName = this.getRequestName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestName", theRequestName), currentHashCode, theRequestName);
        }
        {
            List<String> theADtype;
            theADtype = (((this.aDtype!= null)&&(!this.aDtype.isEmpty()))?this.getADtype():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "aDtype", theADtype), currentHashCode, theADtype);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
