//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Status" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element ref="{}PunchOutOrderMessage"/>
 *           &lt;element ref="{}ProviderDoneMessage"/>
 *           &lt;element ref="{}SubscriptionChangeMessage"/>
 *           &lt;element ref="{}DataAvailableMessage"/>
 *           &lt;element ref="{}SupplierChangeMessage"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="deploymentMode" default="production">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="test"/>
 *             &lt;enumeration value="production"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="inReplyTo" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "status",
    "punchOutOrderMessage",
    "providerDoneMessage",
    "subscriptionChangeMessage",
    "dataAvailableMessage",
    "supplierChangeMessage"
})
@XmlRootElement(name = "Message")
public class Message
    implements Serializable, Equals, HashCode, ToString
{

    @XmlElement(name = "Status")
    protected Status status;
    @XmlElement(name = "PunchOutOrderMessage")
    protected PunchOutOrderMessage punchOutOrderMessage;
    @XmlElement(name = "ProviderDoneMessage")
    protected ProviderDoneMessage providerDoneMessage;
    @XmlElement(name = "SubscriptionChangeMessage")
    protected SubscriptionChangeMessage subscriptionChangeMessage;
    @XmlElement(name = "DataAvailableMessage")
    protected DataAvailableMessage dataAvailableMessage;
    @XmlElement(name = "SupplierChangeMessage")
    protected SupplierChangeMessage supplierChangeMessage;
    @XmlAttribute(name = "deploymentMode")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String deploymentMode;
    @XmlAttribute(name = "inReplyTo")
    @XmlSchemaType(name = "anySimpleType")
    protected String inReplyTo;

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link Status }
     *     
     */
    public Status getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link Status }
     *     
     */
    public void setStatus(Status value) {
        this.status = value;
    }

    /**
     * Gets the value of the punchOutOrderMessage property.
     * 
     * @return
     *     possible object is
     *     {@link PunchOutOrderMessage }
     *     
     */
    public PunchOutOrderMessage getPunchOutOrderMessage() {
        return punchOutOrderMessage;
    }

    /**
     * Sets the value of the punchOutOrderMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link PunchOutOrderMessage }
     *     
     */
    public void setPunchOutOrderMessage(PunchOutOrderMessage value) {
        this.punchOutOrderMessage = value;
    }

    /**
     * Gets the value of the providerDoneMessage property.
     * 
     * @return
     *     possible object is
     *     {@link ProviderDoneMessage }
     *     
     */
    public ProviderDoneMessage getProviderDoneMessage() {
        return providerDoneMessage;
    }

    /**
     * Sets the value of the providerDoneMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProviderDoneMessage }
     *     
     */
    public void setProviderDoneMessage(ProviderDoneMessage value) {
        this.providerDoneMessage = value;
    }

    /**
     * Gets the value of the subscriptionChangeMessage property.
     * 
     * @return
     *     possible object is
     *     {@link SubscriptionChangeMessage }
     *     
     */
    public SubscriptionChangeMessage getSubscriptionChangeMessage() {
        return subscriptionChangeMessage;
    }

    /**
     * Sets the value of the subscriptionChangeMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link SubscriptionChangeMessage }
     *     
     */
    public void setSubscriptionChangeMessage(SubscriptionChangeMessage value) {
        this.subscriptionChangeMessage = value;
    }

    /**
     * Gets the value of the dataAvailableMessage property.
     * 
     * @return
     *     possible object is
     *     {@link DataAvailableMessage }
     *     
     */
    public DataAvailableMessage getDataAvailableMessage() {
        return dataAvailableMessage;
    }

    /**
     * Sets the value of the dataAvailableMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataAvailableMessage }
     *     
     */
    public void setDataAvailableMessage(DataAvailableMessage value) {
        this.dataAvailableMessage = value;
    }

    /**
     * Gets the value of the supplierChangeMessage property.
     * 
     * @return
     *     possible object is
     *     {@link SupplierChangeMessage }
     *     
     */
    public SupplierChangeMessage getSupplierChangeMessage() {
        return supplierChangeMessage;
    }

    /**
     * Sets the value of the supplierChangeMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link SupplierChangeMessage }
     *     
     */
    public void setSupplierChangeMessage(SupplierChangeMessage value) {
        this.supplierChangeMessage = value;
    }

    /**
     * Gets the value of the deploymentMode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDeploymentMode() {
        if (deploymentMode == null) {
            return "production";
        } else {
            return deploymentMode;
        }
    }

    /**
     * Sets the value of the deploymentMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDeploymentMode(String value) {
        this.deploymentMode = value;
    }

    /**
     * Gets the value of the inReplyTo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInReplyTo() {
        return inReplyTo;
    }

    /**
     * Sets the value of the inReplyTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInReplyTo(String value) {
        this.inReplyTo = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Status theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            PunchOutOrderMessage thePunchOutOrderMessage;
            thePunchOutOrderMessage = this.getPunchOutOrderMessage();
            strategy.appendField(locator, this, "punchOutOrderMessage", buffer, thePunchOutOrderMessage);
        }
        {
            ProviderDoneMessage theProviderDoneMessage;
            theProviderDoneMessage = this.getProviderDoneMessage();
            strategy.appendField(locator, this, "providerDoneMessage", buffer, theProviderDoneMessage);
        }
        {
            SubscriptionChangeMessage theSubscriptionChangeMessage;
            theSubscriptionChangeMessage = this.getSubscriptionChangeMessage();
            strategy.appendField(locator, this, "subscriptionChangeMessage", buffer, theSubscriptionChangeMessage);
        }
        {
            DataAvailableMessage theDataAvailableMessage;
            theDataAvailableMessage = this.getDataAvailableMessage();
            strategy.appendField(locator, this, "dataAvailableMessage", buffer, theDataAvailableMessage);
        }
        {
            SupplierChangeMessage theSupplierChangeMessage;
            theSupplierChangeMessage = this.getSupplierChangeMessage();
            strategy.appendField(locator, this, "supplierChangeMessage", buffer, theSupplierChangeMessage);
        }
        {
            String theDeploymentMode;
            theDeploymentMode = this.getDeploymentMode();
            strategy.appendField(locator, this, "deploymentMode", buffer, theDeploymentMode);
        }
        {
            String theInReplyTo;
            theInReplyTo = this.getInReplyTo();
            strategy.appendField(locator, this, "inReplyTo", buffer, theInReplyTo);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Message)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Message that = ((Message) object);
        {
            Status lhsStatus;
            lhsStatus = this.getStatus();
            Status rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            PunchOutOrderMessage lhsPunchOutOrderMessage;
            lhsPunchOutOrderMessage = this.getPunchOutOrderMessage();
            PunchOutOrderMessage rhsPunchOutOrderMessage;
            rhsPunchOutOrderMessage = that.getPunchOutOrderMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "punchOutOrderMessage", lhsPunchOutOrderMessage), LocatorUtils.property(thatLocator, "punchOutOrderMessage", rhsPunchOutOrderMessage), lhsPunchOutOrderMessage, rhsPunchOutOrderMessage)) {
                return false;
            }
        }
        {
            ProviderDoneMessage lhsProviderDoneMessage;
            lhsProviderDoneMessage = this.getProviderDoneMessage();
            ProviderDoneMessage rhsProviderDoneMessage;
            rhsProviderDoneMessage = that.getProviderDoneMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "providerDoneMessage", lhsProviderDoneMessage), LocatorUtils.property(thatLocator, "providerDoneMessage", rhsProviderDoneMessage), lhsProviderDoneMessage, rhsProviderDoneMessage)) {
                return false;
            }
        }
        {
            SubscriptionChangeMessage lhsSubscriptionChangeMessage;
            lhsSubscriptionChangeMessage = this.getSubscriptionChangeMessage();
            SubscriptionChangeMessage rhsSubscriptionChangeMessage;
            rhsSubscriptionChangeMessage = that.getSubscriptionChangeMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subscriptionChangeMessage", lhsSubscriptionChangeMessage), LocatorUtils.property(thatLocator, "subscriptionChangeMessage", rhsSubscriptionChangeMessage), lhsSubscriptionChangeMessage, rhsSubscriptionChangeMessage)) {
                return false;
            }
        }
        {
            DataAvailableMessage lhsDataAvailableMessage;
            lhsDataAvailableMessage = this.getDataAvailableMessage();
            DataAvailableMessage rhsDataAvailableMessage;
            rhsDataAvailableMessage = that.getDataAvailableMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataAvailableMessage", lhsDataAvailableMessage), LocatorUtils.property(thatLocator, "dataAvailableMessage", rhsDataAvailableMessage), lhsDataAvailableMessage, rhsDataAvailableMessage)) {
                return false;
            }
        }
        {
            SupplierChangeMessage lhsSupplierChangeMessage;
            lhsSupplierChangeMessage = this.getSupplierChangeMessage();
            SupplierChangeMessage rhsSupplierChangeMessage;
            rhsSupplierChangeMessage = that.getSupplierChangeMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplierChangeMessage", lhsSupplierChangeMessage), LocatorUtils.property(thatLocator, "supplierChangeMessage", rhsSupplierChangeMessage), lhsSupplierChangeMessage, rhsSupplierChangeMessage)) {
                return false;
            }
        }
        {
            String lhsDeploymentMode;
            lhsDeploymentMode = this.getDeploymentMode();
            String rhsDeploymentMode;
            rhsDeploymentMode = that.getDeploymentMode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deploymentMode", lhsDeploymentMode), LocatorUtils.property(thatLocator, "deploymentMode", rhsDeploymentMode), lhsDeploymentMode, rhsDeploymentMode)) {
                return false;
            }
        }
        {
            String lhsInReplyTo;
            lhsInReplyTo = this.getInReplyTo();
            String rhsInReplyTo;
            rhsInReplyTo = that.getInReplyTo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inReplyTo", lhsInReplyTo), LocatorUtils.property(thatLocator, "inReplyTo", rhsInReplyTo), lhsInReplyTo, rhsInReplyTo)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Status theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            PunchOutOrderMessage thePunchOutOrderMessage;
            thePunchOutOrderMessage = this.getPunchOutOrderMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "punchOutOrderMessage", thePunchOutOrderMessage), currentHashCode, thePunchOutOrderMessage);
        }
        {
            ProviderDoneMessage theProviderDoneMessage;
            theProviderDoneMessage = this.getProviderDoneMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "providerDoneMessage", theProviderDoneMessage), currentHashCode, theProviderDoneMessage);
        }
        {
            SubscriptionChangeMessage theSubscriptionChangeMessage;
            theSubscriptionChangeMessage = this.getSubscriptionChangeMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subscriptionChangeMessage", theSubscriptionChangeMessage), currentHashCode, theSubscriptionChangeMessage);
        }
        {
            DataAvailableMessage theDataAvailableMessage;
            theDataAvailableMessage = this.getDataAvailableMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataAvailableMessage", theDataAvailableMessage), currentHashCode, theDataAvailableMessage);
        }
        {
            SupplierChangeMessage theSupplierChangeMessage;
            theSupplierChangeMessage = this.getSupplierChangeMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplierChangeMessage", theSupplierChangeMessage), currentHashCode, theSupplierChangeMessage);
        }
        {
            String theDeploymentMode;
            theDeploymentMode = this.getDeploymentMode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deploymentMode", theDeploymentMode), currentHashCode, theDeploymentMode);
        }
        {
            String theInReplyTo;
            theInReplyTo = this.getInReplyTo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inReplyTo", theInReplyTo), currentHashCode, theInReplyTo);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
