//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.07 at 10:13:20 AM EDT 
//


package com.unilog.punchout.jaxb;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}ItemID"/>
 *         &lt;element ref="{}ItemDetail"/>
 *         &lt;element ref="{}IndexItemDetail"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "itemID",
    "itemDetail",
    "indexItemDetail"
})
@XmlRootElement(name = "IndexItemAdd")
public class IndexItemAdd
    implements Serializable, Equals, HashCode, ToString
{

    @XmlElement(name = "ItemID", required = true)
    protected ItemID itemID;
    @XmlElement(name = "ItemDetail", required = true)
    protected ItemDetail itemDetail;
    @XmlElement(name = "IndexItemDetail", required = true)
    protected IndexItemDetail indexItemDetail;

    /**
     * Gets the value of the itemID property.
     * 
     * @return
     *     possible object is
     *     {@link ItemID }
     *     
     */
    public ItemID getItemID() {
        return itemID;
    }

    /**
     * Sets the value of the itemID property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemID }
     *     
     */
    public void setItemID(ItemID value) {
        this.itemID = value;
    }

    /**
     * Gets the value of the itemDetail property.
     * 
     * @return
     *     possible object is
     *     {@link ItemDetail }
     *     
     */
    public ItemDetail getItemDetail() {
        return itemDetail;
    }

    /**
     * Sets the value of the itemDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemDetail }
     *     
     */
    public void setItemDetail(ItemDetail value) {
        this.itemDetail = value;
    }

    /**
     * Gets the value of the indexItemDetail property.
     * 
     * @return
     *     possible object is
     *     {@link IndexItemDetail }
     *     
     */
    public IndexItemDetail getIndexItemDetail() {
        return indexItemDetail;
    }

    /**
     * Sets the value of the indexItemDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link IndexItemDetail }
     *     
     */
    public void setIndexItemDetail(IndexItemDetail value) {
        this.indexItemDetail = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ItemID theItemID;
            theItemID = this.getItemID();
            strategy.appendField(locator, this, "itemID", buffer, theItemID);
        }
        {
            ItemDetail theItemDetail;
            theItemDetail = this.getItemDetail();
            strategy.appendField(locator, this, "itemDetail", buffer, theItemDetail);
        }
        {
            IndexItemDetail theIndexItemDetail;
            theIndexItemDetail = this.getIndexItemDetail();
            strategy.appendField(locator, this, "indexItemDetail", buffer, theIndexItemDetail);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof IndexItemAdd)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final IndexItemAdd that = ((IndexItemAdd) object);
        {
            ItemID lhsItemID;
            lhsItemID = this.getItemID();
            ItemID rhsItemID;
            rhsItemID = that.getItemID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemID", lhsItemID), LocatorUtils.property(thatLocator, "itemID", rhsItemID), lhsItemID, rhsItemID)) {
                return false;
            }
        }
        {
            ItemDetail lhsItemDetail;
            lhsItemDetail = this.getItemDetail();
            ItemDetail rhsItemDetail;
            rhsItemDetail = that.getItemDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemDetail", lhsItemDetail), LocatorUtils.property(thatLocator, "itemDetail", rhsItemDetail), lhsItemDetail, rhsItemDetail)) {
                return false;
            }
        }
        {
            IndexItemDetail lhsIndexItemDetail;
            lhsIndexItemDetail = this.getIndexItemDetail();
            IndexItemDetail rhsIndexItemDetail;
            rhsIndexItemDetail = that.getIndexItemDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "indexItemDetail", lhsIndexItemDetail), LocatorUtils.property(thatLocator, "indexItemDetail", rhsIndexItemDetail), lhsIndexItemDetail, rhsIndexItemDetail)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ItemID theItemID;
            theItemID = this.getItemID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemID", theItemID), currentHashCode, theItemID);
        }
        {
            ItemDetail theItemDetail;
            theItemDetail = this.getItemDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemDetail", theItemDetail), currentHashCode, theItemDetail);
        }
        {
            IndexItemDetail theIndexItemDetail;
            theIndexItemDetail = this.getIndexItemDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "indexItemDetail", theIndexItemDetail), currentHashCode, theIndexItemDetail);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
